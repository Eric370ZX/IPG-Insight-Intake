//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum EntitlementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Waiting = 4,
	}
	
	/// <summary>
	/// Defines the amount and type of support a customer should receive.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("entitlement")]
	public partial class Entitlement : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string AccountId = "accountid";
			public const string AllocationTypeCode = "allocationtypecode";
			public const string ContactId = "contactid";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CustomerId = "customerid";
			public const string DecreaseRemainingOn = "decreaseremainingon";
			public const string Description = "description";
			public const string EmailAddress = "emailaddress";
			public const string EndDate = "enddate";
			public const string EntitlementId = "entitlementid";
			public const string Id = "entitlementid";
			public const string EntitlementTemplateId = "entitlementtemplateid";
			public const string entitytype = "entitytype";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_Active = "ipg_active";
			public const string ipg_BillSeparatelyforImplants = "ipg_billseparatelyforimplants";
			public const string ipg_Billtopatient = "ipg_billtopatient";
			public const string ipg_carrier_network_status = "ipg_carrier_network_status";
			public const string ipg_CarrierId = "ipg_carrierid";
			public const string ipg_CarrierParentContractId = "ipg_carrierparentcontractid";
			public const string ipg_CarrierUnsupported = "ipg_carrierunsupported";
			public const string ipg_CarveoutforImplants = "ipg_carveoutforimplants";
			public const string ipg_contract_name = "ipg_contract_name";
			public const string ipg_contract_status = "ipg_contract_status";
			public const string ipg_contract_type = "ipg_contract_type";
			public const string ipg_CPTInclusionType = "ipg_cptinclusiontype";
			public const string ipg_DisableMAIC = "ipg_disablemaic";
			public const string ipg_EntitlementType = "ipg_entitlementtype";
			public const string ipg_ExcludedPlanType = "ipg_excludedplantype";
			public const string ipg_ExcludedPlanTypeMultiSelect = "ipg_excludedplantypemultiselect";
			public const string ipg_facilitycarrierId = "ipg_facilitycarrierid";
			public const string ipg_facilitycarrierstatus = "ipg_facilitycarrierstatus";
			public const string ipg_FacilityId = "ipg_facilityid";
			public const string ipg_ImplantStatus = "ipg_implantstatus";
			public const string ipg_MacRuleDate = "ipg_macruledate";
			public const string ipg_maic_enabled = "ipg_maic_enabled";
			public const string ipg_NetworkStatus = "ipg_networkstatus";
			public const string ipg_PatientBilling = "ipg_patientbilling";
			public const string ipg_Threshold = "ipg_threshold";
			public const string ipg_TodaysDate = "ipg_todaysdate";
			public const string IsDefault = "isdefault";
			public const string KbAccessLevel = "kbaccesslevel";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProcessId = "processid";
			public const string RemainingTerms = "remainingterms";
			public const string RestrictCaseCreation = "restrictcasecreation";
			public const string SLAId = "slaid";
			public const string StageId = "stageid";
			public const string StartDate = "startdate";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalTerms = "totalterms";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Entitlement() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "entitlement";
		
		public const string EntitySchemaName = "Entitlement";
		
		public const string PrimaryIdAttribute = "entitlementid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntityLogicalCollectionName = "entitlements";
		
		public const string EntitySetName = "entitlements";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// Select the type of entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allocationtypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AllocationTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("allocationtypecode");
			}
			set
			{
				this.OnPropertyChanging("AllocationTypeCode");
				this.SetAttributeValue("allocationtypecode", value);
				this.OnPropertyChanged("AllocationTypeCode");
			}
		}
		
		/// <summary>
		/// Select the type of entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allocationtypecode")]
		public virtual Entitlement_AllocationTypeCode? AllocationTypeCodeEnum
		{
			get
			{
				return ((Entitlement_AllocationTypeCode?)(EntityOptionSetEnum.GetEnum(this, "allocationtypecode")));
			}
			set
			{
				this.OnPropertyChanging("AllocationTypeCode");
				this.SetAttributeValue("allocationtypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("AllocationTypeCode");
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Choose a contact or account for which this entitlement has been defined.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				this.OnPropertyChanging("CustomerId");
				this.SetAttributeValue("customerid", value);
				this.OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// Select whether to decrease the remaining terms when the case is created or when it is resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decreaseremainingon")]
		public Microsoft.Xrm.Sdk.OptionSetValue DecreaseRemainingOn
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("decreaseremainingon");
			}
			set
			{
				this.OnPropertyChanging("DecreaseRemainingOn");
				this.SetAttributeValue("decreaseremainingon", value);
				this.OnPropertyChanged("DecreaseRemainingOn");
			}
		}
		
		/// <summary>
		/// Select whether to decrease the remaining terms when the case is created or when it is resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decreaseremainingon")]
		public virtual Entitlement_DecreaseRemainingOn? DecreaseRemainingOnEnum
		{
			get
			{
				return ((Entitlement_DecreaseRemainingOn?)(EntityOptionSetEnum.GetEnum(this, "decreaseremainingon")));
			}
			set
			{
				this.OnPropertyChanging("DecreaseRemainingOn");
				this.SetAttributeValue("decreaseremainingon", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("DecreaseRemainingOn");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// The primary email address for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.OnPropertyChanging("EmailAddress");
				this.SetAttributeValue("emailaddress", value);
				this.OnPropertyChanged("EmailAddress");
			}
		}
		
		/// <summary>
		/// Enter the date when the entitlement ends.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enddate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("enddate");
			}
			set
			{
				this.OnPropertyChanging("EndDate");
				this.SetAttributeValue("enddate", value);
				this.OnPropertyChanged("EndDate");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public System.Nullable<System.Guid> EntitlementId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entitlementid");
			}
			set
			{
				this.OnPropertyChanging("EntitlementId");
				this.SetAttributeValue("entitlementid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("EntitlementId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.EntitlementId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for Entitlement Template associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementtemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference EntitlementTemplateId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("entitlementtemplateid");
			}
			set
			{
				this.OnPropertyChanging("EntitlementTemplateId");
				this.SetAttributeValue("entitlementtemplateid", value);
				this.OnPropertyChanged("EntitlementTemplateId");
			}
		}
		
		/// <summary>
		/// Entity type for which the entitlement applies
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitytype")]
		public Microsoft.Xrm.Sdk.OptionSetValue entitytype
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("entitytype");
			}
			set
			{
				this.OnPropertyChanging("entitytype");
				this.SetAttributeValue("entitytype", value);
				this.OnPropertyChanged("entitytype");
			}
		}
		
		/// <summary>
		/// Entity type for which the entitlement applies
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitytype")]
		public virtual EntityType? entitytypeEnum
		{
			get
			{
				return ((EntityType?)(EntityOptionSetEnum.GetEnum(this, "entitytype")));
			}
			set
			{
				this.OnPropertyChanging("entitytype");
				this.SetAttributeValue("entitytype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("entitytype");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the contact with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Represents if the entitlement is active or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_active")]
		public System.Nullable<bool> ipg_Active
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_active");
			}
			set
			{
				this.OnPropertyChanging("ipg_Active");
				this.SetAttributeValue("ipg_active", value);
				this.OnPropertyChanged("ipg_Active");
			}
		}
		
		/// <summary>
		/// Bill separately for the devices only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_billseparatelyforimplants")]
		public System.Nullable<bool> ipg_BillSeparatelyforImplants
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_billseparatelyforimplants");
			}
			set
			{
				this.OnPropertyChanging("ipg_BillSeparatelyforImplants");
				this.SetAttributeValue("ipg_billseparatelyforimplants", value);
				this.OnPropertyChanged("ipg_BillSeparatelyforImplants");
			}
		}
		
		/// <summary>
		/// Represents whether to bill to patients for this facility carrier contract or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_billtopatient")]
		public System.Nullable<bool> ipg_Billtopatient
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_billtopatient");
			}
			set
			{
				this.OnPropertyChanging("ipg_Billtopatient");
				this.SetAttributeValue("ipg_billtopatient", value);
				this.OnPropertyChanged("ipg_Billtopatient");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrier_network_status")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_carrier_network_status
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_carrier_network_status");
			}
			set
			{
				this.OnPropertyChanging("ipg_carrier_network_status");
				this.SetAttributeValue("ipg_carrier_network_status", value);
				this.OnPropertyChanged("ipg_carrier_network_status");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrier_network_status")]
		public virtual Entitlement_ipg_carrier_network_status? ipg_carrier_network_statusEnum
		{
			get
			{
				return ((Entitlement_ipg_carrier_network_status?)(EntityOptionSetEnum.GetEnum(this, "ipg_carrier_network_status")));
			}
			set
			{
				this.OnPropertyChanging("ipg_carrier_network_status");
				this.SetAttributeValue("ipg_carrier_network_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_carrier_network_status");
			}
		}
		
		/// <summary>
		/// Represents carrier in the contract
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrierid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_CarrierId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_carrierid");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarrierId");
				this.SetAttributeValue("ipg_carrierid", value);
				this.OnPropertyChanged("ipg_CarrierId");
			}
		}
		
		/// <summary>
		/// Represents carrier parent contract
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrierparentcontractid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_CarrierParentContractId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_carrierparentcontractid");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarrierParentContractId");
				this.SetAttributeValue("ipg_carrierparentcontractid", value);
				this.OnPropertyChanged("ipg_CarrierParentContractId");
			}
		}
		
		/// <summary>
		/// Indicates if the Carrier is Supported for this facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrierunsupported")]
		public System.Nullable<bool> ipg_CarrierUnsupported
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_carrierunsupported");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarrierUnsupported");
				this.SetAttributeValue("ipg_carrierunsupported", value);
				this.OnPropertyChanged("ipg_CarrierUnsupported");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carveoutforimplants")]
		public System.Nullable<bool> ipg_CarveoutforImplants
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_carveoutforimplants");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarveoutforImplants");
				this.SetAttributeValue("ipg_carveoutforimplants", value);
				this.OnPropertyChanged("ipg_CarveoutforImplants");
			}
		}
		
		/// <summary>
		/// Soumitra[06/15/2021] - There is no purpose for this field when we already have a name field on Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_contract_name")]
		public string ipg_contract_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_contract_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_contract_name");
				this.SetAttributeValue("ipg_contract_name", value);
				this.OnPropertyChanged("ipg_contract_name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_contract_status")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_contract_status
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_contract_status");
			}
			set
			{
				this.OnPropertyChanging("ipg_contract_status");
				this.SetAttributeValue("ipg_contract_status", value);
				this.OnPropertyChanged("ipg_contract_status");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_contract_status")]
		public virtual Entitlement_ipg_contract_status? ipg_contract_statusEnum
		{
			get
			{
				return ((Entitlement_ipg_contract_status?)(EntityOptionSetEnum.GetEnum(this, "ipg_contract_status")));
			}
			set
			{
				this.OnPropertyChanging("ipg_contract_status");
				this.SetAttributeValue("ipg_contract_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_contract_status");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_contract_type")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_contract_type
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_contract_type");
			}
			set
			{
				this.OnPropertyChanging("ipg_contract_type");
				this.SetAttributeValue("ipg_contract_type", value);
				this.OnPropertyChanged("ipg_contract_type");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_contract_type")]
		public virtual Entitlement_ipg_contract_type? ipg_contract_typeEnum
		{
			get
			{
				return ((Entitlement_ipg_contract_type?)(EntityOptionSetEnum.GetEnum(this, "ipg_contract_type")));
			}
			set
			{
				this.OnPropertyChanging("ipg_contract_type");
				this.SetAttributeValue("ipg_contract_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_contract_type");
			}
		}
		
		/// <summary>
		/// Represents CPT inclusion type whether CPT belongs to the accepted list of the exclusion list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptinclusiontype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_CPTInclusionType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_cptinclusiontype");
			}
			set
			{
				this.OnPropertyChanging("ipg_CPTInclusionType");
				this.SetAttributeValue("ipg_cptinclusiontype", value);
				this.OnPropertyChanged("ipg_CPTInclusionType");
			}
		}
		
		/// <summary>
		/// Represents CPT inclusion type whether CPT belongs to the accepted list of the exclusion list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptinclusiontype")]
		public virtual ipg_cptinclusiontyperule? ipg_CPTInclusionTypeEnum
		{
			get
			{
				return ((ipg_cptinclusiontyperule?)(EntityOptionSetEnum.GetEnum(this, "ipg_cptinclusiontype")));
			}
			set
			{
				this.OnPropertyChanging("ipg_CPTInclusionType");
				this.SetAttributeValue("ipg_cptinclusiontype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_CPTInclusionType");
			}
		}
		
		/// <summary>
		/// Represents whether MAIC is disabled for the contract or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_disablemaic")]
		public System.Nullable<bool> ipg_DisableMAIC
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_disablemaic");
			}
			set
			{
				this.OnPropertyChanging("ipg_DisableMAIC");
				this.SetAttributeValue("ipg_disablemaic", value);
				this.OnPropertyChanged("ipg_DisableMAIC");
			}
		}
		
		/// <summary>
		/// Entitlement type: business service agreement (BSA), etc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_entitlementtype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_EntitlementType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_entitlementtype");
			}
			set
			{
				this.OnPropertyChanging("ipg_EntitlementType");
				this.SetAttributeValue("ipg_entitlementtype", value);
				this.OnPropertyChanged("ipg_EntitlementType");
			}
		}
		
		/// <summary>
		/// Entitlement type: business service agreement (BSA), etc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_entitlementtype")]
		public virtual ipg_EntitlementTypes? ipg_EntitlementTypeEnum
		{
			get
			{
				return ((ipg_EntitlementTypes?)(EntityOptionSetEnum.GetEnum(this, "ipg_entitlementtype")));
			}
			set
			{
				this.OnPropertyChanging("ipg_EntitlementType");
				this.SetAttributeValue("ipg_entitlementtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_EntitlementType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_excludedplantype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_ExcludedPlanType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_excludedplantype");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExcludedPlanType");
				this.SetAttributeValue("ipg_excludedplantype", value);
				this.OnPropertyChanged("ipg_ExcludedPlanType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_excludedplantype")]
		public virtual ipg_CarrierPlanTypes1? ipg_ExcludedPlanTypeEnum
		{
			get
			{
				return ((ipg_CarrierPlanTypes1?)(EntityOptionSetEnum.GetEnum(this, "ipg_excludedplantype")));
			}
			set
			{
				this.OnPropertyChanging("ipg_ExcludedPlanType");
				this.SetAttributeValue("ipg_excludedplantype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_ExcludedPlanType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_excludedplantypemultiselect")]
		public Microsoft.Xrm.Sdk.OptionSetValueCollection ipg_ExcludedPlanTypeMultiSelect
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("ipg_excludedplantypemultiselect");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExcludedPlanTypeMultiSelect");
				this.SetAttributeValue("ipg_excludedplantypemultiselect", value);
				this.OnPropertyChanged("ipg_ExcludedPlanTypeMultiSelect");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_excludedplantypemultiselect")]
		public virtual System.Collections.Generic.IEnumerable<ipg_CarrierPlanTypes1> ipg_ExcludedPlanTypeMultiSelectEnum
		{
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ipg_CarrierPlanTypes1>(this, "ipg_excludedplantypemultiselect");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExcludedPlanTypeMultiSelect");
				this.SetAttributeValue("ipg_excludedplantypemultiselect", EntityOptionSetEnum.GetMultiEnum(this, "ipg_excludedplantypemultiselect", value));
				this.OnPropertyChanged("ipg_ExcludedPlanTypeMultiSelect");
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_facilitycarrierid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_facilitycarrierId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_facilitycarrierid");
			}
			set
			{
				this.OnPropertyChanging("ipg_facilitycarrierId");
				this.SetAttributeValue("ipg_facilitycarrierid", value);
				this.OnPropertyChanged("ipg_facilitycarrierId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_facilitycarrierstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_facilitycarrierstatus
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_facilitycarrierstatus");
			}
			set
			{
				this.OnPropertyChanging("ipg_facilitycarrierstatus");
				this.SetAttributeValue("ipg_facilitycarrierstatus", value);
				this.OnPropertyChanged("ipg_facilitycarrierstatus");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_facilitycarrierstatus")]
		public virtual Entitlement_ipg_facilitycarrierstatus? ipg_facilitycarrierstatusEnum
		{
			get
			{
				return ((Entitlement_ipg_facilitycarrierstatus?)(EntityOptionSetEnum.GetEnum(this, "ipg_facilitycarrierstatus")));
			}
			set
			{
				this.OnPropertyChanging("ipg_facilitycarrierstatus");
				this.SetAttributeValue("ipg_facilitycarrierstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_facilitycarrierstatus");
			}
		}
		
		/// <summary>
		/// Represents facility in the contract
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_facilityid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_FacilityId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_facilityid");
			}
			set
			{
				this.OnPropertyChanging("ipg_FacilityId");
				this.SetAttributeValue("ipg_facilityid", value);
				this.OnPropertyChanged("ipg_FacilityId");
			}
		}
		
		/// <summary>
		/// Represents the type of billing for the device.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_implantstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_ImplantStatus
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_implantstatus");
			}
			set
			{
				this.OnPropertyChanging("ipg_ImplantStatus");
				this.SetAttributeValue("ipg_implantstatus", value);
				this.OnPropertyChanged("ipg_ImplantStatus");
			}
		}
		
		/// <summary>
		/// Represents the type of billing for the device.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_implantstatus")]
		public virtual ipg_EntitlementImplantStatus? ipg_ImplantStatusEnum
		{
			get
			{
				return ((ipg_EntitlementImplantStatus?)(EntityOptionSetEnum.GetEnum(this, "ipg_implantstatus")));
			}
			set
			{
				this.OnPropertyChanging("ipg_ImplantStatus");
				this.SetAttributeValue("ipg_implantstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_ImplantStatus");
			}
		}
		
		/// <summary>
		/// Represents when mac rule was effective
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_macruledate")]
		public System.Nullable<System.DateTime> ipg_MacRuleDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_macruledate");
			}
			set
			{
				this.OnPropertyChanging("ipg_MacRuleDate");
				this.SetAttributeValue("ipg_macruledate", value);
				this.OnPropertyChanged("ipg_MacRuleDate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_maic_enabled")]
		public System.Nullable<bool> ipg_maic_enabled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_maic_enabled");
			}
			set
			{
				this.OnPropertyChanging("ipg_maic_enabled");
				this.SetAttributeValue("ipg_maic_enabled", value);
				this.OnPropertyChanged("ipg_maic_enabled");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_networkstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_NetworkStatus
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_networkstatus");
			}
			set
			{
				this.OnPropertyChanging("ipg_NetworkStatus");
				this.SetAttributeValue("ipg_networkstatus", value);
				this.OnPropertyChanged("ipg_NetworkStatus");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_networkstatus")]
		public virtual ipg_EntitlementNetworkStatus? ipg_NetworkStatusEnum
		{
			get
			{
				return ((ipg_EntitlementNetworkStatus?)(EntityOptionSetEnum.GetEnum(this, "ipg_networkstatus")));
			}
			set
			{
				this.OnPropertyChanging("ipg_NetworkStatus");
				this.SetAttributeValue("ipg_networkstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_NetworkStatus");
			}
		}
		
		/// <summary>
		/// Represents who is going to bill the patient.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_patientbilling")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_PatientBilling
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_patientbilling");
			}
			set
			{
				this.OnPropertyChanging("ipg_PatientBilling");
				this.SetAttributeValue("ipg_patientbilling", value);
				this.OnPropertyChanged("ipg_PatientBilling");
			}
		}
		
		/// <summary>
		/// Represents who is going to bill the patient.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_patientbilling")]
		public virtual ipg_PatientBillingType? ipg_PatientBillingEnum
		{
			get
			{
				return ((ipg_PatientBillingType?)(EntityOptionSetEnum.GetEnum(this, "ipg_patientbilling")));
			}
			set
			{
				this.OnPropertyChanging("ipg_PatientBilling");
				this.SetAttributeValue("ipg_patientbilling", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_PatientBilling");
			}
		}
		
		/// <summary>
		/// Represents threshold
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_threshold")]
		public System.Nullable<double> ipg_Threshold
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("ipg_threshold");
			}
			set
			{
				this.OnPropertyChanging("ipg_Threshold");
				this.SetAttributeValue("ipg_threshold", value);
				this.OnPropertyChanged("ipg_Threshold");
			}
		}
		
		/// <summary>
		/// Represents the current date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_todaysdate")]
		public System.Nullable<System.DateTime> ipg_TodaysDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_todaysdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_TodaysDate");
				this.SetAttributeValue("ipg_todaysdate", value);
				this.OnPropertyChanged("ipg_TodaysDate");
			}
		}
		
		/// <summary>
		/// Shows whether this entitlement is the default one for the specified customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
			}
			set
			{
				this.OnPropertyChanging("IsDefault");
				this.SetAttributeValue("isdefault", value);
				this.OnPropertyChanged("IsDefault");
			}
		}
		
		/// <summary>
		/// Select the access someone will have to the knowledge base on the portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbaccesslevel")]
		public Microsoft.Xrm.Sdk.OptionSetValue KbAccessLevel
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("kbaccesslevel");
			}
			set
			{
				this.OnPropertyChanging("KbAccessLevel");
				this.SetAttributeValue("kbaccesslevel", value);
				this.OnPropertyChanged("KbAccessLevel");
			}
		}
		
		/// <summary>
		/// Select the access someone will have to the knowledge base on the portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbaccesslevel")]
		public virtual Entitlement_KbAccessLevel? KbAccessLevelEnum
		{
			get
			{
				return ((Entitlement_KbAccessLevel?)(EntityOptionSetEnum.GetEnum(this, "kbaccesslevel")));
			}
			set
			{
				this.OnPropertyChanging("KbAccessLevel");
				this.SetAttributeValue("kbaccesslevel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("KbAccessLevel");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Type a meaningful name for the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Type the total number of entitlement terms that are left.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("remainingterms")]
		public System.Nullable<decimal> RemainingTerms
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("remainingterms");
			}
			set
			{
				this.OnPropertyChanging("RemainingTerms");
				this.SetAttributeValue("remainingterms", value);
				this.OnPropertyChanged("RemainingTerms");
			}
		}
		
		/// <summary>
		/// Tells whether case creation is restricted based on entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("restrictcasecreation")]
		public System.Nullable<bool> RestrictCaseCreation
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("restrictcasecreation");
			}
			set
			{
				this.OnPropertyChanging("RestrictCaseCreation");
				this.SetAttributeValue("restrictcasecreation", value);
				this.OnPropertyChanged("RestrictCaseCreation");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) associated with the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Enter the date when the entitlement starts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startdate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startdate");
			}
			set
			{
				this.OnPropertyChanging("StartDate");
				this.SetAttributeValue("startdate", value);
				this.OnPropertyChanged("StartDate");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.EntitlementState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.EntitlementState)(System.Enum.ToObject(typeof(Insight.Intake.EntitlementState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the reason code that explains the status of the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select the reason code that explains the status of the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Entitlement_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((Entitlement_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type the total number of entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalterms")]
		public System.Nullable<decimal> TotalTerms
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("totalterms");
			}
			set
			{
				this.OnPropertyChanging("TotalTerms");
				this.SetAttributeValue("totalterms", value);
				this.OnPropertyChanged("TotalTerms");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_facilitycarriercptrule> ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_facilitycarriercptrule>("ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId");
				this.SetRelatedEntities<Insight.Intake.ipg_facilitycarriercptrule>("ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId", null, value);
				this.OnPropertyChanged("ipg_entitlement_ipg_facilitycarriercptrule_EntitlementId");
			}
		}
		
		/// <summary>
		/// 1:N ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_facilitycarriercptrulecontract> ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_facilitycarriercptrulecontract>("ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId");
				this.SetRelatedEntities<Insight.Intake.ipg_facilitycarriercptrulecontract>("ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId", null, value);
				this.OnPropertyChanged("ipg_entitlement_ipg_facilitycarriercptrulecontract_EntitlementId");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Entitlement(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["entitlementid"] = base.Id;
                        break;
                    case "entitlementid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}