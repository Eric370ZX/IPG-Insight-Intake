//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Insight.Intake
{
	
	/// <summary>
	/// Activity that represents work done to satisfy a customer's need.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("service")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public partial class Service : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string AnchorOffset = "anchoroffset";
			public const string CalendarId = "calendarid";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string Duration = "duration";
			public const string Granularity = "granularity";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialStatusCode = "initialstatuscode";
			public const string IsSchedulable = "isschedulable";
			public const string IsVisible = "isvisible";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ResourceSpecId = "resourcespecid";
			public const string ServiceId = "serviceid";
			public const string Id = "serviceid";
			public const string ShowResources = "showresources";
			public const string StrategyId = "strategyid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string CalendarRules = "calendarrules";
			public const string calendar_services = "calendar_services";
			public const string lk_service_createdby = "lk_service_createdby";
			public const string lk_service_createdonbehalfby = "lk_service_createdonbehalfby";
			public const string lk_service_modifiedby = "lk_service_modifiedby";
			public const string lk_service_modifiedonbehalfby = "lk_service_modifiedonbehalfby";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Service() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "service";
		
		public const string EntitySchemaName = "Service";
		
		public const string PrimaryIdAttribute = "serviceid";
		
		public const string PrimaryNameAttribute = "name";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Used in conjunction with granularity to describes when services can be performed in relation to midnight on a given day.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("anchoroffset")]
		public System.Nullable<int> AnchorOffset
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("anchoroffset");
			}
			set
			{
				this.OnPropertyChanging("AnchorOffset");
				this.SetAttributeValue("anchoroffset", value);
				this.OnPropertyChanged("AnchorOffset");
			}
		}
		
		/// <summary>
		/// Unique identifier of the calendar.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendarid")]
		public System.Nullable<System.Guid> CalendarId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("calendarid");
			}
			set
			{
				this.OnPropertyChanging("CalendarId");
				this.SetAttributeValue("calendarid", value);
				this.OnPropertyChanged("CalendarId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the service was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Description of activity that represents work done to satisfy a customer's need.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Duration of the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("duration");
			}
			set
			{
				this.OnPropertyChanging("Duration");
				this.SetAttributeValue("duration", value);
				this.OnPropertyChanged("Duration");
			}
		}
		
		/// <summary>
		/// Describes how often the service is performed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("granularity")]
		public string Granularity
		{
			get
			{
				return this.GetAttributeValue<string>("granularity");
			}
			set
			{
				this.OnPropertyChanging("Granularity");
				this.SetAttributeValue("granularity", value);
				this.OnPropertyChanged("Granularity");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Initial status reason for the service activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialstatuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InitialStatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("initialstatuscode");
			}
			set
			{
				this.OnPropertyChanging("InitialStatusCode");
				this.SetAttributeValue("initialstatuscode", value);
				this.OnPropertyChanged("InitialStatusCode");
			}
		}
		
		/// <summary>
		/// Initial status reason for the service activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialstatuscode")]
		public virtual Service_StatusCode? InitialStatusCodeEnum
		{
			get
			{
				return ((Service_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "initialstatuscode")));
			}
			set
			{
				this.OnPropertyChanging("InitialStatusCode");
				this.SetAttributeValue("initialstatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("InitialStatusCode");
			}
		}
		
		/// <summary>
		/// Information about whether the service can be scheduled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isschedulable")]
		public System.Nullable<bool> IsSchedulable
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isschedulable");
			}
			set
			{
				this.OnPropertyChanging("IsSchedulable");
				this.SetAttributeValue("isschedulable", value);
				this.OnPropertyChanged("IsSchedulable");
			}
		}
		
		/// <summary>
		/// Information about whether the service is visible to users.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isvisible")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isvisible");
			}
			set
			{
				this.OnPropertyChanging("IsVisible");
				this.SetAttributeValue("isvisible", value);
				this.OnPropertyChanged("IsVisible");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the service was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Name of the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the resource specification with which the service is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcespecid")]
		public Microsoft.Xrm.Sdk.EntityReference ResourceSpecId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("resourcespecid");
			}
			set
			{
				this.OnPropertyChanging("ResourceSpecId");
				this.SetAttributeValue("resourcespecid", value);
				this.OnPropertyChanged("ResourceSpecId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public System.Nullable<System.Guid> ServiceId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("serviceid");
			}
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ServiceId = value;
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("showresources")]
		public System.Nullable<bool> ShowResources
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("showresources");
			}
			set
			{
				this.OnPropertyChanging("ShowResources");
				this.SetAttributeValue("showresources", value);
				this.OnPropertyChanged("ShowResources");
			}
		}
		
		/// <summary>
		/// Value that is taken from PluginTypeId in the Plugin Type record for the scheduling strategy. This is the ID of the scheduling strategy plug-in associated with the service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("strategyid")]
		public Microsoft.Xrm.Sdk.EntityReference StrategyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("strategyid");
			}
			set
			{
				this.OnPropertyChanging("StrategyId");
				this.SetAttributeValue("strategyid", value);
				this.OnPropertyChanged("StrategyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N adx_portalcomment_service_serviceid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_portalcomment_service_serviceid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.adx_portalcomment> adx_portalcomment_service_serviceid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.adx_portalcomment>("adx_portalcomment_service_serviceid", null);
			}
			set
			{
				this.OnPropertyChanging("adx_portalcomment_service_serviceid");
				this.SetRelatedEntities<Insight.Intake.adx_portalcomment>("adx_portalcomment_service_serviceid", null, value);
				this.OnPropertyChanged("adx_portalcomment_service_serviceid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_carrier_audit_history_service_serviceid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_carrier_audit_history_service_serviceid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrier_audit_history> ipg_carrier_audit_history_service_serviceid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrier_audit_history>("ipg_carrier_audit_history_service_serviceid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_carrier_audit_history_service_serviceid");
				this.SetRelatedEntities<Insight.Intake.ipg_carrier_audit_history>("ipg_carrier_audit_history_service_serviceid", null, value);
				this.OnPropertyChanged("ipg_carrier_audit_history_service_serviceid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_gateactivity_service_serviceid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_gateactivity_service_serviceid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_gateactivity> ipg_gateactivity_service_serviceid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_gateactivity>("ipg_gateactivity_service_serviceid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_gateactivity_service_serviceid");
				this.SetRelatedEntities<Insight.Intake.ipg_gateactivity>("ipg_gateactivity_service_serviceid", null, value);
				this.OnPropertyChanged("ipg_gateactivity_service_serviceid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_historicaudit_service_serviceid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_historicaudit_service_serviceid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_historicaudit> ipg_historicaudit_service_serviceid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_historicaudit>("ipg_historicaudit_service_serviceid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_historicaudit_service_serviceid");
				this.SetRelatedEntities<Insight.Intake.ipg_historicaudit>("ipg_historicaudit_service_serviceid", null, value);
				this.OnPropertyChanged("ipg_historicaudit_service_serviceid");
			}
		}
		
		/// <summary>
		/// 1:N service_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_accounts")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Account> service_accounts
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Account>("service_accounts", null);
			}
			set
			{
				this.OnPropertyChanging("service_accounts");
				this.SetRelatedEntities<Insight.Intake.Account>("service_accounts", null, value);
				this.OnPropertyChanged("service_accounts");
			}
		}
		
		/// <summary>
		/// 1:N service_activity_pointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_activity_pointers")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityPointer> service_activity_pointers
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ActivityPointer>("service_activity_pointers", null);
			}
			set
			{
				this.OnPropertyChanging("service_activity_pointers");
				this.SetRelatedEntities<Insight.Intake.ActivityPointer>("service_activity_pointers", null, value);
				this.OnPropertyChanged("service_activity_pointers");
			}
		}
		
		/// <summary>
		/// 1:N Service_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Service_Annotation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Annotation> Service_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Annotation>("Service_Annotation", null);
			}
			set
			{
				this.OnPropertyChanging("Service_Annotation");
				this.SetRelatedEntities<Insight.Intake.Annotation>("Service_Annotation", null, value);
				this.OnPropertyChanged("Service_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_appointments")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Appointment> service_appointments
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Appointment>("service_appointments", null);
			}
			set
			{
				this.OnPropertyChanging("service_appointments");
				this.SetRelatedEntities<Insight.Intake.Appointment>("service_appointments", null, value);
				this.OnPropertyChanged("service_appointments");
			}
		}
		
		/// <summary>
		/// 1:N Service_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Service_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> Service_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("Service_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("Service_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("Service_AsyncOperations", null, value);
				this.OnPropertyChanged("Service_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N service_calendar_rules
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendarrules")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.CalendarRule> CalendarRules
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("calendarrules");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.CalendarRule>(collection.Entities, e => e.ToEntity<Insight.Intake.CalendarRule>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("CalendarRules");
				if ((value == null))
				{
					this.SetAttributeValue("calendarrules", value);
				}
				else
				{
					this.SetAttributeValue("calendarrules", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("CalendarRules");
			}
		}
		
		/// <summary>
		/// 1:N service_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_contacts")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Contact> service_contacts
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Contact>("service_contacts", null);
			}
			set
			{
				this.OnPropertyChanging("service_contacts");
				this.SetRelatedEntities<Insight.Intake.Contact>("service_contacts", null, value);
				this.OnPropertyChanged("service_contacts");
			}
		}
		
		/// <summary>
		/// 1:N Service_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Service_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> Service_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("Service_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("Service_DuplicateBaseRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("Service_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("Service_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N Service_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Service_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> Service_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("Service_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("Service_DuplicateMatchingRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("Service_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("Service_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N service_emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_emails")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Email> service_emails
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Email>("service_emails", null);
			}
			set
			{
				this.OnPropertyChanging("service_emails");
				this.SetRelatedEntities<Insight.Intake.Email>("service_emails", null, value);
				this.OnPropertyChanged("service_emails");
			}
		}
		
		/// <summary>
		/// 1:N service_faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_faxes")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Fax> service_faxes
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Fax>("service_faxes", null);
			}
			set
			{
				this.OnPropertyChanging("service_faxes");
				this.SetRelatedEntities<Insight.Intake.Fax>("service_faxes", null, value);
				this.OnPropertyChanged("service_faxes");
			}
		}
		
		/// <summary>
		/// 1:N service_incidentresolutions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_incidentresolutions")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.IncidentResolution> service_incidentresolutions
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.IncidentResolution>("service_incidentresolutions", null);
			}
			set
			{
				this.OnPropertyChanging("service_incidentresolutions");
				this.SetRelatedEntities<Insight.Intake.IncidentResolution>("service_incidentresolutions", null, value);
				this.OnPropertyChanged("service_incidentresolutions");
			}
		}
		
		/// <summary>
		/// 1:N service_letters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_letters")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Letter> service_letters
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Letter>("service_letters", null);
			}
			set
			{
				this.OnPropertyChanging("service_letters");
				this.SetRelatedEntities<Insight.Intake.Letter>("service_letters", null, value);
				this.OnPropertyChanged("service_letters");
			}
		}
		
		/// <summary>
		/// 1:N service_orderclose
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_orderclose")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.OrderClose> service_orderclose
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.OrderClose>("service_orderclose", null);
			}
			set
			{
				this.OnPropertyChanging("service_orderclose");
				this.SetRelatedEntities<Insight.Intake.OrderClose>("service_orderclose", null, value);
				this.OnPropertyChanged("service_orderclose");
			}
		}
		
		/// <summary>
		/// 1:N service_phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_phonecalls")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PhoneCall> service_phonecalls
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PhoneCall>("service_phonecalls", null);
			}
			set
			{
				this.OnPropertyChanging("service_phonecalls");
				this.SetRelatedEntities<Insight.Intake.PhoneCall>("service_phonecalls", null, value);
				this.OnPropertyChanged("service_phonecalls");
			}
		}
		
		/// <summary>
		/// 1:N service_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> service_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("service_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.OnPropertyChanging("service_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("service_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("service_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N service_quoteclose
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_quoteclose")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QuoteClose> service_quoteclose
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QuoteClose>("service_quoteclose", null);
			}
			set
			{
				this.OnPropertyChanging("service_quoteclose");
				this.SetRelatedEntities<Insight.Intake.QuoteClose>("service_quoteclose", null, value);
				this.OnPropertyChanged("service_quoteclose");
			}
		}
		
		/// <summary>
		/// 1:N service_recurringappointmentmasters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_recurringappointmentmasters")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.RecurringAppointmentMaster> service_recurringappointmentmasters
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.RecurringAppointmentMaster>("service_recurringappointmentmasters", null);
			}
			set
			{
				this.OnPropertyChanging("service_recurringappointmentmasters");
				this.SetRelatedEntities<Insight.Intake.RecurringAppointmentMaster>("service_recurringappointmentmasters", null, value);
				this.OnPropertyChanged("service_recurringappointmentmasters");
			}
		}
		
		/// <summary>
		/// 1:N service_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_service_appointments")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ServiceAppointment> service_service_appointments
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ServiceAppointment>("service_service_appointments", null);
			}
			set
			{
				this.OnPropertyChanging("service_service_appointments");
				this.SetRelatedEntities<Insight.Intake.ServiceAppointment>("service_service_appointments", null, value);
				this.OnPropertyChanged("service_service_appointments");
			}
		}
		
		/// <summary>
		/// 1:N service_tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_tasks")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Task> service_tasks
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Task>("service_tasks", null);
			}
			set
			{
				this.OnPropertyChanging("service_tasks");
				this.SetRelatedEntities<Insight.Intake.Task>("service_tasks", null, value);
				this.OnPropertyChanged("service_tasks");
			}
		}
		
		/// <summary>
		/// N:1 calendar_services
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendarid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("calendar_services")]
		public Insight.Intake.Calendar calendar_services
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Calendar>("calendar_services", null);
			}
			set
			{
				this.OnPropertyChanging("calendar_services");
				this.SetRelatedEntity<Insight.Intake.Calendar>("calendar_services", null, value);
				this.OnPropertyChanged("calendar_services");
			}
		}
		
		/// <summary>
		/// N:1 lk_service_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_service_createdby")]
		public Insight.Intake.SystemUser lk_service_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_service_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_service_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_service_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_service_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_service_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_service_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_service_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_service_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_service_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_service_modifiedby")]
		public Insight.Intake.SystemUser lk_service_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_service_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_service_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_service_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_service_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_service_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_service_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_service_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_service_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Service(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["serviceid"] = base.Id;
                        break;
                    case "serviceid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}