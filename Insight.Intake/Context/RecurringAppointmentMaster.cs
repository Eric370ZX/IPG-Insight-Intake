//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public enum RecurringAppointmentMasterState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 3,
	}
	
	/// <summary>
	/// The Master appointment of a recurring appointment series.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recurringappointmentmaster")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public partial class RecurringAppointmentMaster : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string DayOfMonth = "dayofmonth";
			public const string DaysOfWeekMask = "daysofweekmask";
			public const string DeletedExceptionsList = "deletedexceptionslist";
			public const string Description = "description";
			public const string Duration = "duration";
			public const string EffectiveEndDate = "effectiveenddate";
			public const string EffectiveStartDate = "effectivestartdate";
			public const string EndTime = "endtime";
			public const string ExchangeRate = "exchangerate";
			public const string ExpansionStateCode = "expansionstatecode";
			public const string FirstDayOfWeek = "firstdayofweek";
			public const string GlobalObjectId = "globalobjectid";
			public const string GroupId = "groupid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Instance = "instance";
			public const string InstanceTypeCode = "instancetypecode";
			public const string Interval = "interval";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsBilled = "isbilled";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsNthMonthly = "isnthmonthly";
			public const string IsNthYearly = "isnthyearly";
			public const string IsRegenerate = "isregenerate";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsUnsafe = "isunsafe";
			public const string IsWeekDayPattern = "isweekdaypattern";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string LastExpandedInstanceDate = "lastexpandedinstancedate";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string MonthOfYear = "monthofyear";
			public const string NextExpansionInstanceDate = "nextexpansioninstancedate";
			public const string Occurrences = "occurrences";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OutlookOwnerApptId = "outlookownerapptid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PatternEndDate = "patternenddate";
			public const string PatternEndType = "patternendtype";
			public const string PatternStartDate = "patternstartdate";
			public const string PriorityCode = "prioritycode";
			public const string ProcessId = "processid";
			public const string RecurrencePatternType = "recurrencepatterntype";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RequiredAttendees = "requiredattendees";
			public const string RuleId = "ruleid";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesStatus = "seriesstatus";
			public const string ServiceId = "serviceid";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StartTime = "starttime";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Account_RecurringAppointmentMasters = "Account_RecurringAppointmentMasters";
			public const string activity_pointer_recurringappointmentmaster = "activity_pointer_recurringappointmentmaster";
			public const string business_unit_recurringappointmentmaster_activities = "business_unit_recurringappointmentmaster_activities";
			public const string Contact_RecurringAppointmentMasters = "Contact_RecurringAppointmentMasters";
			public const string entitlement_RecurringAppointmentMasters = "entitlement_RecurringAppointmentMasters";
			public const string entitlementtemplate_RecurringAppointmentMasters = "entitlementtemplate_RecurringAppointmentMasters";
			public const string Incident_RecurringAppointmentMasters = "Incident_RecurringAppointmentMasters";
			public const string Invoice_RecurringAppointmentMasters = "Invoice_RecurringAppointmentMasters";
			public const string ipg_claimresponseheader_RecurringAppointmentMasters = "ipg_claimresponseheader_RecurringAppointmentMasters";
			public const string ipg_cptcode_RecurringAppointmentMasters = "ipg_cptcode_RecurringAppointmentMasters";
			public const string ipg_document_RecurringAppointmentMasters = "ipg_document_RecurringAppointmentMasters";
			public const string ipg_ehrstaging_RecurringAppointmentMasters = "ipg_ehrstaging_RecurringAppointmentMasters";
			public const string ipg_patientpaymentnotification_RecurringAppointmentMasters = "ipg_patientpaymentnotification_RecurringAppointmentMasters";
			public const string ipg_procedurename_RecurringAppointmentMasters = "ipg_procedurename_RecurringAppointmentMasters";
			public const string ipg_referral_RecurringAppointmentMasters = "ipg_referral_RecurringAppointmentMasters";
			public const string KnowledgeArticle_RecurringAppointmentMasters = "KnowledgeArticle_RecurringAppointmentMasters";
			public const string KnowledgeBaseRecord_RecurringAppointmentMasters = "KnowledgeBaseRecord_RecurringAppointmentMasters";
			public const string Lead_RecurringAppointmentMasters = "Lead_RecurringAppointmentMasters";
			public const string lk_recurringappointmentmaster_createdby = "lk_recurringappointmentmaster_createdby";
			public const string lk_recurringappointmentmaster_createdonbehalfby = "lk_recurringappointmentmaster_createdonbehalfby";
			public const string lk_recurringappointmentmaster_modifiedby = "lk_recurringappointmentmaster_modifiedby";
			public const string lk_recurringappointmentmaster_modifiedonbehalfby = "lk_recurringappointmentmaster_modifiedonbehalfby";
			public const string Quote_RecurringAppointmentMasters = "Quote_RecurringAppointmentMasters";
			public const string recurrencerule_recurringappointmentmaster = "recurrencerule_recurringappointmentmaster";
			public const string SalesOrder_RecurringAppointmentMasters = "SalesOrder_RecurringAppointmentMasters";
			public const string service_recurringappointmentmasters = "service_recurringappointmentmasters";
			public const string team_recurringappointmentmaster = "team_recurringappointmentmaster";
			public const string TransactionCurrency_RecurringAppointmentMaster = "TransactionCurrency_RecurringAppointmentMaster";
			public const string user_recurringappointmentmaster = "user_recurringappointmentmaster";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public RecurringAppointmentMaster() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "recurringappointmentmaster";
		
		public const string EntitySchemaName = "RecurringAppointmentMaster";
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Type a category to identify the recurring appointment type, such as status meeting or service call, to tie the appointment to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			set
			{
				this.OnPropertyChanging("Category");
				this.SetAttributeValue("category", value);
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// The day of the month on which the recurring appointment occurs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dayofmonth")]
		public System.Nullable<int> DayOfMonth
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dayofmonth");
			}
			set
			{
				this.OnPropertyChanging("DayOfMonth");
				this.SetAttributeValue("dayofmonth", value);
				this.OnPropertyChanged("DayOfMonth");
			}
		}
		
		/// <summary>
		/// Bitmask that represents the days of the week on which the recurring appointment occurs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("daysofweekmask")]
		public System.Nullable<int> DaysOfWeekMask
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("daysofweekmask");
			}
			set
			{
				this.OnPropertyChanging("DaysOfWeekMask");
				this.SetAttributeValue("daysofweekmask", value);
				this.OnPropertyChanged("DaysOfWeekMask");
			}
		}
		
		/// <summary>
		/// List of deleted instances of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deletedexceptionslist")]
		public string DeletedExceptionsList
		{
			get
			{
				return this.GetAttributeValue<string>("deletedexceptionslist");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the recurring appointment, such as key talking points or objectives.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Duration of the recurring appointment series in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("duration");
			}
			set
			{
				this.OnPropertyChanging("Duration");
				this.SetAttributeValue("duration", value);
				this.OnPropertyChanged("Duration");
			}
		}
		
		/// <summary>
		/// Actual end date of the recurring appointment series based on the specified end date and recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectiveenddate")]
		public System.Nullable<System.DateTime> EffectiveEndDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectiveenddate");
			}
			set
			{
				this.OnPropertyChanging("EffectiveEndDate");
				this.SetAttributeValue("effectiveenddate", value);
				this.OnPropertyChanged("EffectiveEndDate");
			}
		}
		
		/// <summary>
		/// Actual start date of the recurring appointment series based on the specified start date and recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivestartdate")]
		public System.Nullable<System.DateTime> EffectiveStartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectivestartdate");
			}
			set
			{
				this.OnPropertyChanging("EffectiveStartDate");
				this.SetAttributeValue("effectivestartdate", value);
				this.OnPropertyChanged("EffectiveStartDate");
			}
		}
		
		/// <summary>
		/// End time of the associated activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("endtime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("endtime");
			}
			set
			{
				this.OnPropertyChanging("EndTime");
				this.SetAttributeValue("endtime", value);
				this.OnPropertyChanged("EndTime");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// State code to indicate whether the recurring appointment series is expanded fully or partially.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expansionstatecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ExpansionStateCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("expansionstatecode");
			}
		}
		
		/// <summary>
		/// State code to indicate whether the recurring appointment series is expanded fully or partially.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expansionstatecode")]
		public virtual RecurringAppointmentMaster_ExpansionStateCode? ExpansionStateCodeEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_ExpansionStateCode?)(EntityOptionSetEnum.GetEnum(this, "expansionstatecode")));
			}
		}
		
		/// <summary>
		/// First day of week for the recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstdayofweek")]
		public System.Nullable<int> FirstDayOfWeek
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("firstdayofweek");
			}
			set
			{
				this.OnPropertyChanging("FirstDayOfWeek");
				this.SetAttributeValue("firstdayofweek", value);
				this.OnPropertyChanged("FirstDayOfWeek");
			}
		}
		
		/// <summary>
		/// Unique Outlook identifier to correlate recurring appointment series across Exchange mailboxes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalobjectid")]
		public string GlobalObjectId
		{
			get
			{
				return this.GetAttributeValue<string>("globalobjectid");
			}
			set
			{
				this.OnPropertyChanging("GlobalObjectId");
				this.SetAttributeValue("globalobjectid", value);
				this.OnPropertyChanged("GlobalObjectId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the recurring appointment series for which the recurrence information was updated. 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupid")]
		public Microsoft.Xrm.Sdk.EntityReference GroupId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("groupid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Specifies the recurring appointment series to occur on every Nth day of a month. Valid for monthly and yearly recurrence patterns only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instance")]
		public Microsoft.Xrm.Sdk.OptionSetValue Instance
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instance");
			}
			set
			{
				this.OnPropertyChanging("Instance");
				this.SetAttributeValue("instance", value);
				this.OnPropertyChanged("Instance");
			}
		}
		
		/// <summary>
		/// Specifies the recurring appointment series to occur on every Nth day of a month. Valid for monthly and yearly recurrence patterns only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instance")]
		public virtual RecurringAppointmentMaster_Instance? InstanceEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_Instance?)(EntityOptionSetEnum.GetEnum(this, "instance")));
			}
			set
			{
				this.OnPropertyChanging("Instance");
				this.SetAttributeValue("instance", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("Instance");
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InstanceTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual RecurringAppointmentMaster_InstanceTypeCode? InstanceTypeCodeEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_InstanceTypeCode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		/// <summary>
		/// Number of units of a given recurrence type between occurrences.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interval")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("interval");
			}
			set
			{
				this.OnPropertyChanging("Interval");
				this.SetAttributeValue("interval", value);
				this.OnPropertyChanged("Interval");
			}
		}
		
		/// <summary>
		/// Select whether the recurring appointment is an all-day event to make sure that the required resources are scheduled for the full day.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isalldayevent")]
		public System.Nullable<bool> IsAllDayEvent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isalldayevent");
			}
			set
			{
				this.OnPropertyChanging("IsAllDayEvent");
				this.SetAttributeValue("isalldayevent", value);
				this.OnPropertyChanged("IsAllDayEvent");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			set
			{
				this.OnPropertyChanging("IsBilled");
				this.SetAttributeValue("isbilled", value);
				this.OnPropertyChanged("IsBilled");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
		public System.Nullable<bool> IsMapiPrivate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
			}
			set
			{
				this.OnPropertyChanging("IsMapiPrivate");
				this.SetAttributeValue("ismapiprivate", value);
				this.OnPropertyChanged("IsMapiPrivate");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series should occur after every N months. Valid for monthly recurrence pattern only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthmonthly")]
		public System.Nullable<bool> IsNthMonthly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnthmonthly");
			}
			set
			{
				this.OnPropertyChanging("IsNthMonthly");
				this.SetAttributeValue("isnthmonthly", value);
				this.OnPropertyChanged("IsNthMonthly");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series should occur after every N years. Valid for yearly recurrence pattern only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthyearly")]
		public System.Nullable<bool> IsNthYearly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnthyearly");
			}
			set
			{
				this.OnPropertyChanging("IsNthYearly");
				this.SetAttributeValue("isnthyearly", value);
				this.OnPropertyChanged("IsNthYearly");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregenerate")]
		public System.Nullable<bool> IsRegenerate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregenerate");
			}
			set
			{
				this.OnPropertyChanging("IsRegenerate");
				this.SetAttributeValue("isregenerate", value);
				this.OnPropertyChanged("IsRegenerate");
			}
		}
		
		/// <summary>
		/// Indicates whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isunsafe")]
		public System.Nullable<int> IsUnsafe
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("isunsafe");
			}
		}
		
		/// <summary>
		/// Indicates whether the weekly recurrence pattern is a daily weekday pattern. Valid for weekly recurrence pattern only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isweekdaypattern")]
		public System.Nullable<bool> IsWeekDayPattern
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isweekdaypattern");
			}
			set
			{
				this.OnPropertyChanging("IsWeekDayPattern");
				this.SetAttributeValue("isweekdaypattern", value);
				this.OnPropertyChanged("IsWeekDayPattern");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series was created from a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			set
			{
				this.OnPropertyChanging("IsWorkflowCreated");
				this.SetAttributeValue("isworkflowcreated", value);
				this.OnPropertyChanged("IsWorkflowCreated");
			}
		}
		
		/// <summary>
		/// Date of last expanded instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastexpandedinstancedate")]
		public System.Nullable<System.DateTime> LastExpandedInstanceDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastexpandedinstancedate");
			}
		}
		
		/// <summary>
		/// Type the location where the recurring appointment will take place, such as a conference room or customer office.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("location")]
		public string Location
		{
			get
			{
				return this.GetAttributeValue<string>("location");
			}
			set
			{
				this.OnPropertyChanging("Location");
				this.SetAttributeValue("location", value);
				this.OnPropertyChanged("Location");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Indicates the month of the year for the recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyear")]
		public Microsoft.Xrm.Sdk.OptionSetValue MonthOfYear
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("monthofyear");
			}
			set
			{
				this.OnPropertyChanging("MonthOfYear");
				this.SetAttributeValue("monthofyear", value);
				this.OnPropertyChanged("MonthOfYear");
			}
		}
		
		/// <summary>
		/// Indicates the month of the year for the recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyear")]
		public virtual RecurrenceRule_MonthOfYear? MonthOfYearEnum
		{
			get
			{
				return ((RecurrenceRule_MonthOfYear?)(EntityOptionSetEnum.GetEnum(this, "monthofyear")));
			}
			set
			{
				this.OnPropertyChanging("MonthOfYear");
				this.SetAttributeValue("monthofyear", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("MonthOfYear");
			}
		}
		
		/// <summary>
		/// Date of the next expanded instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextexpansioninstancedate")]
		public System.Nullable<System.DateTime> NextExpansionInstanceDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("nextexpansioninstancedate");
			}
		}
		
		/// <summary>
		/// Number of appointment occurrences in a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("occurrences")]
		public System.Nullable<int> Occurrences
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("occurrences");
			}
			set
			{
				this.OnPropertyChanging("Occurrences");
				this.SetAttributeValue("occurrences", value);
				this.OnPropertyChanged("Occurrences");
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, user, or other equipment resources that are not needed at the recurring appointment, but can optionally attend.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> OptionalAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("OptionalAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("optionalattendees", value);
				}
				else
				{
					this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("OptionalAttendees");
			}
		}
		
		/// <summary>
		/// Enter the user who is in charge of coordinating or leading the recurring appointment to make sure the appointment is displayed in the user's My Activities view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> Organizer
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Organizer");
				if ((value == null))
				{
					this.SetAttributeValue("organizer", value);
				}
				else
				{
					this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Organizer");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Microsoft Office Outlook recurring appointment series owner that correlates to the PR_OWNER_APPT_ID MAPI property.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outlookownerapptid")]
		public System.Nullable<int> OutlookOwnerApptId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("outlookownerapptid");
			}
			set
			{
				this.OnPropertyChanging("OutlookOwnerApptId");
				this.SetAttributeValue("outlookownerapptid", value);
				this.OnPropertyChanged("OutlookOwnerApptId");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// End date of the recurrence range.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternenddate")]
		public System.Nullable<System.DateTime> PatternEndDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternenddate");
			}
			set
			{
				this.OnPropertyChanging("PatternEndDate");
				this.SetAttributeValue("patternenddate", value);
				this.OnPropertyChanged("PatternEndDate");
			}
		}
		
		/// <summary>
		/// Select the type of end date for the recurring appointment, such as no end date or the number of occurrences.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtype")]
		public Microsoft.Xrm.Sdk.OptionSetValue PatternEndType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("patternendtype");
			}
			set
			{
				this.OnPropertyChanging("PatternEndType");
				this.SetAttributeValue("patternendtype", value);
				this.OnPropertyChanged("PatternEndType");
			}
		}
		
		/// <summary>
		/// Select the type of end date for the recurring appointment, such as no end date or the number of occurrences.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtype")]
		public virtual RecurringAppointmentMaster_PatternEndType? PatternEndTypeEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_PatternEndType?)(EntityOptionSetEnum.GetEnum(this, "patternendtype")));
			}
			set
			{
				this.OnPropertyChanging("PatternEndType");
				this.SetAttributeValue("patternendtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PatternEndType");
			}
		}
		
		/// <summary>
		/// Start date of the recurrence range.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternstartdate")]
		public System.Nullable<System.DateTime> PatternStartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternstartdate");
			}
			set
			{
				this.OnPropertyChanging("PatternStartDate");
				this.SetAttributeValue("patternstartdate", value);
				this.OnPropertyChanged("PatternStartDate");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual RecurringAppointmentMaster_PriorityCode? PriorityCodeEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_PriorityCode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Select the pattern type for the recurring appointment to indicate whether the appointment occurs daily, weekly, monthly, or yearly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntype")]
		public Microsoft.Xrm.Sdk.OptionSetValue RecurrencePatternType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("recurrencepatterntype");
			}
			set
			{
				this.OnPropertyChanging("RecurrencePatternType");
				this.SetAttributeValue("recurrencepatterntype", value);
				this.OnPropertyChanged("RecurrencePatternType");
			}
		}
		
		/// <summary>
		/// Select the pattern type for the recurring appointment to indicate whether the appointment occurs daily, weekly, monthly, or yearly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntype")]
		public virtual RecurringAppointmentMaster_RecurrencePatternType? RecurrencePatternTypeEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_RecurrencePatternType?)(EntityOptionSetEnum.GetEnum(this, "recurrencepatterntype")));
			}
			set
			{
				this.OnPropertyChanging("RecurrencePatternType");
				this.SetAttributeValue("recurrencepatterntype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("RecurrencePatternType");
			}
		}
		
		/// <summary>
		/// Choose the record that the recurring appointment series relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, user, or other equipment resources that are required to attend the recurring appointment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> RequiredAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("RequiredAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("requiredattendees", value);
				}
				else
				{
					this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("RequiredAttendees");
			}
		}
		
		/// <summary>
		/// Unique identifier of the recurrence rule that is associated with the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ruleid")]
		public Microsoft.Xrm.Sdk.EntityReference RuleId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ruleid");
			}
		}
		
		/// <summary>
		/// Scheduled end time of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
		}
		
		/// <summary>
		/// Scheduled start time of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series is active or inactive.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesstatus")]
		public System.Nullable<bool> SeriesStatus
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("seriesstatus");
			}
			set
			{
				this.OnPropertyChanging("SeriesStatus");
				this.SetAttributeValue("seriesstatus", value);
				this.OnPropertyChanged("SeriesStatus");
			}
		}
		
		/// <summary>
		/// Unique identifier for an associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			set
			{
				this.OnPropertyChanging("SortDate");
				this.SetAttributeValue("sortdate", value);
				this.OnPropertyChanged("SortDate");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Start time of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("starttime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("starttime");
			}
			set
			{
				this.OnPropertyChanging("StartTime");
				this.SetAttributeValue("starttime", value);
				this.OnPropertyChanged("StartTime");
			}
		}
		
		/// <summary>
		/// Shows whether the recurring appointment is open, scheduled, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.RecurringAppointmentMasterState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.RecurringAppointmentMasterState)(System.Enum.ToObject(typeof(Insight.Intake.RecurringAppointmentMasterState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the recurring appointment's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select the recurring appointment's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual RecurringAppointmentMaster_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((RecurringAppointmentMaster_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the recurring appointment type and relate the activity to a specific product, sales region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			set
			{
				this.OnPropertyChanging("Subcategory");
				this.SetAttributeValue("subcategory", value);
				this.OnPropertyChanged("Subcategory");
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the recurring appointment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("subject", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			set
			{
				this.OnPropertyChanging("SubscriptionId");
				this.SetAttributeValue("subscriptionid", value);
				this.OnPropertyChanged("SubscriptionId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_activity_parties")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> recurringappointmentmaster_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ActivityParty>("recurringappointmentmaster_activity_parties", null);
			}
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_activity_parties");
				this.SetRelatedEntities<Insight.Intake.ActivityParty>("recurringappointmentmaster_activity_parties", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_activity_parties");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_Annotation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Annotation> RecurringAppointmentMaster_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Annotation>("RecurringAppointmentMaster_Annotation", null);
			}
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_Annotation");
				this.SetRelatedEntities<Insight.Intake.Annotation>("RecurringAppointmentMaster_Annotation", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_appointment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Appointment> recurringappointmentmaster_appointment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Appointment>("recurringappointmentmaster_appointment", null);
			}
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_appointment");
				this.SetRelatedEntities<Insight.Intake.Appointment>("recurringappointmentmaster_appointment", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_appointment");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> RecurringAppointmentMaster_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("RecurringAppointmentMaster_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("RecurringAppointmentMaster_AsyncOperations", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> RecurringAppointmentMaster_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("RecurringAppointmentMaster_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_DuplicateBaseRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("RecurringAppointmentMaster_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> RecurringAppointmentMaster_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("RecurringAppointmentMaster_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_DuplicateMatchingRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("RecurringAppointmentMaster_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> recurringappointmentmaster_principalobjectattributeaccess
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("recurringappointmentmaster_principalobjectattributeaccess", null);
			}
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_principalobjectattributeaccess");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("recurringappointmentmaster_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_QueueItem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QueueItem> RecurringAppointmentMaster_QueueItem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QueueItem>("RecurringAppointmentMaster_QueueItem", null);
			}
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_QueueItem");
				this.SetRelatedEntities<Insight.Intake.QueueItem>("RecurringAppointmentMaster_QueueItem", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_QueueItem");
			}
		}
		
		/// <summary>
		/// N:1 Account_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_RecurringAppointmentMasters")]
		public Insight.Intake.Account Account_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Account>("Account_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("Account_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Account>("Account_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Account_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_recurringappointmentmaster")]
		public Insight.Intake.ActivityPointer activity_pointer_recurringappointmentmaster
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ActivityPointer>("activity_pointer_recurringappointmentmaster", null);
			}
			set
			{
				this.OnPropertyChanging("activity_pointer_recurringappointmentmaster");
				this.SetRelatedEntity<Insight.Intake.ActivityPointer>("activity_pointer_recurringappointmentmaster", null, value);
				this.OnPropertyChanged("activity_pointer_recurringappointmentmaster");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_recurringappointmentmaster_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_recurringappointmentmaster_activities")]
		public Insight.Intake.BusinessUnit business_unit_recurringappointmentmaster_activities
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.BusinessUnit>("business_unit_recurringappointmentmaster_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_RecurringAppointmentMasters")]
		public Insight.Intake.Contact Contact_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Contact>("Contact_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("Contact_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Contact>("Contact_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Contact_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 entitlement_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_RecurringAppointmentMasters")]
		public Insight.Intake.Entitlement entitlement_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Entitlement>("entitlement_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("entitlement_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Entitlement>("entitlement_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("entitlement_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 entitlementtemplate_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementtemplate_RecurringAppointmentMasters")]
		public Insight.Intake.EntitlementTemplate entitlementtemplate_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementtemplate_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("entitlementtemplate_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Incident_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_RecurringAppointmentMasters")]
		public Insight.Intake.Incident Incident_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Incident>("Incident_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("Incident_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Incident>("Incident_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Incident_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Invoice_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Invoice_RecurringAppointmentMasters")]
		public Insight.Intake.Invoice Invoice_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Invoice>("Invoice_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("Invoice_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Invoice>("Invoice_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Invoice_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_claimresponseheader_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_claimresponseheader_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_claimresponseheader ipg_claimresponseheader_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_claimresponseheader>("ipg_claimresponseheader_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_claimresponseheader_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_claimresponseheader>("ipg_claimresponseheader_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_claimresponseheader_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_cptcode_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_cptcode_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_cptcode ipg_cptcode_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_cptcode>("ipg_cptcode_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_cptcode_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_cptcode>("ipg_cptcode_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_cptcode_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_document_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_document_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_document ipg_document_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_document>("ipg_document_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_document_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_document>("ipg_document_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_document_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_ehrstaging_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ehrstaging_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_EHRstaging ipg_ehrstaging_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_EHRstaging>("ipg_ehrstaging_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ehrstaging_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_EHRstaging>("ipg_ehrstaging_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_ehrstaging_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_patientpaymentnotification_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_patientpaymentnotification_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_patientpaymentnotification ipg_patientpaymentnotification_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_patientpaymentnotification>("ipg_patientpaymentnotification_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_patientpaymentnotification_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_patientpaymentnotification>("ipg_patientpaymentnotification_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_patientpaymentnotification_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_procedurename_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_procedurename_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_procedurename ipg_procedurename_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_procedurename>("ipg_procedurename_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_procedurename_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_procedurename>("ipg_procedurename_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_procedurename_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_referral_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_referral_RecurringAppointmentMasters")]
		public Insight.Intake.ipg_referral ipg_referral_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_referral>("ipg_referral_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_referral_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.ipg_referral>("ipg_referral_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ipg_referral_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeArticle_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeArticle_RecurringAppointmentMasters")]
		public Insight.Intake.KnowledgeArticle KnowledgeArticle_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.KnowledgeArticle>("KnowledgeArticle_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("KnowledgeArticle_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.KnowledgeArticle>("KnowledgeArticle_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("KnowledgeArticle_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeBaseRecord_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_RecurringAppointmentMasters")]
		public Insight.Intake.KnowledgeBaseRecord KnowledgeBaseRecord_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.KnowledgeBaseRecord>("KnowledgeBaseRecord_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("KnowledgeBaseRecord_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.KnowledgeBaseRecord>("KnowledgeBaseRecord_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("KnowledgeBaseRecord_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Lead_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_RecurringAppointmentMasters")]
		public Insight.Intake.Lead Lead_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Lead>("Lead_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("Lead_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Lead>("Lead_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Lead_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_createdby")]
		public Insight.Intake.SystemUser lk_recurringappointmentmaster_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_recurringappointmentmaster_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_recurringappointmentmaster_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_recurringappointmentmaster_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_recurringappointmentmaster_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_modifiedby")]
		public Insight.Intake.SystemUser lk_recurringappointmentmaster_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_recurringappointmentmaster_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_recurringappointmentmaster_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_recurringappointmentmaster_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_recurringappointmentmaster_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 Quote_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_RecurringAppointmentMasters")]
		public Insight.Intake.Quote Quote_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Quote>("Quote_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("Quote_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.Quote>("Quote_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Quote_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 recurrencerule_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurrencerule_recurringappointmentmaster")]
		public Insight.Intake.RecurrenceRule recurrencerule_recurringappointmentmaster
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.RecurrenceRule>("recurrencerule_recurringappointmentmaster", null);
			}
			set
			{
				this.OnPropertyChanging("recurrencerule_recurringappointmentmaster");
				this.SetRelatedEntity<Insight.Intake.RecurrenceRule>("recurrencerule_recurringappointmentmaster", null, value);
				this.OnPropertyChanged("recurrencerule_recurringappointmentmaster");
			}
		}
		
		/// <summary>
		/// N:1 SalesOrder_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SalesOrder_RecurringAppointmentMasters")]
		public Insight.Intake.SalesOrder SalesOrder_RecurringAppointmentMasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SalesOrder>("SalesOrder_RecurringAppointmentMasters", null);
			}
			set
			{
				this.OnPropertyChanging("SalesOrder_RecurringAppointmentMasters");
				this.SetRelatedEntity<Insight.Intake.SalesOrder>("SalesOrder_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("SalesOrder_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 service_recurringappointmentmasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_recurringappointmentmasters")]
		public Insight.Intake.Service service_recurringappointmentmasters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Service>("service_recurringappointmentmasters", null);
			}
			set
			{
				this.OnPropertyChanging("service_recurringappointmentmasters");
				this.SetRelatedEntity<Insight.Intake.Service>("service_recurringappointmentmasters", null, value);
				this.OnPropertyChanged("service_recurringappointmentmasters");
			}
		}
		
		/// <summary>
		/// N:1 team_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_recurringappointmentmaster")]
		public Insight.Intake.Team team_recurringappointmentmaster
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Team>("team_recurringappointmentmaster", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_RecurringAppointmentMaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_RecurringAppointmentMaster")]
		public Insight.Intake.TransactionCurrency TransactionCurrency_RecurringAppointmentMaster
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_RecurringAppointmentMaster", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_RecurringAppointmentMaster");
				this.SetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_RecurringAppointmentMaster", null, value);
				this.OnPropertyChanged("TransactionCurrency_RecurringAppointmentMaster");
			}
		}
		
		/// <summary>
		/// N:1 user_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_recurringappointmentmaster")]
		public Insight.Intake.SystemUser user_recurringappointmentmaster
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("user_recurringappointmentmaster", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public RecurringAppointmentMaster(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}