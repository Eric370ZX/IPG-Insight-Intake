//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ipg_taskconfigurationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// This entity allows to configure which tasks to create within a Gate.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ipg_taskconfiguration")]
	public partial class ipg_taskconfiguration : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_createif = "ipg_createif";
			public const string ipg_duedate = "ipg_duedate";
			public const string ipg_gateconfigurationdetailid = "ipg_gateconfigurationdetailid";
			public const string ipg_gatingoutcomeid = "ipg_gatingoutcomeid";
			public const string ipg_name = "ipg_name";
			public const string ipg_priority = "ipg_priority";
			public const string ipg_reassigntoteamid = "ipg_reassigntoteamid";
			public const string ipg_startdate = "ipg_startdate";
			public const string ipg_statementgenerationeventid = "ipg_statementgenerationeventid";
			public const string ipg_subject = "ipg_subject";
			public const string ipg_taskcategoryid = "ipg_taskcategoryid";
			public const string ipg_taskconfigurationId = "ipg_taskconfigurationid";
			public const string Id = "ipg_taskconfigurationid";
			public const string ipg_TaskRequirementTypeCode = "ipg_taskrequirementtypecode";
			public const string ipg_tasktypecode = "ipg_tasktypecode";
			public const string ipg_tasktypeid = "ipg_tasktypeid";
			public const string ipg_wftaskgroup = "ipg_wftaskgroup";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ipg_taskconfiguration() : 
				base(EntityLogicalName)
		{
		}

		public ipg_taskconfiguration(System.Guid id) :
				base(EntityLogicalName, id)
		{
		}

		public ipg_taskconfiguration(string keyName, object keyValue) :
				base(EntityLogicalName, keyName, keyValue)
		{
		}

		public ipg_taskconfiguration(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
				base(EntityLogicalName, keyAttributes)
		{
		}

		public const string EntityLogicalName = "ipg_taskconfiguration";
		
		public const string EntitySchemaName = "ipg_taskconfiguration";
		
		public const string PrimaryIdAttribute = "ipg_taskconfigurationid";
		
		public const string PrimaryNameAttribute = "ipg_name";
		
		public const string EntityLogicalCollectionName = "ipg_taskconfigurations";
		
		public const string EntitySetName = "ipg_taskconfigurations";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Determines in which circumstances to create User Task
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_createif")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_createif
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_createif");
			}
			set
			{
				this.OnPropertyChanging("ipg_createif");
				this.SetAttributeValue("ipg_createif", value);
				this.OnPropertyChanged("ipg_createif");
			}
		}
		
		/// <summary>
		/// Determines in which circumstances to create User Task
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_createif")]
		public virtual ipg_CreateIf? ipg_createifEnum
		{
			get
			{
				return ((ipg_CreateIf?)(EntityOptionSetEnum.GetEnum(this, "ipg_createif")));
			}
			set
			{
				this.OnPropertyChanging("ipg_createif");
				this.SetAttributeValue("ipg_createif", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_createif");
			}
		}
		
		/// <summary>
		/// Task Due Date in hours starting from now.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_duedate")]
		public System.Nullable<int> ipg_duedate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_duedate");
			}
			set
			{
				this.OnPropertyChanging("ipg_duedate");
				this.SetAttributeValue("ipg_duedate", value);
				this.OnPropertyChanged("ipg_duedate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the related Gate Configuration Detail record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gateconfigurationdetailid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_gateconfigurationdetailid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_gateconfigurationdetailid");
			}
			set
			{
				this.OnPropertyChanging("ipg_gateconfigurationdetailid");
				this.SetAttributeValue("ipg_gateconfigurationdetailid", value);
				this.OnPropertyChanged("ipg_gateconfigurationdetailid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gatingoutcomeid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_gatingoutcomeid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_gatingoutcomeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_gatingoutcomeid");
				this.SetAttributeValue("ipg_gatingoutcomeid", value);
				this.OnPropertyChanged("ipg_gatingoutcomeid");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_name")]
		public string ipg_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_name");
				this.SetAttributeValue("ipg_name", value);
				this.OnPropertyChanged("ipg_name");
			}
		}
		
		/// <summary>
		/// Custom Task priority value so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_priority")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_priority
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_priority");
			}
			set
			{
				this.OnPropertyChanging("ipg_priority");
				this.SetAttributeValue("ipg_priority", value);
				this.OnPropertyChanged("ipg_priority");
			}
		}
		
		/// <summary>
		/// Custom Task priority value so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_priority")]
		public virtual ipg_Priority? ipg_priorityEnum
		{
			get
			{
				return ((ipg_Priority?)(EntityOptionSetEnum.GetEnum(this, "ipg_priority")));
			}
			set
			{
				this.OnPropertyChanging("ipg_priority");
				this.SetAttributeValue("ipg_priority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_priority");
			}
		}
		
		/// <summary>
		/// Unique identifier of the related Team record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_reassigntoteamid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_reassigntoteamid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_reassigntoteamid");
			}
			set
			{
				this.OnPropertyChanging("ipg_reassigntoteamid");
				this.SetAttributeValue("ipg_reassigntoteamid", value);
				this.OnPropertyChanged("ipg_reassigntoteamid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_startdate")]
		public System.Nullable<int> ipg_startdate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_startdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_startdate");
				this.SetAttributeValue("ipg_startdate", value);
				this.OnPropertyChanged("ipg_startdate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_statementgenerationeventid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_statementgenerationeventid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_statementgenerationeventid");
			}
			set
			{
				this.OnPropertyChanging("ipg_statementgenerationeventid");
				this.SetAttributeValue("ipg_statementgenerationeventid", value);
				this.OnPropertyChanged("ipg_statementgenerationeventid");
			}
		}
		
		/// <summary>
		/// Task subject.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_subject")]
		public string ipg_subject
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_subject");
			}
			set
			{
				this.OnPropertyChanging("ipg_subject");
				this.SetAttributeValue("ipg_subject", value);
				this.OnPropertyChanged("ipg_subject");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategoryid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_taskcategoryid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_taskcategoryid");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategoryid");
				this.SetAttributeValue("ipg_taskcategoryid", value);
				this.OnPropertyChanged("ipg_taskcategoryid");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskconfigurationid")]
		public System.Nullable<System.Guid> ipg_taskconfigurationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ipg_taskconfigurationid");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskconfigurationId");
				this.SetAttributeValue("ipg_taskconfigurationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ipg_taskconfigurationId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskconfigurationid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ipg_taskconfigurationId = value;
			}
		}
		
		/// <summary>
		/// Is mandatory, conditional, etc?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskrequirementtypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_TaskRequirementTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_taskrequirementtypecode");
			}
			set
			{
				this.OnPropertyChanging("ipg_TaskRequirementTypeCode");
				this.SetAttributeValue("ipg_taskrequirementtypecode", value);
				this.OnPropertyChanged("ipg_TaskRequirementTypeCode");
			}
		}
		
		/// <summary>
		/// Is mandatory, conditional, etc?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskrequirementtypecode")]
		public virtual ipg_UserTaskRequirementTypes? ipg_TaskRequirementTypeCodeEnum
		{
			get
			{
				return ((ipg_UserTaskRequirementTypes?)(EntityOptionSetEnum.GetEnum(this, "ipg_taskrequirementtypecode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_TaskRequirementTypeCode");
				this.SetAttributeValue("ipg_taskrequirementtypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_TaskRequirementTypeCode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_tasktypecode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_tasktypecode");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypecode");
				this.SetAttributeValue("ipg_tasktypecode", value);
				this.OnPropertyChanged("ipg_tasktypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypecode")]
		public virtual ipg_TaskType1? ipg_tasktypecodeEnum
		{
			get
			{
				return ((ipg_TaskType1?)(EntityOptionSetEnum.GetEnum(this, "ipg_tasktypecode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypecode");
				this.SetAttributeValue("ipg_tasktypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_tasktypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypeid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_tasktypeid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_tasktypeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypeid");
				this.SetAttributeValue("ipg_tasktypeid", value);
				this.OnPropertyChanged("ipg_tasktypeid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_wftaskgroup")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_wftaskgroup
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_wftaskgroup");
			}
			set
			{
				this.OnPropertyChanging("ipg_wftaskgroup");
				this.SetAttributeValue("ipg_wftaskgroup", value);
				this.OnPropertyChanged("ipg_wftaskgroup");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the Task Configuration
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.ipg_taskconfigurationState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.ipg_taskconfigurationState)(System.Enum.ToObject(typeof(Insight.Intake.ipg_taskconfigurationState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Task Configuration
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Task Configuration
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ipg_taskconfiguration_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((ipg_taskconfiguration_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ipg_taskconfiguration(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ipg_taskconfigurationid"] = base.Id;
                        break;
                    case "ipg_taskconfigurationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}