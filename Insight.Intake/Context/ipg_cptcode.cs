//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ipg_cptcodeState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Collection of Current Procedural Terminology codes.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ipg_cptcode")]
	public partial class ipg_cptcode : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_Active = "ipg_active";
			public const string ipg_apcweight = "ipg_apcweight";
			public const string ipg_bodyregion = "ipg_bodyregion";
			public const string ipg_ClaimExceptionOverride = "ipg_claimexceptionoverride";
			public const string ipg_cptcategory = "ipg_cptcategory";
			public const string ipg_cptcode1 = "ipg_cptcode";
			public const string ipg_cptcodeId = "ipg_cptcodeid";
			public const string Id = "ipg_cptcodeid";
			public const string ipg_cptgroupDetail = "ipg_cptgroupdetail";
			public const string ipg_cptgroupgeneral = "ipg_cptgroupgeneral";
			public const string ipg_CPTName = "ipg_cptname";
			public const string ipg_cptroupreporting = "ipg_cptroupreporting";
			public const string ipg_Description = "ipg_description";
			public const string ipg_EffectiveDate = "ipg_effectivedate";
			public const string ipg_ExpirationDate = "ipg_expirationdate";
			public const string ipg_externalid = "ipg_externalid";
			public const string ipg_Gender = "ipg_gender";
			public const string ipg_HighDollar = "ipg_highdollar";
			public const string ipg_ImplantUsed = "ipg_implantused";
			public const string ipg_IsPrimary = "ipg_isprimary";
			public const string ipg_name = "ipg_name";
			public const string ipg_procedurename = "ipg_procedurename";
			public const string ipg_PropelNasalStent = "ipg_propelnasalstent";
			public const string ipg_RequiredInformationTemplateId = "ipg_requiredinformationtemplateid";
			public const string ipg_reviewrequired = "ipg_reviewrequired";
			public const string ipg_supportedCPT = "ipg_supportedcpt";
			public const string ipg_todaysdate = "ipg_todaysdate";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ipg_cptcode() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "ipg_cptcode";
		
		public const string EntitySchemaName = "ipg_cptcode";
		
		public const string PrimaryIdAttribute = "ipg_cptcodeid";
		
		public const string PrimaryNameAttribute = "ipg_name";
		
		public const string EntityLogicalCollectionName = "ipg_cptcodes";
		
		public const string EntitySetName = "ipg_cptcodes";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows whether a CPT code is Expired or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_active")]
		public System.Nullable<bool> ipg_Active
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_active");
			}
			set
			{
				this.OnPropertyChanging("ipg_Active");
				this.SetAttributeValue("ipg_active", value);
				this.OnPropertyChanged("ipg_Active");
			}
		}
		
		/// <summary>
		/// Procedure's APC Weight
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_apcweight")]
		public System.Nullable<decimal> ipg_apcweight
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ipg_apcweight");
			}
			set
			{
				this.OnPropertyChanging("ipg_apcweight");
				this.SetAttributeValue("ipg_apcweight", value);
				this.OnPropertyChanged("ipg_apcweight");
			}
		}
		
		/// <summary>
		/// Drop-down list for body area affected by surgical procedure.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_bodyregion")]
		public Microsoft.Xrm.Sdk.OptionSetValueCollection ipg_bodyregion
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("ipg_bodyregion");
			}
			set
			{
				this.OnPropertyChanging("ipg_bodyregion");
				this.SetAttributeValue("ipg_bodyregion", value);
				this.OnPropertyChanged("ipg_bodyregion");
			}
		}
		
		/// <summary>
		/// Drop-down list for body area affected by surgical procedure.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_bodyregion")]
		public virtual System.Collections.Generic.IEnumerable<ipg_BodyRegions> ipg_bodyregionEnum
		{
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ipg_BodyRegions>(this, "ipg_bodyregion");
			}
			set
			{
				this.OnPropertyChanging("ipg_bodyregion");
				this.SetAttributeValue("ipg_bodyregion", EntityOptionSetEnum.GetMultiEnum(this, "ipg_bodyregion", value));
				this.OnPropertyChanged("ipg_bodyregion");
			}
		}
		
		/// <summary>
		/// Represents exception to this CPT with respect to claim.
		///
		///There are many times a Carrier asks IPG to include certain non-standard values on a Claim that deviates from the usual.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_claimexceptionoverride")]
		public System.Nullable<bool> ipg_ClaimExceptionOverride
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_claimexceptionoverride");
			}
			set
			{
				this.OnPropertyChanging("ipg_ClaimExceptionOverride");
				this.SetAttributeValue("ipg_claimexceptionoverride", value);
				this.OnPropertyChanged("ipg_ClaimExceptionOverride");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptcategory")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_cptcategory
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_cptcategory");
			}
			set
			{
				this.OnPropertyChanging("ipg_cptcategory");
				this.SetAttributeValue("ipg_cptcategory", value);
				this.OnPropertyChanged("ipg_cptcategory");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptcategory")]
		public virtual ipg_CPTCategory? ipg_cptcategoryEnum
		{
			get
			{
				return ((ipg_CPTCategory?)(EntityOptionSetEnum.GetEnum(this, "ipg_cptcategory")));
			}
			set
			{
				this.OnPropertyChanging("ipg_cptcategory");
				this.SetAttributeValue("ipg_cptcategory", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_cptcategory");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptcode")]
		public string ipg_cptcode1
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_cptcode");
			}
			set
			{
				this.OnPropertyChanging("ipg_cptcode1");
				this.SetAttributeValue("ipg_cptcode", value);
				this.OnPropertyChanged("ipg_cptcode1");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptcodeid")]
		public System.Nullable<System.Guid> ipg_cptcodeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ipg_cptcodeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_cptcodeId");
				this.SetAttributeValue("ipg_cptcodeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ipg_cptcodeId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptcodeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ipg_cptcodeId = value;
			}
		}
		
		/// <summary>
		/// Representing regarding column from Betos import file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptgroupdetail")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_cptgroupDetail
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_cptgroupdetail");
			}
			set
			{
				this.OnPropertyChanging("ipg_cptgroupDetail");
				this.SetAttributeValue("ipg_cptgroupdetail", value);
				this.OnPropertyChanged("ipg_cptgroupDetail");
			}
		}
		
		/// <summary>
		/// Representing regarding column from Betos import file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptgroupdetail")]
		public virtual ipg_CPTGroupDetail? ipg_cptgroupDetailEnum
		{
			get
			{
				return ((ipg_CPTGroupDetail?)(EntityOptionSetEnum.GetEnum(this, "ipg_cptgroupdetail")));
			}
			set
			{
				this.OnPropertyChanging("ipg_cptgroupDetail");
				this.SetAttributeValue("ipg_cptgroupdetail", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_cptgroupDetail");
			}
		}
		
		/// <summary>
		/// Representing regarding column from Betos import file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptgroupgeneral")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_cptgroupgeneral
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_cptgroupgeneral");
			}
			set
			{
				this.OnPropertyChanging("ipg_cptgroupgeneral");
				this.SetAttributeValue("ipg_cptgroupgeneral", value);
				this.OnPropertyChanged("ipg_cptgroupgeneral");
			}
		}
		
		/// <summary>
		/// Representing regarding column from Betos import file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptgroupgeneral")]
		public virtual ipg_CPTGroupGeneral? ipg_cptgroupgeneralEnum
		{
			get
			{
				return ((ipg_CPTGroupGeneral?)(EntityOptionSetEnum.GetEnum(this, "ipg_cptgroupgeneral")));
			}
			set
			{
				this.OnPropertyChanging("ipg_cptgroupgeneral");
				this.SetAttributeValue("ipg_cptgroupgeneral", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_cptgroupgeneral");
			}
		}
		
		/// <summary>
		/// Procedural name associated with the code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptname")]
		public string ipg_CPTName
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_cptname");
			}
			set
			{
				this.OnPropertyChanging("ipg_CPTName");
				this.SetAttributeValue("ipg_cptname", value);
				this.OnPropertyChanged("ipg_CPTName");
			}
		}
		
		/// <summary>
		/// Representing regarding column from Betos import file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptroupreporting")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_cptroupreporting
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_cptroupreporting");
			}
			set
			{
				this.OnPropertyChanging("ipg_cptroupreporting");
				this.SetAttributeValue("ipg_cptroupreporting", value);
				this.OnPropertyChanged("ipg_cptroupreporting");
			}
		}
		
		/// <summary>
		/// Representing regarding column from Betos import file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_cptroupreporting")]
		public virtual ipg_cptroupreporting? ipg_cptroupreportingEnum
		{
			get
			{
				return ((ipg_cptroupreporting?)(EntityOptionSetEnum.GetEnum(this, "ipg_cptroupreporting")));
			}
			set
			{
				this.OnPropertyChanging("ipg_cptroupreporting");
				this.SetAttributeValue("ipg_cptroupreporting", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_cptroupreporting");
			}
		}
		
		/// <summary>
		/// Description of the CPT code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_description")]
		public string ipg_Description
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_description");
			}
			set
			{
				this.OnPropertyChanging("ipg_Description");
				this.SetAttributeValue("ipg_description", value);
				this.OnPropertyChanged("ipg_Description");
			}
		}
		
		/// <summary>
		/// Beginning date the CPT can be used.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_effectivedate")]
		public System.Nullable<System.DateTime> ipg_EffectiveDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_effectivedate");
			}
			set
			{
				this.OnPropertyChanging("ipg_EffectiveDate");
				this.SetAttributeValue("ipg_effectivedate", value);
				this.OnPropertyChanged("ipg_EffectiveDate");
			}
		}
		
		/// <summary>
		/// Date the CPT code is no longer useable.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_expirationdate")]
		public System.Nullable<System.DateTime> ipg_ExpirationDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_expirationdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExpirationDate");
				this.SetAttributeValue("ipg_expirationdate", value);
				this.OnPropertyChanged("ipg_ExpirationDate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_externalid")]
		public string ipg_externalid
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_externalid");
			}
			set
			{
				this.OnPropertyChanging("ipg_externalid");
				this.SetAttributeValue("ipg_externalid", value);
				this.OnPropertyChanged("ipg_externalid");
			}
		}
		
		/// <summary>
		/// Surgery applies to Male, Female or All.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gender")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_Gender
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_gender");
			}
			set
			{
				this.OnPropertyChanging("ipg_Gender");
				this.SetAttributeValue("ipg_gender", value);
				this.OnPropertyChanged("ipg_Gender");
			}
		}
		
		/// <summary>
		/// Surgery applies to Male, Female or All.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gender")]
		public virtual ipg_cptcode_ipg_Gender? ipg_GenderEnum
		{
			get
			{
				return ((ipg_cptcode_ipg_Gender?)(EntityOptionSetEnum.GetEnum(this, "ipg_gender")));
			}
			set
			{
				this.OnPropertyChanging("ipg_Gender");
				this.SetAttributeValue("ipg_gender", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_Gender");
			}
		}
		
		/// <summary>
		/// Represents high dollar cpt code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_highdollar")]
		public System.Nullable<bool> ipg_HighDollar
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_highdollar");
			}
			set
			{
				this.OnPropertyChanging("ipg_HighDollar");
				this.SetAttributeValue("ipg_highdollar", value);
				this.OnPropertyChanged("ipg_HighDollar");
			}
		}
		
		/// <summary>
		/// This flag indicates whether the CPT code uses an implant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_implantused")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_ImplantUsed
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_implantused");
			}
			set
			{
				this.OnPropertyChanging("ipg_ImplantUsed");
				this.SetAttributeValue("ipg_implantused", value);
				this.OnPropertyChanged("ipg_ImplantUsed");
			}
		}
		
		/// <summary>
		/// This flag indicates whether the CPT code uses an implant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_implantused")]
		public virtual ipg_cptcode_ipg_ImplantUsed? ipg_ImplantUsedEnum
		{
			get
			{
				return ((ipg_cptcode_ipg_ImplantUsed?)(EntityOptionSetEnum.GetEnum(this, "ipg_implantused")));
			}
			set
			{
				this.OnPropertyChanging("ipg_ImplantUsed");
				this.SetAttributeValue("ipg_implantused", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_ImplantUsed");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isprimary")]
		public System.Nullable<bool> ipg_IsPrimary
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isprimary");
			}
			set
			{
				this.OnPropertyChanging("ipg_IsPrimary");
				this.SetAttributeValue("ipg_isprimary", value);
				this.OnPropertyChanged("ipg_IsPrimary");
			}
		}
		
		/// <summary>
		/// Alpha-numeric procedural code that will be entered on a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_name")]
		public string ipg_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_name");
				this.SetAttributeValue("ipg_name", value);
				this.OnPropertyChanged("ipg_name");
			}
		}
		
		/// <summary>
		/// The procedure that the CPT is associated with
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_procedurename")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_procedurename
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_procedurename");
			}
			set
			{
				this.OnPropertyChanging("ipg_procedurename");
				this.SetAttributeValue("ipg_procedurename", value);
				this.OnPropertyChanged("ipg_procedurename");
			}
		}
		
		/// <summary>
		/// Represents whether the CPT code is for Propel Nasal Stent or not. If yes, then a workflow will notify auth team to verify if propel nasal parts are included in the Case or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_propelnasalstent")]
		public System.Nullable<bool> ipg_PropelNasalStent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_propelnasalstent");
			}
			set
			{
				this.OnPropertyChanging("ipg_PropelNasalStent");
				this.SetAttributeValue("ipg_propelnasalstent", value);
				this.OnPropertyChanged("ipg_PropelNasalStent");
			}
		}
		
		/// <summary>
		/// Represents required information template applied on this CPT code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_requiredinformationtemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_RequiredInformationTemplateId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_requiredinformationtemplateid");
			}
			set
			{
				this.OnPropertyChanging("ipg_RequiredInformationTemplateId");
				this.SetAttributeValue("ipg_requiredinformationtemplateid", value);
				this.OnPropertyChanged("ipg_RequiredInformationTemplateId");
			}
		}
		
		/// <summary>
		/// This flag determines if a review is required
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_reviewrequired")]
		public System.Nullable<bool> ipg_reviewrequired
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_reviewrequired");
			}
			set
			{
				this.OnPropertyChanging("ipg_reviewrequired");
				this.SetAttributeValue("ipg_reviewrequired", value);
				this.OnPropertyChanged("ipg_reviewrequired");
			}
		}
		
		/// <summary>
		/// deprecated - do not use
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_supportedcpt")]
		public System.Nullable<bool> ipg_supportedCPT
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_supportedcpt");
			}
			set
			{
				this.OnPropertyChanging("ipg_supportedCPT");
				this.SetAttributeValue("ipg_supportedcpt", value);
				this.OnPropertyChanged("ipg_supportedCPT");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_todaysdate")]
		public System.Nullable<System.DateTime> ipg_todaysdate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_todaysdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_todaysdate");
				this.SetAttributeValue("ipg_todaysdate", value);
				this.OnPropertyChanged("ipg_todaysdate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the CPT Code
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.ipg_cptcodeState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.ipg_cptcodeState)(System.Enum.ToObject(typeof(Insight.Intake.ipg_cptcodeState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the CPT Code
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the CPT Code
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ipg_cptcode_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((ipg_cptcode_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ipg_cptcode(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ipg_cptcodeid"] = base.Id;
                        break;
                    case "ipg_cptcodeid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}