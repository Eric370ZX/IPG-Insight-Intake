//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ipg_tasktypeState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ipg_tasktype")]
	public partial class ipg_tasktype : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_assigntoteam = "ipg_assigntoteam";
			public const string ipg_assigntouserid = "ipg_assigntouserid";
			public const string ipg_casestatecodes = "ipg_casestatecodes";
			public const string ipg_description = "ipg_description";
			public const string ipg_documenttypeid = "ipg_documenttypeid";
			public const string ipg_duedate = "ipg_duedate";
			public const string ipg_generatedbycode = "ipg_generatedbycode";
			public const string ipg_isactive = "ipg_isactive";
			public const string ipg_isportal = "ipg_isportal";
			public const string ipg_metatag = "ipg_metatag";
			public const string ipg_name = "ipg_name";
			public const string ipg_priority = "ipg_priority";
			public const string ipg_startdate = "ipg_startdate";
			public const string ipg_subcategory = "ipg_subcategory";
			public const string ipg_taskcategory = "ipg_taskcategory";
			public const string ipg_taskcategoryid = "ipg_taskcategoryid";
			public const string ipg_tasktitle = "ipg_tasktitle";
			public const string ipg_tasktypeId = "ipg_tasktypeid";
			public const string Id = "ipg_tasktypeid";
			public const string ipg_typeid = "ipg_typeid";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ipg_tasktype() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "ipg_tasktype";
		
		public const string EntitySchemaName = "ipg_tasktype";
		
		public const string PrimaryIdAttribute = "ipg_tasktypeid";
		
		public const string PrimaryNameAttribute = "ipg_name";
		
		public const string EntityLogicalCollectionName = "ipg_tasktypes";
		
		public const string EntitySetName = "ipg_tasktypes";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_assigntoteam")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_assigntoteam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_assigntoteam");
			}
			set
			{
				this.OnPropertyChanging("ipg_assigntoteam");
				this.SetAttributeValue("ipg_assigntoteam", value);
				this.OnPropertyChanged("ipg_assigntoteam");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_assigntouserid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_assigntouserid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_assigntouserid");
			}
			set
			{
				this.OnPropertyChanging("ipg_assigntouserid");
				this.SetAttributeValue("ipg_assigntouserid", value);
				this.OnPropertyChanged("ipg_assigntouserid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_casestatecodes")]
		public Microsoft.Xrm.Sdk.OptionSetValueCollection ipg_casestatecodes
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("ipg_casestatecodes");
			}
			set
			{
				this.OnPropertyChanging("ipg_casestatecodes");
				this.SetAttributeValue("ipg_casestatecodes", value);
				this.OnPropertyChanged("ipg_casestatecodes");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_casestatecodes")]
		public virtual System.Collections.Generic.IEnumerable<ipg_CaseStateCodes> ipg_casestatecodesEnum
		{
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ipg_CaseStateCodes>(this, "ipg_casestatecodes");
			}
			set
			{
				this.OnPropertyChanging("ipg_casestatecodes");
				this.SetAttributeValue("ipg_casestatecodes", EntityOptionSetEnum.GetMultiEnum(this, "ipg_casestatecodes", value));
				this.OnPropertyChanged("ipg_casestatecodes");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_description")]
		public string ipg_description
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_description");
			}
			set
			{
				this.OnPropertyChanging("ipg_description");
				this.SetAttributeValue("ipg_description", value);
				this.OnPropertyChanged("ipg_description");
			}
		}
		
		/// <summary>
		/// Users will be using Sub Category text field that will be matched to Document type by Abbreviation when Document uploaded from portal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_documenttypeid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_documenttypeid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_documenttypeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_documenttypeid");
				this.SetAttributeValue("ipg_documenttypeid", value);
				this.OnPropertyChanged("ipg_documenttypeid");
			}
		}
		
		/// <summary>
		/// Task Due Date = Task Start Date + this one
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_duedate")]
		public System.Nullable<int> ipg_duedate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_duedate");
			}
			set
			{
				this.OnPropertyChanging("ipg_duedate");
				this.SetAttributeValue("ipg_duedate", value);
				this.OnPropertyChanged("ipg_duedate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_generatedbycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_generatedbycode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_generatedbycode");
			}
			set
			{
				this.OnPropertyChanging("ipg_generatedbycode");
				this.SetAttributeValue("ipg_generatedbycode", value);
				this.OnPropertyChanged("ipg_generatedbycode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_generatedbycode")]
		public virtual ipg_GeneratedByCode? ipg_generatedbycodeEnum
		{
			get
			{
				return ((ipg_GeneratedByCode?)(EntityOptionSetEnum.GetEnum(this, "ipg_generatedbycode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_generatedbycode");
				this.SetAttributeValue("ipg_generatedbycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_generatedbycode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isactive")]
		public System.Nullable<bool> ipg_isactive
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isactive");
			}
			set
			{
				this.OnPropertyChanging("ipg_isactive");
				this.SetAttributeValue("ipg_isactive", value);
				this.OnPropertyChanged("ipg_isactive");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isportal")]
		public System.Nullable<bool> ipg_isportal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isportal");
			}
			set
			{
				this.OnPropertyChanging("ipg_isportal");
				this.SetAttributeValue("ipg_isportal", value);
				this.OnPropertyChanged("ipg_isportal");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_metatag")]
		public string ipg_metatag
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_metatag");
			}
			set
			{
				this.OnPropertyChanging("ipg_metatag");
				this.SetAttributeValue("ipg_metatag", value);
				this.OnPropertyChanged("ipg_metatag");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_name")]
		public string ipg_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_name");
				this.SetAttributeValue("ipg_name", value);
				this.OnPropertyChanged("ipg_name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_priority")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_priority
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_priority");
			}
			set
			{
				this.OnPropertyChanging("ipg_priority");
				this.SetAttributeValue("ipg_priority", value);
				this.OnPropertyChanged("ipg_priority");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_priority")]
		public virtual ipg_Priority? ipg_priorityEnum
		{
			get
			{
				return ((ipg_Priority?)(EntityOptionSetEnum.GetEnum(this, "ipg_priority")));
			}
			set
			{
				this.OnPropertyChanging("ipg_priority");
				this.SetAttributeValue("ipg_priority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_priority");
			}
		}
		
		/// <summary>
		/// Task Start Date = Task Creation Date + this one
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_startdate")]
		public System.Nullable<int> ipg_startdate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_startdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_startdate");
				this.SetAttributeValue("ipg_startdate", value);
				this.OnPropertyChanged("ipg_startdate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_subcategory")]
		public string ipg_subcategory
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_subcategory");
			}
			set
			{
				this.OnPropertyChanging("ipg_subcategory");
				this.SetAttributeValue("ipg_subcategory", value);
				this.OnPropertyChanged("ipg_subcategory");
			}
		}
		
		/// <summary>
		/// This field is Obsolete. We are using LookUp instead ipg_taskcategoryid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategory")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_taskcategory
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_taskcategory");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategory");
				this.SetAttributeValue("ipg_taskcategory", value);
				this.OnPropertyChanged("ipg_taskcategory");
			}
		}
		
		/// <summary>
		/// This field is Obsolete. We are using LookUp instead ipg_taskcategoryid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategory")]
		public virtual ipg_Taskcategory1? ipg_taskcategoryEnum
		{
			get
			{
				return ((ipg_Taskcategory1?)(EntityOptionSetEnum.GetEnum(this, "ipg_taskcategory")));
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategory");
				this.SetAttributeValue("ipg_taskcategory", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_taskcategory");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategoryid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_taskcategoryid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_taskcategoryid");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategoryid");
				this.SetAttributeValue("ipg_taskcategoryid", value);
				this.OnPropertyChanged("ipg_taskcategoryid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktitle")]
		public string ipg_tasktitle
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_tasktitle");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktitle");
				this.SetAttributeValue("ipg_tasktitle", value);
				this.OnPropertyChanged("ipg_tasktitle");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypeid")]
		public System.Nullable<System.Guid> ipg_tasktypeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ipg_tasktypeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypeId");
				this.SetAttributeValue("ipg_tasktypeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ipg_tasktypeId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ipg_tasktypeId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_typeid")]
		public System.Nullable<int> ipg_typeid
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_typeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_typeid");
				this.SetAttributeValue("ipg_typeid", value);
				this.OnPropertyChanged("ipg_typeid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the Task Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.ipg_tasktypeState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.ipg_tasktypeState)(System.Enum.ToObject(typeof(Insight.Intake.ipg_tasktypeState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Task Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Task Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ipg_tasktype_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((ipg_tasktype_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_tasktype_ipg_taskreason_tasktype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_tasktype_ipg_taskreason_tasktype")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_taskreason> ipg_ipg_tasktype_ipg_taskreason_tasktype
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_taskreason>("ipg_ipg_tasktype_ipg_taskreason_tasktype", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_tasktype_ipg_taskreason_tasktype");
				this.SetRelatedEntities<Insight.Intake.ipg_taskreason>("ipg_ipg_tasktype_ipg_taskreason_tasktype", null, value);
				this.OnPropertyChanged("ipg_ipg_tasktype_ipg_taskreason_tasktype");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_taskreasondetails> ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_taskreasondetails>("ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid");
				this.SetRelatedEntities<Insight.Intake.ipg_taskreasondetails>("ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid", null, value);
				this.OnPropertyChanged("ipg_ipg_tasktype_ipg_taskreasondetails_tasktypeid");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ipg_tasktype(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ipg_tasktypeid"] = base.Id;
                        break;
                    case "ipg_tasktypeid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}