//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Insight.Intake
{
	
	/// <summary>
	/// Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("team")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public partial class Team : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string AdministratorId = "administratorid";
			public const string AzureActiveDirectoryObjectId = "azureactivedirectoryobjectid";
			public const string BusinessUnitId = "businessunitid";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string EMailAddress = "emailaddress";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_threshold = "ipg_threshold";
			public const string IsDefault = "isdefault";
			public const string MembershipType = "membershiptype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ProcessId = "processid";
			public const string QueueId = "queueid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string StageId = "stageid";
			public const string SystemManaged = "systemmanaged";
			public const string TeamId = "teamid";
			public const string Id = "teamid";
			public const string TeamTemplateId = "teamtemplateid";
			public const string TeamType = "teamtype";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string VersionNumber = "versionnumber";
			public const string YomiName = "yominame";
			public const string business_unit_teams = "business_unit_teams";
			public const string knowledgearticle_Teams = "knowledgearticle_Teams";
			public const string lk_team_createdonbehalfby = "lk_team_createdonbehalfby";
			public const string lk_team_modifiedonbehalfby = "lk_team_modifiedonbehalfby";
			public const string lk_teambase_administratorid = "lk_teambase_administratorid";
			public const string lk_teambase_createdby = "lk_teambase_createdby";
			public const string lk_teambase_modifiedby = "lk_teambase_modifiedby";
			public const string queue_team = "queue_team";
			public const string TransactionCurrency_Team = "TransactionCurrency_Team";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Team() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "team";
		
		public const string EntitySchemaName = "Team";
		
		public const string PrimaryIdAttribute = "teamid";
		
		public const string PrimaryNameAttribute = "name";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user primary responsible for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratorid")]
		public Microsoft.Xrm.Sdk.EntityReference AdministratorId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("administratorid");
			}
			set
			{
				this.OnPropertyChanging("AdministratorId");
				this.SetAttributeValue("administratorid", value);
				this.OnPropertyChanged("AdministratorId");
			}
		}
		
		/// <summary>
		/// The Azure active directory object Id for a group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("azureactivedirectoryobjectid")]
		public System.Nullable<System.Guid> AzureActiveDirectoryObjectId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("azureactivedirectoryobjectid");
			}
			set
			{
				this.OnPropertyChanging("AzureActiveDirectoryObjectId");
				this.SetAttributeValue("azureactivedirectoryobjectid", value);
				this.OnPropertyChanged("AzureActiveDirectoryObjectId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit with which the team is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
			}
			set
			{
				this.OnPropertyChanging("BusinessUnitId");
				this.SetAttributeValue("businessunitid", value);
				this.OnPropertyChanged("BusinessUnitId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the team was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Description of the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Email address for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EMailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.OnPropertyChanging("EMailAddress");
				this.SetAttributeValue("emailaddress", value);
				this.OnPropertyChanged("EMailAddress");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the team with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Max load for each Member
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_threshold")]
		public System.Nullable<int> ipg_threshold
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_threshold");
			}
			set
			{
				this.OnPropertyChanging("ipg_threshold");
				this.SetAttributeValue("ipg_threshold", value);
				this.OnPropertyChanged("ipg_threshold");
			}
		}
		
		/// <summary>
		/// Information about whether the team is a default business unit team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
		public System.Nullable<bool> IsDefault
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptype")]
		public Microsoft.Xrm.Sdk.OptionSetValue MembershipType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("membershiptype");
			}
			set
			{
				this.OnPropertyChanging("MembershipType");
				this.SetAttributeValue("membershiptype", value);
				this.OnPropertyChanged("MembershipType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptype")]
		public virtual Team_MembershipType? MembershipTypeEnum
		{
			get
			{
				return ((Team_MembershipType?)(EntityOptionSetEnum.GetEnum(this, "membershiptype")));
			}
			set
			{
				this.OnPropertyChanging("MembershipType");
				this.SetAttributeValue("membershiptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("MembershipType");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the team was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Name of the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default queue for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		public Microsoft.Xrm.Sdk.EntityReference QueueId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("queueid");
			}
			set
			{
				this.OnPropertyChanging("QueueId");
				this.SetAttributeValue("queueid", value);
				this.OnPropertyChanged("QueueId");
			}
		}
		
		/// <summary>
		/// Choose the record that the team relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Select whether the team will be managed by the system.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemmanaged")]
		public System.Nullable<bool> SystemManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("systemmanaged");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
		public System.Nullable<System.Guid> TeamId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("teamid");
			}
			set
			{
				this.OnPropertyChanging("TeamId");
				this.SetAttributeValue("teamid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("TeamId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.TeamId = value;
			}
		}
		
		/// <summary>
		/// Shows the team template that is associated with the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference TeamTemplateId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("teamtemplateid");
			}
			set
			{
				this.OnPropertyChanging("TeamTemplateId");
				this.SetAttributeValue("teamtemplateid", value);
				this.OnPropertyChanged("TeamTemplateId");
			}
		}
		
		/// <summary>
		/// Select the team type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtype")]
		public Microsoft.Xrm.Sdk.OptionSetValue TeamType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("teamtype");
			}
			set
			{
				this.OnPropertyChanging("TeamType");
				this.SetAttributeValue("teamtype", value);
				this.OnPropertyChanged("TeamType");
			}
		}
		
		/// <summary>
		/// Select the team type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtype")]
		public virtual Team_TeamType? TeamTypeEnum
		{
			get
			{
				return ((Team_TeamType?)(EntityOptionSetEnum.GetEnum(this, "teamtype")));
			}
			set
			{
				this.OnPropertyChanging("TeamType");
				this.SetAttributeValue("teamtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("TeamType");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Version number of the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
		public string YomiName
		{
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
			set
			{
				this.OnPropertyChanging("YomiName");
				this.SetAttributeValue("yominame", value);
				this.OnPropertyChanged("YomiName");
			}
		}
		
		/// <summary>
		/// 1:N adx_portalcomment_team_owningteam
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_portalcomment_team_owningteam")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.adx_portalcomment> adx_portalcomment_team_owningteam
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.adx_portalcomment>("adx_portalcomment_team_owningteam", null);
			}
			set
			{
				this.OnPropertyChanging("adx_portalcomment_team_owningteam");
				this.SetRelatedEntities<Insight.Intake.adx_portalcomment>("adx_portalcomment_team_owningteam", null, value);
				this.OnPropertyChanged("adx_portalcomment_team_owningteam");
			}
		}
		
		/// <summary>
		/// 1:N ipg_carrier_audit_history_team_owningteam
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_carrier_audit_history_team_owningteam")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrier_audit_history> ipg_carrier_audit_history_team_owningteam
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrier_audit_history>("ipg_carrier_audit_history_team_owningteam", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_carrier_audit_history_team_owningteam");
				this.SetRelatedEntities<Insight.Intake.ipg_carrier_audit_history>("ipg_carrier_audit_history_team_owningteam", null, value);
				this.OnPropertyChanged("ipg_carrier_audit_history_team_owningteam");
			}
		}
		
		/// <summary>
		/// 1:N ipg_gateactivity_team_owningteam
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_gateactivity_team_owningteam")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_gateactivity> ipg_gateactivity_team_owningteam
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_gateactivity>("ipg_gateactivity_team_owningteam", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_gateactivity_team_owningteam");
				this.SetRelatedEntities<Insight.Intake.ipg_gateactivity>("ipg_gateactivity_team_owningteam", null, value);
				this.OnPropertyChanged("ipg_gateactivity_team_owningteam");
			}
		}
		
		/// <summary>
		/// 1:N ipg_historicaudit_team_owningteam
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_historicaudit_team_owningteam")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_historicaudit> ipg_historicaudit_team_owningteam
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_historicaudit>("ipg_historicaudit_team_owningteam", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_historicaudit_team_owningteam");
				this.SetRelatedEntities<Insight.Intake.ipg_historicaudit>("ipg_historicaudit_team_owningteam", null, value);
				this.OnPropertyChanged("ipg_historicaudit_team_owningteam");
			}
		}
		
		/// <summary>
		/// 1:N ipg_team_ipg_gateconfiguration_assigntoteamid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_team_ipg_gateconfiguration_assigntoteamid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_gateconfiguration> ipg_team_ipg_gateconfiguration_assigntoteamid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_gateconfiguration>("ipg_team_ipg_gateconfiguration_assigntoteamid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_team_ipg_gateconfiguration_assigntoteamid");
				this.SetRelatedEntities<Insight.Intake.ipg_gateconfiguration>("ipg_team_ipg_gateconfiguration_assigntoteamid", null, value);
				this.OnPropertyChanged("ipg_team_ipg_gateconfiguration_assigntoteamid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_team_ipg_taskconfiguration_reassigntoteamid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_team_ipg_taskconfiguration_reassigntoteamid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_taskconfiguration> ipg_team_ipg_taskconfiguration_reassigntoteamid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_taskconfiguration>("ipg_team_ipg_taskconfiguration_reassigntoteamid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_team_ipg_taskconfiguration_reassigntoteamid");
				this.SetRelatedEntities<Insight.Intake.ipg_taskconfiguration>("ipg_team_ipg_taskconfiguration_reassigntoteamid", null, value);
				this.OnPropertyChanged("ipg_team_ipg_taskconfiguration_reassigntoteamid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_team_ipg_tasktype_assigntoteam
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_team_ipg_tasktype_assigntoteam")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_tasktype> ipg_team_ipg_tasktype_assigntoteam
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_tasktype>("ipg_team_ipg_tasktype_assigntoteam", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_team_ipg_tasktype_assigntoteam");
				this.SetRelatedEntities<Insight.Intake.ipg_tasktype>("ipg_team_ipg_tasktype_assigntoteam", null, value);
				this.OnPropertyChanged("ipg_team_ipg_tasktype_assigntoteam");
			}
		}
		
		/// <summary>
		/// 1:N ipg_team_task_portalowningteamrid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_team_task_portalowningteamrid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Task> ipg_team_task_portalowningteamrid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Task>("ipg_team_task_portalowningteamrid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_team_task_portalowningteamrid");
				this.SetRelatedEntities<Insight.Intake.Task>("ipg_team_task_portalowningteamrid", null, value);
				this.OnPropertyChanged("ipg_team_task_portalowningteamrid");
			}
		}
		
		/// <summary>
		/// 1:N lead_owning_team
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lead_owning_team")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Lead> lead_owning_team
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Lead>("lead_owning_team", null);
			}
			set
			{
				this.OnPropertyChanging("lead_owning_team");
				this.SetRelatedEntities<Insight.Intake.Lead>("lead_owning_team", null, value);
				this.OnPropertyChanged("lead_owning_team");
			}
		}
		
		/// <summary>
		/// 1:N team_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_accounts")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Account> team_accounts
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Account>("team_accounts", null);
			}
			set
			{
				this.OnPropertyChanging("team_accounts");
				this.SetRelatedEntities<Insight.Intake.Account>("team_accounts", null, value);
				this.OnPropertyChanged("team_accounts");
			}
		}
		
		/// <summary>
		/// 1:N team_activity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_activity")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityPointer> team_activity
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ActivityPointer>("team_activity", null);
			}
			set
			{
				this.OnPropertyChanging("team_activity");
				this.SetRelatedEntities<Insight.Intake.ActivityPointer>("team_activity", null, value);
				this.OnPropertyChanged("team_activity");
			}
		}
		
		/// <summary>
		/// 1:N team_annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_annotations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Annotation> team_annotations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Annotation>("team_annotations", null);
			}
			set
			{
				this.OnPropertyChanging("team_annotations");
				this.SetRelatedEntities<Insight.Intake.Annotation>("team_annotations", null, value);
				this.OnPropertyChanged("team_annotations");
			}
		}
		
		/// <summary>
		/// 1:N team_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_appointment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Appointment> team_appointment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Appointment>("team_appointment", null);
			}
			set
			{
				this.OnPropertyChanging("team_appointment");
				this.SetRelatedEntities<Insight.Intake.Appointment>("team_appointment", null, value);
				this.OnPropertyChanged("team_appointment");
			}
		}
		
		/// <summary>
		/// 1:N team_asyncoperation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_asyncoperation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> team_asyncoperation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("team_asyncoperation", null);
			}
			set
			{
				this.OnPropertyChanging("team_asyncoperation");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("team_asyncoperation", null, value);
				this.OnPropertyChanged("team_asyncoperation");
			}
		}
		
		/// <summary>
		/// 1:N Team_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Team_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> Team_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("Team_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("Team_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("Team_AsyncOperations", null, value);
				this.OnPropertyChanged("Team_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N team_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_contacts")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Contact> team_contacts
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Contact>("team_contacts", null);
			}
			set
			{
				this.OnPropertyChanging("team_contacts");
				this.SetRelatedEntities<Insight.Intake.Contact>("team_contacts", null, value);
				this.OnPropertyChanged("team_contacts");
			}
		}
		
		/// <summary>
		/// 1:N team_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_convertrule")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ConvertRule> team_convertrule
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ConvertRule>("team_convertrule", null);
			}
			set
			{
				this.OnPropertyChanging("team_convertrule");
				this.SetRelatedEntities<Insight.Intake.ConvertRule>("team_convertrule", null, value);
				this.OnPropertyChanged("team_convertrule");
			}
		}
		
		/// <summary>
		/// 1:N Team_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Team_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> Team_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("Team_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("Team_DuplicateBaseRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("Team_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("Team_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N Team_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Team_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> Team_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("Team_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("Team_DuplicateMatchingRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("Team_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("Team_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N team_DuplicateRules
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_DuplicateRules")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRule> team_DuplicateRules
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRule>("team_DuplicateRules", null);
			}
			set
			{
				this.OnPropertyChanging("team_DuplicateRules");
				this.SetRelatedEntities<Insight.Intake.DuplicateRule>("team_DuplicateRules", null, value);
				this.OnPropertyChanged("team_DuplicateRules");
			}
		}
		
		/// <summary>
		/// 1:N team_email
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Email> team_email
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Email>("team_email", null);
			}
			set
			{
				this.OnPropertyChanging("team_email");
				this.SetRelatedEntities<Insight.Intake.Email>("team_email", null, value);
				this.OnPropertyChanged("team_email");
			}
		}
		
		/// <summary>
		/// 1:N team_email_templates
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email_templates")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Template> team_email_templates
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Template>("team_email_templates", null);
			}
			set
			{
				this.OnPropertyChanging("team_email_templates");
				this.SetRelatedEntities<Insight.Intake.Template>("team_email_templates", null, value);
				this.OnPropertyChanged("team_email_templates");
			}
		}
		
		/// <summary>
		/// 1:N team_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_entitlement")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Entitlement> team_entitlement
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Entitlement>("team_entitlement", null);
			}
			set
			{
				this.OnPropertyChanging("team_entitlement");
				this.SetRelatedEntities<Insight.Intake.Entitlement>("team_entitlement", null, value);
				this.OnPropertyChanged("team_entitlement");
			}
		}
		
		/// <summary>
		/// 1:N team_entitlementchannel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_entitlementchannel")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.EntitlementChannel> team_entitlementchannel
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.EntitlementChannel>("team_entitlementchannel", null);
			}
			set
			{
				this.OnPropertyChanging("team_entitlementchannel");
				this.SetRelatedEntities<Insight.Intake.EntitlementChannel>("team_entitlementchannel", null, value);
				this.OnPropertyChanged("team_entitlementchannel");
			}
		}
		
		/// <summary>
		/// 1:N team_entitlemententityallocationtypemapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_entitlemententityallocationtypemapping")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.EntitlementEntityAllocationTypeMapping> team_entitlemententityallocationtypemapping
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.EntitlementEntityAllocationTypeMapping>("team_entitlemententityallocationtypemapping", null);
			}
			set
			{
				this.OnPropertyChanging("team_entitlemententityallocationtypemapping");
				this.SetRelatedEntities<Insight.Intake.EntitlementEntityAllocationTypeMapping>("team_entitlemententityallocationtypemapping", null, value);
				this.OnPropertyChanged("team_entitlemententityallocationtypemapping");
			}
		}
		
		/// <summary>
		/// 1:N team_exportsolutionupload
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_exportsolutionupload")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ExportSolutionUpload> team_exportsolutionupload
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ExportSolutionUpload>("team_exportsolutionupload", null);
			}
			set
			{
				this.OnPropertyChanging("team_exportsolutionupload");
				this.SetRelatedEntities<Insight.Intake.ExportSolutionUpload>("team_exportsolutionupload", null, value);
				this.OnPropertyChanged("team_exportsolutionupload");
			}
		}
		
		/// <summary>
		/// 1:N team_externalparty
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_externalparty")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ExternalParty> team_externalparty
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ExternalParty>("team_externalparty", null);
			}
			set
			{
				this.OnPropertyChanging("team_externalparty");
				this.SetRelatedEntities<Insight.Intake.ExternalParty>("team_externalparty", null, value);
				this.OnPropertyChanged("team_externalparty");
			}
		}
		
		/// <summary>
		/// 1:N team_fax
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_fax")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Fax> team_fax
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Fax>("team_fax", null);
			}
			set
			{
				this.OnPropertyChanging("team_fax");
				this.SetRelatedEntities<Insight.Intake.Fax>("team_fax", null, value);
				this.OnPropertyChanged("team_fax");
			}
		}
		
		/// <summary>
		/// 1:N team_flowsession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_flowsession")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.flowsession> team_flowsession
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.flowsession>("team_flowsession", null);
			}
			set
			{
				this.OnPropertyChanging("team_flowsession");
				this.SetRelatedEntities<Insight.Intake.flowsession>("team_flowsession", null, value);
				this.OnPropertyChanged("team_flowsession");
			}
		}
		
		/// <summary>
		/// 1:N team_incidentresolution
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_incidentresolution")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.IncidentResolution> team_incidentresolution
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.IncidentResolution>("team_incidentresolution", null);
			}
			set
			{
				this.OnPropertyChanging("team_incidentresolution");
				this.SetRelatedEntities<Insight.Intake.IncidentResolution>("team_incidentresolution", null, value);
				this.OnPropertyChanged("team_incidentresolution");
			}
		}
		
		/// <summary>
		/// 1:N team_incidents
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_incidents")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Incident> team_incidents
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Incident>("team_incidents", null);
			}
			set
			{
				this.OnPropertyChanging("team_incidents");
				this.SetRelatedEntities<Insight.Intake.Incident>("team_incidents", null, value);
				this.OnPropertyChanged("team_incidents");
			}
		}
		
		/// <summary>
		/// 1:N team_interactionforemail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_interactionforemail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.InteractionForEmail> team_interactionforemail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.InteractionForEmail>("team_interactionforemail", null);
			}
			set
			{
				this.OnPropertyChanging("team_interactionforemail");
				this.SetRelatedEntities<Insight.Intake.InteractionForEmail>("team_interactionforemail", null, value);
				this.OnPropertyChanged("team_interactionforemail");
			}
		}
		
		/// <summary>
		/// 1:N team_invoicedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_invoicedetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.InvoiceDetail> team_invoicedetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.InvoiceDetail>("team_invoicedetail", null);
			}
			set
			{
				this.OnPropertyChanging("team_invoicedetail");
				this.SetRelatedEntities<Insight.Intake.InvoiceDetail>("team_invoicedetail", null, value);
				this.OnPropertyChanged("team_invoicedetail");
			}
		}
		
		/// <summary>
		/// 1:N team_invoices
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_invoices")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Invoice> team_invoices
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Invoice>("team_invoices", null);
			}
			set
			{
				this.OnPropertyChanging("team_invoices");
				this.SetRelatedEntities<Insight.Intake.Invoice>("team_invoices", null, value);
				this.OnPropertyChanged("team_invoices");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_accountuser
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_accountuser")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_accountuser> team_ipg_accountuser
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_accountuser>("team_ipg_accountuser", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_accountuser");
				this.SetRelatedEntities<Insight.Intake.ipg_accountuser>("team_ipg_accountuser", null, value);
				this.OnPropertyChanged("team_ipg_accountuser");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_associatedcpt
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_associatedcpt")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_associatedcpt> team_ipg_associatedcpt
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_associatedcpt>("team_ipg_associatedcpt", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_associatedcpt");
				this.SetRelatedEntities<Insight.Intake.ipg_associatedcpt>("team_ipg_associatedcpt", null, value);
				this.OnPropertyChanged("team_ipg_associatedcpt");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_associatedcptdaterange
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_associatedcptdaterange")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_associatedcptdaterange> team_ipg_associatedcptdaterange
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_associatedcptdaterange>("team_ipg_associatedcptdaterange", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_associatedcptdaterange");
				this.SetRelatedEntities<Insight.Intake.ipg_associatedcptdaterange>("team_ipg_associatedcptdaterange", null, value);
				this.OnPropertyChanged("team_ipg_associatedcptdaterange");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_authorization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_authorization")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_authorization> team_ipg_authorization
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_authorization>("team_ipg_authorization", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_authorization");
				this.SetRelatedEntities<Insight.Intake.ipg_authorization>("team_ipg_authorization", null, value);
				this.OnPropertyChanged("team_ipg_authorization");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_benefit")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_benefit> team_ipg_benefit
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_benefit>("team_ipg_benefit", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_benefit");
				this.SetRelatedEntities<Insight.Intake.ipg_benefit>("team_ipg_benefit", null, value);
				this.OnPropertyChanged("team_ipg_benefit");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_benefitsverificationform
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_benefitsverificationform")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_benefitsverificationform> team_ipg_benefitsverificationform
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_benefitsverificationform>("team_ipg_benefitsverificationform", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_benefitsverificationform");
				this.SetRelatedEntities<Insight.Intake.ipg_benefitsverificationform>("team_ipg_benefitsverificationform", null, value);
				this.OnPropertyChanged("team_ipg_benefitsverificationform");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carrierfeeschedule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carrierfeeschedule")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrierfeeschedule> team_ipg_carrierfeeschedule
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrierfeeschedule>("team_ipg_carrierfeeschedule", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carrierfeeschedule");
				this.SetRelatedEntities<Insight.Intake.ipg_carrierfeeschedule>("team_ipg_carrierfeeschedule", null, value);
				this.OnPropertyChanged("team_ipg_carrierfeeschedule");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carriermanufacturerrelationship
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carriermanufacturerrelationship")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carriermanufacturerrelationship> team_ipg_carriermanufacturerrelationship
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carriermanufacturerrelationship>("team_ipg_carriermanufacturerrelationship", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carriermanufacturerrelationship");
				this.SetRelatedEntities<Insight.Intake.ipg_carriermanufacturerrelationship>("team_ipg_carriermanufacturerrelationship", null, value);
				this.OnPropertyChanged("team_ipg_carriermanufacturerrelationship");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carriernetwork
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carriernetwork")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carriernetwork> team_ipg_carriernetwork
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carriernetwork>("team_ipg_carriernetwork", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carriernetwork");
				this.SetRelatedEntities<Insight.Intake.ipg_carriernetwork>("team_ipg_carriernetwork", null, value);
				this.OnPropertyChanged("team_ipg_carriernetwork");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carrierprecertcpt
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carrierprecertcpt")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrierprecertcpt> team_ipg_carrierprecertcpt
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrierprecertcpt>("team_ipg_carrierprecertcpt", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carrierprecertcpt");
				this.SetRelatedEntities<Insight.Intake.ipg_carrierprecertcpt>("team_ipg_carrierprecertcpt", null, value);
				this.OnPropertyChanged("team_ipg_carrierprecertcpt");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carrierprecerthcpcs
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carrierprecerthcpcs")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrierprecerthcpcs> team_ipg_carrierprecerthcpcs
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrierprecerthcpcs>("team_ipg_carrierprecerthcpcs", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carrierprecerthcpcs");
				this.SetRelatedEntities<Insight.Intake.ipg_carrierprecerthcpcs>("team_ipg_carrierprecerthcpcs", null, value);
				this.OnPropertyChanged("team_ipg_carrierprecerthcpcs");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carrierpricinginformation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carrierpricinginformation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrierpricinginformation> team_ipg_carrierpricinginformation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrierpricinginformation>("team_ipg_carrierpricinginformation", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carrierpricinginformation");
				this.SetRelatedEntities<Insight.Intake.ipg_carrierpricinginformation>("team_ipg_carrierpricinginformation", null, value);
				this.OnPropertyChanged("team_ipg_carrierpricinginformation");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_carrierstaterelationship
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_carrierstaterelationship")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_CarrierStateRelationship> team_ipg_carrierstaterelationship
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_CarrierStateRelationship>("team_ipg_carrierstaterelationship", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_carrierstaterelationship");
				this.SetRelatedEntities<Insight.Intake.ipg_CarrierStateRelationship>("team_ipg_carrierstaterelationship", null, value);
				this.OnPropertyChanged("team_ipg_carrierstaterelationship");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_casecloseconfiguration
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_casecloseconfiguration")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_casecloseconfiguration> team_ipg_casecloseconfiguration
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_casecloseconfiguration>("team_ipg_casecloseconfiguration", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_casecloseconfiguration");
				this.SetRelatedEntities<Insight.Intake.ipg_casecloseconfiguration>("team_ipg_casecloseconfiguration", null, value);
				this.OnPropertyChanged("team_ipg_casecloseconfiguration");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_caseholdconfiguration
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_caseholdconfiguration")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_caseholdconfiguration> team_ipg_caseholdconfiguration
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_caseholdconfiguration>("team_ipg_caseholdconfiguration", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_caseholdconfiguration");
				this.SetRelatedEntities<Insight.Intake.ipg_caseholdconfiguration>("team_ipg_caseholdconfiguration", null, value);
				this.OnPropertyChanged("team_ipg_caseholdconfiguration");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_casepartdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_casepartdetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_casepartdetail> team_ipg_casepartdetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_casepartdetail>("team_ipg_casepartdetail", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_casepartdetail");
				this.SetRelatedEntities<Insight.Intake.ipg_casepartdetail>("team_ipg_casepartdetail", null, value);
				this.OnPropertyChanged("team_ipg_casepartdetail");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimdenialcodecategory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimdenialcodecategory")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimdenialcodecategory> team_ipg_claimdenialcodecategory
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimdenialcodecategory>("team_ipg_claimdenialcodecategory", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimdenialcodecategory");
				this.SetRelatedEntities<Insight.Intake.ipg_claimdenialcodecategory>("team_ipg_claimdenialcodecategory", null, value);
				this.OnPropertyChanged("team_ipg_claimdenialcodecategory");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimeventsmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimeventsmapping")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimeventsmapping> team_ipg_claimeventsmapping
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimeventsmapping>("team_ipg_claimeventsmapping", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimeventsmapping");
				this.SetRelatedEntities<Insight.Intake.ipg_claimeventsmapping>("team_ipg_claimeventsmapping", null, value);
				this.OnPropertyChanged("team_ipg_claimeventsmapping");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimgenerationparameters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimgenerationparameters")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimgenerationparameters> team_ipg_claimgenerationparameters
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimgenerationparameters>("team_ipg_claimgenerationparameters", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimgenerationparameters");
				this.SetRelatedEntities<Insight.Intake.ipg_claimgenerationparameters>("team_ipg_claimgenerationparameters", null, value);
				this.OnPropertyChanged("team_ipg_claimgenerationparameters");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimlineitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimlineitem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimlineitem> team_ipg_claimlineitem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimlineitem>("team_ipg_claimlineitem", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimlineitem");
				this.SetRelatedEntities<Insight.Intake.ipg_claimlineitem>("team_ipg_claimlineitem", null, value);
				this.OnPropertyChanged("team_ipg_claimlineitem");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponsebatch
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponsebatch")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponsebatch> team_ipg_claimresponsebatch
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponsebatch>("team_ipg_claimresponsebatch", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponsebatch");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponsebatch>("team_ipg_claimresponsebatch", null, value);
				this.OnPropertyChanged("team_ipg_claimresponsebatch");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponseentity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponseentity")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseentity> team_ipg_claimresponseentity
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseentity>("team_ipg_claimresponseentity", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponseentity");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseentity>("team_ipg_claimresponseentity", null, value);
				this.OnPropertyChanged("team_ipg_claimresponseentity");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponseheader
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponseheader")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseheader> team_ipg_claimresponseheader
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseheader>("team_ipg_claimresponseheader", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponseheader");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseheader>("team_ipg_claimresponseheader", null, value);
				this.OnPropertyChanged("team_ipg_claimresponseheader");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponseline
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponseline")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseline> team_ipg_claimresponseline
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseline>("team_ipg_claimresponseline", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponseline");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseline>("team_ipg_claimresponseline", null, value);
				this.OnPropertyChanged("team_ipg_claimresponseline");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponselineadjustment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponselineadjustment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponselineadjustment> team_ipg_claimresponselineadjustment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponselineadjustment>("team_ipg_claimresponselineadjustment", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponselineadjustment");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponselineadjustment>("team_ipg_claimresponselineadjustment", null, value);
				this.OnPropertyChanged("team_ipg_claimresponselineadjustment");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponselineremark
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponselineremark")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponselineremark> team_ipg_claimresponselineremark
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponselineremark>("team_ipg_claimresponselineremark", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponselineremark");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponselineremark>("team_ipg_claimresponselineremark", null, value);
				this.OnPropertyChanged("team_ipg_claimresponselineremark");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimresponseprovideradjustment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimresponseprovideradjustment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseprovideradjustment> team_ipg_claimresponseprovideradjustment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseprovideradjustment>("team_ipg_claimresponseprovideradjustment", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimresponseprovideradjustment");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseprovideradjustment>("team_ipg_claimresponseprovideradjustment", null, value);
				this.OnPropertyChanged("team_ipg_claimresponseprovideradjustment");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimshistory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimshistory")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimshistory> team_ipg_claimshistory
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimshistory>("team_ipg_claimshistory", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimshistory");
				this.SetRelatedEntities<Insight.Intake.ipg_claimshistory>("team_ipg_claimshistory", null, value);
				this.OnPropertyChanged("team_ipg_claimshistory");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimstatuscode
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimstatuscode")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimstatuscode> team_ipg_claimstatuscode
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimstatuscode>("team_ipg_claimstatuscode", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimstatuscode");
				this.SetRelatedEntities<Insight.Intake.ipg_claimstatuscode>("team_ipg_claimstatuscode", null, value);
				this.OnPropertyChanged("team_ipg_claimstatuscode");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimtaskconfiguration
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimtaskconfiguration")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimtaskconfiguration> team_ipg_claimtaskconfiguration
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimtaskconfiguration>("team_ipg_claimtaskconfiguration", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimtaskconfiguration");
				this.SetRelatedEntities<Insight.Intake.ipg_claimtaskconfiguration>("team_ipg_claimtaskconfiguration", null, value);
				this.OnPropertyChanged("team_ipg_claimtaskconfiguration");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimzirmedeventcode
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimzirmedeventcode")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimzirmedeventcode> team_ipg_claimzirmedeventcode
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimzirmedeventcode>("team_ipg_claimzirmedeventcode", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimzirmedeventcode");
				this.SetRelatedEntities<Insight.Intake.ipg_claimzirmedeventcode>("team_ipg_claimzirmedeventcode", null, value);
				this.OnPropertyChanged("team_ipg_claimzirmedeventcode");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_claimzirmedstatus
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_claimzirmedstatus")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimzirmedstatus> team_ipg_claimzirmedstatus
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimzirmedstatus>("team_ipg_claimzirmedstatus", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_claimzirmedstatus");
				this.SetRelatedEntities<Insight.Intake.ipg_claimzirmedstatus>("team_ipg_claimzirmedstatus", null, value);
				this.OnPropertyChanged("team_ipg_claimzirmedstatus");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_contactemailpreference
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_contactemailpreference")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_contactemailpreference> team_ipg_contactemailpreference
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_contactemailpreference>("team_ipg_contactemailpreference", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_contactemailpreference");
				this.SetRelatedEntities<Insight.Intake.ipg_contactemailpreference>("team_ipg_contactemailpreference", null, value);
				this.OnPropertyChanged("team_ipg_contactemailpreference");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_contactsubtype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_contactsubtype")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_contactsubtype> team_ipg_contactsubtype
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_contactsubtype>("team_ipg_contactsubtype", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_contactsubtype");
				this.SetRelatedEntities<Insight.Intake.ipg_contactsubtype>("team_ipg_contactsubtype", null, value);
				this.OnPropertyChanged("team_ipg_contactsubtype");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_contacttype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_contacttype")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_contacttype> team_ipg_contacttype
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_contacttype>("team_ipg_contacttype", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_contacttype");
				this.SetRelatedEntities<Insight.Intake.ipg_contacttype>("team_ipg_contacttype", null, value);
				this.OnPropertyChanged("team_ipg_contacttype");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_document
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_document")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_document> team_ipg_document
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_document>("team_ipg_document", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_document");
				this.SetRelatedEntities<Insight.Intake.ipg_document>("team_ipg_document", null, value);
				this.OnPropertyChanged("team_ipg_document");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_documentbygate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_documentbygate")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_documentbygate> team_ipg_documentbygate
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_documentbygate>("team_ipg_documentbygate", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_documentbygate");
				this.SetRelatedEntities<Insight.Intake.ipg_documentbygate>("team_ipg_documentbygate", null, value);
				this.OnPropertyChanged("team_ipg_documentbygate");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_documentcategorytype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_documentcategorytype")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_documentcategorytype> team_ipg_documentcategorytype
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_documentcategorytype>("team_ipg_documentcategorytype", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_documentcategorytype");
				this.SetRelatedEntities<Insight.Intake.ipg_documentcategorytype>("team_ipg_documentcategorytype", null, value);
				this.OnPropertyChanged("team_ipg_documentcategorytype");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_ebvresponsemapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_ebvresponsemapping")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_ebvresponsemapping> team_ipg_ebvresponsemapping
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_ebvresponsemapping>("team_ipg_ebvresponsemapping", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_ebvresponsemapping");
				this.SetRelatedEntities<Insight.Intake.ipg_ebvresponsemapping>("team_ipg_ebvresponsemapping", null, value);
				this.OnPropertyChanged("team_ipg_ebvresponsemapping");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_ehrcarriermapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_ehrcarriermapping")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_EHRCarrierMapping> team_ipg_ehrcarriermapping
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_EHRCarrierMapping>("team_ipg_ehrcarriermapping", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_ehrcarriermapping");
				this.SetRelatedEntities<Insight.Intake.ipg_EHRCarrierMapping>("team_ipg_ehrcarriermapping", null, value);
				this.OnPropertyChanged("team_ipg_ehrcarriermapping");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_estimatedcasepartdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_estimatedcasepartdetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_estimatedcasepartdetail> team_ipg_estimatedcasepartdetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_estimatedcasepartdetail>("team_ipg_estimatedcasepartdetail", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_estimatedcasepartdetail");
				this.SetRelatedEntities<Insight.Intake.ipg_estimatedcasepartdetail>("team_ipg_estimatedcasepartdetail", null, value);
				this.OnPropertyChanged("team_ipg_estimatedcasepartdetail");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_facilitymanufacturerrelationship
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_facilitymanufacturerrelationship")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_facilitymanufacturerrelationship> team_ipg_facilitymanufacturerrelationship
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_facilitymanufacturerrelationship>("team_ipg_facilitymanufacturerrelationship", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_facilitymanufacturerrelationship");
				this.SetRelatedEntities<Insight.Intake.ipg_facilitymanufacturerrelationship>("team_ipg_facilitymanufacturerrelationship", null, value);
				this.OnPropertyChanged("team_ipg_facilitymanufacturerrelationship");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_faxnumber
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_faxnumber")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_faxnumber> team_ipg_faxnumber
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_faxnumber>("team_ipg_faxnumber", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_faxnumber");
				this.SetRelatedEntities<Insight.Intake.ipg_faxnumber>("team_ipg_faxnumber", null, value);
				this.OnPropertyChanged("team_ipg_faxnumber");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_feeschedule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_feeschedule")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_feeschedule> team_ipg_feeschedule
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_feeschedule>("team_ipg_feeschedule", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_feeschedule");
				this.SetRelatedEntities<Insight.Intake.ipg_feeschedule>("team_ipg_feeschedule", null, value);
				this.OnPropertyChanged("team_ipg_feeschedule");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_globalsetting
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_globalsetting")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_globalsetting> team_ipg_globalsetting
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_globalsetting>("team_ipg_globalsetting", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_globalsetting");
				this.SetRelatedEntities<Insight.Intake.ipg_globalsetting>("team_ipg_globalsetting", null, value);
				this.OnPropertyChanged("team_ipg_globalsetting");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_gltransaction
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_gltransaction")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_GLTransaction> team_ipg_gltransaction
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_GLTransaction>("team_ipg_gltransaction", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_gltransaction");
				this.SetRelatedEntities<Insight.Intake.ipg_GLTransaction>("team_ipg_gltransaction", null, value);
				this.OnPropertyChanged("team_ipg_gltransaction");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_homeplancarriermap
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_homeplancarriermap")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_homeplancarriermap> team_ipg_homeplancarriermap
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_homeplancarriermap>("team_ipg_homeplancarriermap", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_homeplancarriermap");
				this.SetRelatedEntities<Insight.Intake.ipg_homeplancarriermap>("team_ipg_homeplancarriermap", null, value);
				this.OnPropertyChanged("team_ipg_homeplancarriermap");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_informationtyperequiredinformationrule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_informationtyperequiredinformationrule")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_informationtyperequiredinformationrule> team_ipg_informationtyperequiredinformationrule
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_informationtyperequiredinformationrule>("team_ipg_informationtyperequiredinformationrule", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_informationtyperequiredinformationrule");
				this.SetRelatedEntities<Insight.Intake.ipg_informationtyperequiredinformationrule>("team_ipg_informationtyperequiredinformationrule", null, value);
				this.OnPropertyChanged("team_ipg_informationtyperequiredinformationrule");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_insurance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_insurance")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_insurance> team_ipg_insurance
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_insurance>("team_ipg_insurance", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_insurance");
				this.SetRelatedEntities<Insight.Intake.ipg_insurance>("team_ipg_insurance", null, value);
				this.OnPropertyChanged("team_ipg_insurance");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_legacycarrierhistory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_legacycarrierhistory")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_legacycarrierhistory> team_ipg_legacycarrierhistory
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_legacycarrierhistory>("team_ipg_legacycarrierhistory", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_legacycarrierhistory");
				this.SetRelatedEntities<Insight.Intake.ipg_legacycarrierhistory>("team_ipg_legacycarrierhistory", null, value);
				this.OnPropertyChanged("team_ipg_legacycarrierhistory");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_masterhcpcs
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_masterhcpcs")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_masterhcpcs> team_ipg_masterhcpcs
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_masterhcpcs>("team_ipg_masterhcpcs", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_masterhcpcs");
				this.SetRelatedEntities<Insight.Intake.ipg_masterhcpcs>("team_ipg_masterhcpcs", null, value);
				this.OnPropertyChanged("team_ipg_masterhcpcs");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_medrecordsconditions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_medrecordsconditions")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_medrecordsconditions> team_ipg_medrecordsconditions
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_medrecordsconditions>("team_ipg_medrecordsconditions", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_medrecordsconditions");
				this.SetRelatedEntities<Insight.Intake.ipg_medrecordsconditions>("team_ipg_medrecordsconditions", null, value);
				this.OnPropertyChanged("team_ipg_medrecordsconditions");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_patientpaymentnotification
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_patientpaymentnotification")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_patientpaymentnotification> team_ipg_patientpaymentnotification
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_patientpaymentnotification>("team_ipg_patientpaymentnotification", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_patientpaymentnotification");
				this.SetRelatedEntities<Insight.Intake.ipg_patientpaymentnotification>("team_ipg_patientpaymentnotification", null, value);
				this.OnPropertyChanged("team_ipg_patientpaymentnotification");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_payment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_payment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_payment> team_ipg_payment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_payment>("team_ipg_payment", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_payment");
				this.SetRelatedEntities<Insight.Intake.ipg_payment>("team_ipg_payment", null, value);
				this.OnPropertyChanged("team_ipg_payment");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_portalquery
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_portalquery")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_portalquery> team_ipg_portalquery
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_portalquery>("team_ipg_portalquery", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_portalquery");
				this.SetRelatedEntities<Insight.Intake.ipg_portalquery>("team_ipg_portalquery", null, value);
				this.OnPropertyChanged("team_ipg_portalquery");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_preauthorization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_preauthorization")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_preauthorization> team_ipg_preauthorization
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_preauthorization>("team_ipg_preauthorization", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_preauthorization");
				this.SetRelatedEntities<Insight.Intake.ipg_preauthorization>("team_ipg_preauthorization", null, value);
				this.OnPropertyChanged("team_ipg_preauthorization");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_rarc
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_rarc")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_rarc> team_ipg_rarc
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_rarc>("team_ipg_rarc", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_rarc");
				this.SetRelatedEntities<Insight.Intake.ipg_rarc>("team_ipg_rarc", null, value);
				this.OnPropertyChanged("team_ipg_rarc");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_referral
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_referral")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_referral> team_ipg_referral
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_referral>("team_ipg_referral", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_referral");
				this.SetRelatedEntities<Insight.Intake.ipg_referral>("team_ipg_referral", null, value);
				this.OnPropertyChanged("team_ipg_referral");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_requiredinformation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_requiredinformation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_requiredinformation> team_ipg_requiredinformation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_requiredinformation>("team_ipg_requiredinformation", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_requiredinformation");
				this.SetRelatedEntities<Insight.Intake.ipg_requiredinformation>("team_ipg_requiredinformation", null, value);
				this.OnPropertyChanged("team_ipg_requiredinformation");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_requiredinformationtemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_requiredinformationtemplate")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_requiredinformationtemplate> team_ipg_requiredinformationtemplate
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_requiredinformationtemplate>("team_ipg_requiredinformationtemplate", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_requiredinformationtemplate");
				this.SetRelatedEntities<Insight.Intake.ipg_requiredinformationtemplate>("team_ipg_requiredinformationtemplate", null, value);
				this.OnPropertyChanged("team_ipg_requiredinformationtemplate");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_statementgenerationtask
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_statementgenerationtask")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_statementgenerationtask> team_ipg_statementgenerationtask
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_statementgenerationtask>("team_ipg_statementgenerationtask", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_statementgenerationtask");
				this.SetRelatedEntities<Insight.Intake.ipg_statementgenerationtask>("team_ipg_statementgenerationtask", null, value);
				this.OnPropertyChanged("team_ipg_statementgenerationtask");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_staterule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_staterule")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_staterule> team_ipg_staterule
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_staterule>("team_ipg_staterule", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_staterule");
				this.SetRelatedEntities<Insight.Intake.ipg_staterule>("team_ipg_staterule", null, value);
				this.OnPropertyChanged("team_ipg_staterule");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_taskreason
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_taskreason")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_taskreason> team_ipg_taskreason
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_taskreason>("team_ipg_taskreason", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_taskreason");
				this.SetRelatedEntities<Insight.Intake.ipg_taskreason>("team_ipg_taskreason", null, value);
				this.OnPropertyChanged("team_ipg_taskreason");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_teamleadnavigation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_teamleadnavigation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_teamleadnavigation> team_ipg_teamleadnavigation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_teamleadnavigation>("team_ipg_teamleadnavigation", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_teamleadnavigation");
				this.SetRelatedEntities<Insight.Intake.ipg_teamleadnavigation>("team_ipg_teamleadnavigation", null, value);
				this.OnPropertyChanged("team_ipg_teamleadnavigation");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_teammembernavigation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_teammembernavigation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_teammembernavigation> team_ipg_teammembernavigation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_teammembernavigation>("team_ipg_teammembernavigation", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_teammembernavigation");
				this.SetRelatedEntities<Insight.Intake.ipg_teammembernavigation>("team_ipg_teammembernavigation", null, value);
				this.OnPropertyChanged("team_ipg_teammembernavigation");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_unsupporteddxcode
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_unsupporteddxcode")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_unsupporteddxcode> team_ipg_unsupporteddxcode
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_unsupporteddxcode>("team_ipg_unsupporteddxcode", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_unsupporteddxcode");
				this.SetRelatedEntities<Insight.Intake.ipg_unsupporteddxcode>("team_ipg_unsupporteddxcode", null, value);
				this.OnPropertyChanged("team_ipg_unsupporteddxcode");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_unsupportedpart
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_unsupportedpart")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_unsupportedpart> team_ipg_unsupportedpart
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_unsupportedpart>("team_ipg_unsupportedpart", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_unsupportedpart");
				this.SetRelatedEntities<Insight.Intake.ipg_unsupportedpart>("team_ipg_unsupportedpart", null, value);
				this.OnPropertyChanged("team_ipg_unsupportedpart");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_unsupportedprocedure
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_unsupportedprocedure")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_unsupportedprocedure> team_ipg_unsupportedprocedure
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_unsupportedprocedure>("team_ipg_unsupportedprocedure", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_unsupportedprocedure");
				this.SetRelatedEntities<Insight.Intake.ipg_unsupportedprocedure>("team_ipg_unsupportedprocedure", null, value);
				this.OnPropertyChanged("team_ipg_unsupportedprocedure");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_wftaskdependency
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_wftaskdependency")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_wftaskdependency> team_ipg_wftaskdependency
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_wftaskdependency>("team_ipg_wftaskdependency", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_wftaskdependency");
				this.SetRelatedEntities<Insight.Intake.ipg_wftaskdependency>("team_ipg_wftaskdependency", null, value);
				this.OnPropertyChanged("team_ipg_wftaskdependency");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_wftasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_wftasks")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_wftasks> team_ipg_wftasks
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_wftasks>("team_ipg_wftasks", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_wftasks");
				this.SetRelatedEntities<Insight.Intake.ipg_wftasks>("team_ipg_wftasks", null, value);
				this.OnPropertyChanged("team_ipg_wftasks");
			}
		}
		
		/// <summary>
		/// 1:N team_ipg_zirmedvalidationcode
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ipg_zirmedvalidationcode")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_zirmedvalidationcode> team_ipg_zirmedvalidationcode
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_zirmedvalidationcode>("team_ipg_zirmedvalidationcode", null);
			}
			set
			{
				this.OnPropertyChanging("team_ipg_zirmedvalidationcode");
				this.SetRelatedEntities<Insight.Intake.ipg_zirmedvalidationcode>("team_ipg_zirmedvalidationcode", null, value);
				this.OnPropertyChanged("team_ipg_zirmedvalidationcode");
			}
		}
		
		/// <summary>
		/// 1:N team_knowledgearticle
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_knowledgearticle")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KnowledgeArticle> team_knowledgearticle
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KnowledgeArticle>("team_knowledgearticle", null);
			}
			set
			{
				this.OnPropertyChanging("team_knowledgearticle");
				this.SetRelatedEntities<Insight.Intake.KnowledgeArticle>("team_knowledgearticle", null, value);
				this.OnPropertyChanged("team_knowledgearticle");
			}
		}
		
		/// <summary>
		/// 1:N team_knowledgearticleincident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_knowledgearticleincident")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KnowledgeArticleIncident> team_knowledgearticleincident
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KnowledgeArticleIncident>("team_knowledgearticleincident", null);
			}
			set
			{
				this.OnPropertyChanging("team_knowledgearticleincident");
				this.SetRelatedEntities<Insight.Intake.KnowledgeArticleIncident>("team_knowledgearticleincident", null, value);
				this.OnPropertyChanged("team_knowledgearticleincident");
			}
		}
		
		/// <summary>
		/// 1:N team_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_letter")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Letter> team_letter
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Letter>("team_letter", null);
			}
			set
			{
				this.OnPropertyChanging("team_letter");
				this.SetRelatedEntities<Insight.Intake.Letter>("team_letter", null, value);
				this.OnPropertyChanged("team_letter");
			}
		}
		
		/// <summary>
		/// 1:N team_orderclose
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_orderclose")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.OrderClose> team_orderclose
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.OrderClose>("team_orderclose", null);
			}
			set
			{
				this.OnPropertyChanging("team_orderclose");
				this.SetRelatedEntities<Insight.Intake.OrderClose>("team_orderclose", null, value);
				this.OnPropertyChanged("team_orderclose");
			}
		}
		
		/// <summary>
		/// 1:N team_orders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_orders")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SalesOrder> team_orders
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SalesOrder>("team_orders", null);
			}
			set
			{
				this.OnPropertyChanging("team_orders");
				this.SetRelatedEntities<Insight.Intake.SalesOrder>("team_orders", null, value);
				this.OnPropertyChanged("team_orders");
			}
		}
		
		/// <summary>
		/// 1:N team_phonecall
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_phonecall")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PhoneCall> team_phonecall
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PhoneCall>("team_phonecall", null);
			}
			set
			{
				this.OnPropertyChanging("team_phonecall");
				this.SetRelatedEntities<Insight.Intake.PhoneCall>("team_phonecall", null, value);
				this.OnPropertyChanged("team_phonecall");
			}
		}
		
		/// <summary>
		/// 1:N team_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> team_principalobjectattributeaccess
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("team_principalobjectattributeaccess", null);
			}
			set
			{
				this.OnPropertyChanging("team_principalobjectattributeaccess");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("team_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("team_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N team_principalobjectattributeaccess_principalid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_principalobjectattributeaccess_principalid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> team_principalobjectattributeaccess_principalid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("team_principalobjectattributeaccess_principalid", null);
			}
			set
			{
				this.OnPropertyChanging("team_principalobjectattributeaccess_principalid");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("team_principalobjectattributeaccess_principalid", null, value);
				this.OnPropertyChanged("team_principalobjectattributeaccess_principalid");
			}
		}
		
		/// <summary>
		/// 1:N team_queueitembase_workerid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_queueitembase_workerid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QueueItem> team_queueitembase_workerid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QueueItem>("team_queueitembase_workerid", null);
			}
			set
			{
				this.OnPropertyChanging("team_queueitembase_workerid");
				this.SetRelatedEntities<Insight.Intake.QueueItem>("team_queueitembase_workerid", null, value);
				this.OnPropertyChanged("team_queueitembase_workerid");
			}
		}
		
		/// <summary>
		/// 1:N team_quoteclose
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_quoteclose")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QuoteClose> team_quoteclose
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QuoteClose>("team_quoteclose", null);
			}
			set
			{
				this.OnPropertyChanging("team_quoteclose");
				this.SetRelatedEntities<Insight.Intake.QuoteClose>("team_quoteclose", null, value);
				this.OnPropertyChanged("team_quoteclose");
			}
		}
		
		/// <summary>
		/// 1:N team_quotedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_quotedetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QuoteDetail> team_quotedetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QuoteDetail>("team_quotedetail", null);
			}
			set
			{
				this.OnPropertyChanging("team_quotedetail");
				this.SetRelatedEntities<Insight.Intake.QuoteDetail>("team_quotedetail", null, value);
				this.OnPropertyChanged("team_quotedetail");
			}
		}
		
		/// <summary>
		/// 1:N team_quotes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_quotes")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Quote> team_quotes
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Quote>("team_quotes", null);
			}
			set
			{
				this.OnPropertyChanging("team_quotes");
				this.SetRelatedEntities<Insight.Intake.Quote>("team_quotes", null, value);
				this.OnPropertyChanged("team_quotes");
			}
		}
		
		/// <summary>
		/// 1:N team_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_recurringappointmentmaster")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.RecurringAppointmentMaster> team_recurringappointmentmaster
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.RecurringAppointmentMaster>("team_recurringappointmentmaster", null);
			}
			set
			{
				this.OnPropertyChanging("team_recurringappointmentmaster");
				this.SetRelatedEntities<Insight.Intake.RecurringAppointmentMaster>("team_recurringappointmentmaster", null, value);
				this.OnPropertyChanged("team_recurringappointmentmaster");
			}
		}
		
		/// <summary>
		/// 1:N team_salesorderdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_salesorderdetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SalesOrderDetail> team_salesorderdetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SalesOrderDetail>("team_salesorderdetail", null);
			}
			set
			{
				this.OnPropertyChanging("team_salesorderdetail");
				this.SetRelatedEntities<Insight.Intake.SalesOrderDetail>("team_salesorderdetail", null, value);
				this.OnPropertyChanged("team_salesorderdetail");
			}
		}
		
		/// <summary>
		/// 1:N team_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_service_appointments")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ServiceAppointment> team_service_appointments
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ServiceAppointment>("team_service_appointments", null);
			}
			set
			{
				this.OnPropertyChanging("team_service_appointments");
				this.SetRelatedEntities<Insight.Intake.ServiceAppointment>("team_service_appointments", null, value);
				this.OnPropertyChanged("team_service_appointments");
			}
		}
		
		/// <summary>
		/// 1:N team_slaBase
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_slaBase")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SLA> team_slaBase
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SLA>("team_slaBase", null);
			}
			set
			{
				this.OnPropertyChanging("team_slaBase");
				this.SetRelatedEntities<Insight.Intake.SLA>("team_slaBase", null, value);
				this.OnPropertyChanged("team_slaBase");
			}
		}
		
		/// <summary>
		/// 1:N team_task
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_task")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Task> team_task
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Task>("team_task", null);
			}
			set
			{
				this.OnPropertyChanging("team_task");
				this.SetRelatedEntities<Insight.Intake.Task>("team_task", null, value);
				this.OnPropertyChanged("team_task");
			}
		}
		
		/// <summary>
		/// N:N teammembership_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teammembership_association")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SystemUser> teammembership_association
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SystemUser>("teammembership_association", null);
			}
			set
			{
				this.OnPropertyChanging("teammembership_association");
				this.SetRelatedEntities<Insight.Intake.SystemUser>("teammembership_association", null, value);
				this.OnPropertyChanged("teammembership_association");
			}
		}
		
		/// <summary>
		/// N:N teamroles_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("teamroles_association")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Role> teamroles_association
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Role>("teamroles_association", null);
			}
			set
			{
				this.OnPropertyChanging("teamroles_association");
				this.SetRelatedEntities<Insight.Intake.Role>("teamroles_association", null, value);
				this.OnPropertyChanged("teamroles_association");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_teams
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_teams")]
		public Insight.Intake.BusinessUnit business_unit_teams
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.BusinessUnit>("business_unit_teams", null);
			}
			set
			{
				this.OnPropertyChanging("business_unit_teams");
				this.SetRelatedEntity<Insight.Intake.BusinessUnit>("business_unit_teams", null, value);
				this.OnPropertyChanged("business_unit_teams");
			}
		}
		
		/// <summary>
		/// N:1 knowledgearticle_Teams
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("knowledgearticle_Teams")]
		public Insight.Intake.KnowledgeArticle knowledgearticle_Teams
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.KnowledgeArticle>("knowledgearticle_Teams", null);
			}
			set
			{
				this.OnPropertyChanging("knowledgearticle_Teams");
				this.SetRelatedEntity<Insight.Intake.KnowledgeArticle>("knowledgearticle_Teams", null, value);
				this.OnPropertyChanged("knowledgearticle_Teams");
			}
		}
		
		/// <summary>
		/// N:1 lk_team_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_team_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_team_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_team_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_team_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_team_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_team_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_team_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_team_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_team_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_team_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_team_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_team_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_team_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_teambase_administratorid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratorid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_administratorid")]
		public Insight.Intake.SystemUser lk_teambase_administratorid
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_teambase_administratorid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_teambase_administratorid");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_teambase_administratorid", null, value);
				this.OnPropertyChanged("lk_teambase_administratorid");
			}
		}
		
		/// <summary>
		/// N:1 lk_teambase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_createdby")]
		public Insight.Intake.SystemUser lk_teambase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_teambase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_teambase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_teambase_modifiedby")]
		public Insight.Intake.SystemUser lk_teambase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_teambase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 queue_team
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_team")]
		public Insight.Intake.Queue queue_team
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Queue>("queue_team", null);
			}
			set
			{
				this.OnPropertyChanging("queue_team");
				this.SetRelatedEntity<Insight.Intake.Queue>("queue_team", null, value);
				this.OnPropertyChanged("queue_team");
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Team
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Team")]
		public Insight.Intake.TransactionCurrency TransactionCurrency_Team
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_Team", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Team");
				this.SetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_Team", null, value);
				this.OnPropertyChanged("TransactionCurrency_Team");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Team(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["teamid"] = base.Id;
                        break;
                    case "teamid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}