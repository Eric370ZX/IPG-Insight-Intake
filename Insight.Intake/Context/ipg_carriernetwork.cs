//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ipg_carriernetworkState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Represents network the carrier belongs to and additional information.
	///
	///VV - Renamed from "Carrier Network" -> "Health Plan Network"
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ipg_carriernetwork")]
	public partial class ipg_carriernetwork : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_AbbreviatedNameforGP = "ipg_abbreviatednameforgp";
			public const string ipg_CarrierAssignmentOnly = "ipg_carrierassignmentonly";
			public const string ipg_carriernetworkId = "ipg_carriernetworkid";
			public const string Id = "ipg_carriernetworkid";
			public const string ipg_ContractedPayorsOnly = "ipg_contractedpayorsonly";
			public const string ipg_deadlineretrocase = "ipg_deadlineretrocase";
			public const string ipg_EffectiveDate = "ipg_effectivedate";
			public const string ipg_ExpirationDate = "ipg_expirationdate";
			public const string ipg_ExternalId = "ipg_externalid";
			public const string ipg_gpaccountno = "ipg_gpaccountno";
			public const string ipg_IsActive = "ipg_isactive";
			public const string ipg_legacyname = "ipg_legacyname";
			public const string ipg_name = "ipg_name";
			public const string ipg_plantype = "ipg_plantype";
			public const string ipg_PrintName = "ipg_printname";
			public const string ipg_TodaysDate = "ipg_todaysdate";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string lk_ipg_carriernetwork_createdby = "lk_ipg_carriernetwork_createdby";
			public const string lk_ipg_carriernetwork_createdonbehalfby = "lk_ipg_carriernetwork_createdonbehalfby";
			public const string lk_ipg_carriernetwork_modifiedby = "lk_ipg_carriernetwork_modifiedby";
			public const string lk_ipg_carriernetwork_modifiedonbehalfby = "lk_ipg_carriernetwork_modifiedonbehalfby";
			public const string user_ipg_carriernetwork = "user_ipg_carriernetwork";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ipg_carriernetwork() : 
				base(EntityLogicalName)
		{
		}
		
		public ipg_carriernetwork(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		public ipg_carriernetwork(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		public ipg_carriernetwork(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string EntityLogicalName = "ipg_carriernetwork";
		
		public const string EntitySchemaName = "ipg_carriernetwork";
		
		public const string PrimaryIdAttribute = "ipg_carriernetworkid";
		
		public const string PrimaryNameAttribute = "ipg_name";
		
		public const string EntityLogicalCollectionName = "ipg_carriernetworks";
		
		public const string EntitySetName = "ipg_carriernetworks";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// GP requires a 15 character limit with "name + posting date" which turns into the Batch ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_abbreviatednameforgp")]
		public string ipg_AbbreviatedNameforGP
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_abbreviatednameforgp");
			}
			set
			{
				this.OnPropertyChanging("ipg_AbbreviatedNameforGP");
				this.SetAttributeValue("ipg_abbreviatednameforgp", value);
				this.OnPropertyChanged("ipg_AbbreviatedNameforGP");
			}
		}
		
		/// <summary>
		/// The primary carrier for a case has to be populated; so you can't just assign a Network Type to a case and have Carrier be blank.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrierassignmentonly")]
		public System.Nullable<bool> ipg_CarrierAssignmentOnly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_carrierassignmentonly");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarrierAssignmentOnly");
				this.SetAttributeValue("ipg_carrierassignmentonly", value);
				this.OnPropertyChanged("ipg_CarrierAssignmentOnly");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carriernetworkid")]
		public System.Nullable<System.Guid> ipg_carriernetworkId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ipg_carriernetworkid");
			}
			set
			{
				this.OnPropertyChanging("ipg_carriernetworkId");
				this.SetAttributeValue("ipg_carriernetworkid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ipg_carriernetworkId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carriernetworkid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ipg_carriernetworkId = value;
			}
		}
		
		/// <summary>
		/// Represents that only contracted carrier can be assigned to the carrier network
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_contractedpayorsonly")]
		public System.Nullable<bool> ipg_ContractedPayorsOnly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_contractedpayorsonly");
			}
			set
			{
				this.OnPropertyChanging("ipg_ContractedPayorsOnly");
				this.SetAttributeValue("ipg_contractedpayorsonly", value);
				this.OnPropertyChanged("ipg_ContractedPayorsOnly");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deadlineretrocase")]
		public System.Nullable<int> ipg_deadlineretrocase
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_deadlineretrocase");
			}
			set
			{
				this.OnPropertyChanging("ipg_deadlineretrocase");
				this.SetAttributeValue("ipg_deadlineretrocase", value);
				this.OnPropertyChanged("ipg_deadlineretrocase");
			}
		}
		
		/// <summary>
		/// Date when carrier network is applicable
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_effectivedate")]
		public System.Nullable<System.DateTime> ipg_EffectiveDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_effectivedate");
			}
			set
			{
				this.OnPropertyChanging("ipg_EffectiveDate");
				this.SetAttributeValue("ipg_effectivedate", value);
				this.OnPropertyChanged("ipg_EffectiveDate");
			}
		}
		
		/// <summary>
		/// Date when carrier network expires.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_expirationdate")]
		public System.Nullable<System.DateTime> ipg_ExpirationDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_expirationdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExpirationDate");
				this.SetAttributeValue("ipg_expirationdate", value);
				this.OnPropertyChanged("ipg_ExpirationDate");
			}
		}
		
		/// <summary>
		/// Represents id in legacy system.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_externalid")]
		public string ipg_ExternalId
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_externalid");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExternalId");
				this.SetAttributeValue("ipg_externalid", value);
				this.OnPropertyChanged("ipg_ExternalId");
			}
		}
		
		/// <summary>
		/// Abbreviated name from GP plus code
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gpaccountno")]
		public string ipg_gpaccountno
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_gpaccountno");
			}
			set
			{
				this.OnPropertyChanging("ipg_gpaccountno");
				this.SetAttributeValue("ipg_gpaccountno", value);
				this.OnPropertyChanged("ipg_gpaccountno");
			}
		}
		
		/// <summary>
		/// Represents if health plan network active or not based on effective and expiration date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isactive")]
		public System.Nullable<bool> ipg_IsActive
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isactive");
			}
			set
			{
				this.OnPropertyChanging("ipg_IsActive");
				this.SetAttributeValue("ipg_isactive", value);
				this.OnPropertyChanged("ipg_IsActive");
			}
		}
		
		/// <summary>
		/// Name from legacy system
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_legacyname")]
		public string ipg_legacyname
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_legacyname");
			}
			set
			{
				this.OnPropertyChanging("ipg_legacyname");
				this.SetAttributeValue("ipg_legacyname", value);
				this.OnPropertyChanged("ipg_legacyname");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_name")]
		public string ipg_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_name");
				this.SetAttributeValue("ipg_name", value);
				this.OnPropertyChanged("ipg_name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_plantype")]
		public Microsoft.Xrm.Sdk.OptionSetValueCollection ipg_plantype
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("ipg_plantype");
			}
			set
			{
				this.OnPropertyChanging("ipg_plantype");
				this.SetAttributeValue("ipg_plantype", value);
				this.OnPropertyChanged("ipg_plantype");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_plantype")]
		public virtual System.Collections.Generic.IEnumerable<ipg_CarrierPlanTypes1> ipg_plantypeEnum
		{
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ipg_CarrierPlanTypes1>(this, "ipg_plantype");
			}
			set
			{
				this.OnPropertyChanging("ipg_plantype");
				this.SetAttributeValue("ipg_plantype", EntityOptionSetEnum.GetMultiEnum(this, "ipg_plantype", value));
				this.OnPropertyChanged("ipg_plantype");
			}
		}
		
		/// <summary>
		/// This name is used in patient statements
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_printname")]
		public string ipg_PrintName
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_printname");
			}
			set
			{
				this.OnPropertyChanging("ipg_PrintName");
				this.SetAttributeValue("ipg_printname", value);
				this.OnPropertyChanged("ipg_PrintName");
			}
		}
		
		/// <summary>
		/// Represents today's date on this entity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_todaysdate")]
		public System.Nullable<System.DateTime> ipg_TodaysDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_todaysdate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Carrier Network
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.ipg_carriernetworkState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.ipg_carriernetworkState)(System.Enum.ToObject(typeof(Insight.Intake.ipg_carriernetworkState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Carrier Network
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Carrier Network
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ipg_carriernetwork_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((ipg_carriernetwork_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ipg_carriernetwork_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_carriernetwork_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> ipg_carriernetwork_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("ipg_carriernetwork_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_carriernetwork_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("ipg_carriernetwork_AsyncOperations", null, value);
				this.OnPropertyChanged("ipg_carriernetwork_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N ipg_carriernetwork_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_carriernetwork_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> ipg_carriernetwork_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("ipg_carriernetwork_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_carriernetwork_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("ipg_carriernetwork_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("ipg_carriernetwork_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_carriernetwork_account_carriernetworkid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_carriernetwork_account_carriernetworkid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Account> ipg_ipg_carriernetwork_account_carriernetworkid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Account>("ipg_ipg_carriernetwork_account_carriernetworkid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_carriernetwork_account_carriernetworkid");
				this.SetRelatedEntities<Insight.Intake.Account>("ipg_ipg_carriernetwork_account_carriernetworkid", null, value);
				this.OnPropertyChanged("ipg_ipg_carriernetwork_account_carriernetworkid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_carriernetwork_account_Network
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_carriernetwork_account_Network")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Account> ipg_ipg_carriernetwork_account_Network
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Account>("ipg_ipg_carriernetwork_account_Network", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_carriernetwork_account_Network");
				this.SetRelatedEntities<Insight.Intake.Account>("ipg_ipg_carriernetwork_account_Network", null, value);
				this.OnPropertyChanged("ipg_ipg_carriernetwork_account_Network");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_carriernetwork_contact_NetworkTypeId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_carriernetwork_contact_NetworkTypeId")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Contact> ipg_ipg_carriernetwork_contact_NetworkTypeId
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Contact>("ipg_ipg_carriernetwork_contact_NetworkTypeId", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_carriernetwork_contact_NetworkTypeId");
				this.SetRelatedEntities<Insight.Intake.Contact>("ipg_ipg_carriernetwork_contact_NetworkTypeId", null, value);
				this.OnPropertyChanged("ipg_ipg_carriernetwork_contact_NetworkTypeId");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_carriernetwork_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_carriernetwork_incident")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Incident> ipg_ipg_carriernetwork_incident
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Incident>("ipg_ipg_carriernetwork_incident", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_carriernetwork_incident");
				this.SetRelatedEntities<Insight.Intake.Incident>("ipg_ipg_carriernetwork_incident", null, value);
				this.OnPropertyChanged("ipg_ipg_carriernetwork_incident");
			}
		}
		
		/// <summary>
		/// 1:N ipg_ipg_carriernetwork_incident_carriernetwork
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ipg_carriernetwork_incident_carriernetwork")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Incident> ipg_ipg_carriernetwork_incident_carriernetwork
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Incident>("ipg_ipg_carriernetwork_incident_carriernetwork", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ipg_carriernetwork_incident_carriernetwork");
				this.SetRelatedEntities<Insight.Intake.Incident>("ipg_ipg_carriernetwork_incident_carriernetwork", null, value);
				this.OnPropertyChanged("ipg_ipg_carriernetwork_incident_carriernetwork");
			}
		}
		
		/// <summary>
		/// N:1 lk_ipg_carriernetwork_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ipg_carriernetwork_createdby")]
		public Insight.Intake.SystemUser lk_ipg_carriernetwork_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_ipg_carriernetwork_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ipg_carriernetwork_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ipg_carriernetwork_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_ipg_carriernetwork_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_ipg_carriernetwork_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_ipg_carriernetwork_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_ipg_carriernetwork_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_ipg_carriernetwork_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_ipg_carriernetwork_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ipg_carriernetwork_modifiedby")]
		public Insight.Intake.SystemUser lk_ipg_carriernetwork_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_ipg_carriernetwork_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ipg_carriernetwork_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ipg_carriernetwork_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_ipg_carriernetwork_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_ipg_carriernetwork_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_ipg_carriernetwork_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_ipg_carriernetwork_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_ipg_carriernetwork_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 user_ipg_carriernetwork
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_ipg_carriernetwork")]
		public Insight.Intake.SystemUser user_ipg_carriernetwork
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("user_ipg_carriernetwork", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ipg_carriernetwork(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ipg_carriernetworkid"] = base.Id;
                        break;
                    case "ipg_carriernetworkid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}