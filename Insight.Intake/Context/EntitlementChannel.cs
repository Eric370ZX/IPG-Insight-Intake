//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Insight.Intake
{
	
	/// <summary>
	/// Defines the amount and type of support for a channel.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("entitlementchannel")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public partial class EntitlementChannel : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string Channel = "channel";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string EntitlementChannelId = "entitlementchannelid";
			public const string Id = "entitlementchannelid";
			public const string EntitlementId = "entitlementid";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string RemainingTerms = "remainingterms";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalTerms = "totalterms";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string entitlement_entitlementchannel_EntitlementId = "entitlement_entitlementchannel_EntitlementId";
			public const string lk_entitlementchannel_createdby = "lk_entitlementchannel_createdby";
			public const string lk_entitlementchannel_createdonbehalfby = "lk_entitlementchannel_createdonbehalfby";
			public const string lk_entitlementchannel_modifiedby = "lk_entitlementchannel_modifiedby";
			public const string lk_entitlementchannel_modifiedonbehalfby = "lk_entitlementchannel_modifiedonbehalfby";
			public const string team_entitlementchannel = "team_entitlementchannel";
			public const string TransactionCurrency_entitlementchannel = "TransactionCurrency_entitlementchannel";
			public const string user_entitlementchannel = "user_entitlementchannel";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public EntitlementChannel() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "entitlementchannel";
		
		public const string EntitySchemaName = "EntitlementChannel";
		
		public const string PrimaryIdAttribute = "entitlementchannelid";
		
		public const string PrimaryNameAttribute = "name";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Select a channel for which you are defining the entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("channel")]
		public Microsoft.Xrm.Sdk.OptionSetValue Channel
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("channel");
			}
			set
			{
				this.OnPropertyChanging("Channel");
				this.SetAttributeValue("channel", value);
				this.OnPropertyChanged("Channel");
			}
		}
		
		/// <summary>
		/// Select a channel for which you are defining the entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("channel")]
		public virtual Incident_CaseOriginCode? ChannelEnum
		{
			get
			{
				return ((Incident_CaseOriginCode?)(EntityOptionSetEnum.GetEnum(this, "channel")));
			}
			set
			{
				this.OnPropertyChanging("Channel");
				this.SetAttributeValue("channel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("Channel");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementchannelid")]
		public System.Nullable<System.Guid> EntitlementChannelId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entitlementchannelid");
			}
			set
			{
				this.OnPropertyChanging("EntitlementChannelId");
				this.SetAttributeValue("entitlementchannelid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("EntitlementChannelId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementchannelid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.EntitlementChannelId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for Entitlement associated with Entitlement Channel.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public Microsoft.Xrm.Sdk.EntityReference EntitlementId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("entitlementid");
			}
			set
			{
				this.OnPropertyChanging("EntitlementId");
				this.SetAttributeValue("entitlementid", value);
				this.OnPropertyChanged("EntitlementId");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the incident with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization with which the entitlement channel is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Type the total number of entitlement terms that are left.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("remainingterms")]
		public System.Nullable<decimal> RemainingTerms
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("remainingterms");
			}
			set
			{
				this.OnPropertyChanging("RemainingTerms");
				this.SetAttributeValue("remainingterms", value);
				this.OnPropertyChanged("RemainingTerms");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type the total number of entitlement terms.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalterms")]
		public System.Nullable<decimal> TotalTerms
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("totalterms");
			}
			set
			{
				this.OnPropertyChanging("TotalTerms");
				this.SetAttributeValue("totalterms", value);
				this.OnPropertyChanged("TotalTerms");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N entitlementchannel_Annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementchannel_Annotations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Annotation> entitlementchannel_Annotations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Annotation>("entitlementchannel_Annotations", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementchannel_Annotations");
				this.SetRelatedEntities<Insight.Intake.Annotation>("entitlementchannel_Annotations", null, value);
				this.OnPropertyChanged("entitlementchannel_Annotations");
			}
		}
		
		/// <summary>
		/// 1:N entitlementchannel_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementchannel_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> entitlementchannel_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("entitlementchannel_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementchannel_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("entitlementchannel_AsyncOperations", null, value);
				this.OnPropertyChanged("entitlementchannel_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N entitlementchannel_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementchannel_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> entitlementchannel_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("entitlementchannel_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementchannel_DuplicateBaseRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("entitlementchannel_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("entitlementchannel_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N entitlementchannel_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementchannel_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> entitlementchannel_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("entitlementchannel_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementchannel_DuplicateMatchingRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("entitlementchannel_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("entitlementchannel_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N entitlementchannel_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementchannel_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> entitlementchannel_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("entitlementchannel_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementchannel_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("entitlementchannel_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("entitlementchannel_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// N:1 entitlement_entitlementchannel_EntitlementId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_entitlementchannel_EntitlementId")]
		public Insight.Intake.Entitlement entitlement_entitlementchannel_EntitlementId
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Entitlement>("entitlement_entitlementchannel_EntitlementId", null);
			}
			set
			{
				this.OnPropertyChanging("entitlement_entitlementchannel_EntitlementId");
				this.SetRelatedEntity<Insight.Intake.Entitlement>("entitlement_entitlementchannel_EntitlementId", null, value);
				this.OnPropertyChanged("entitlement_entitlementchannel_EntitlementId");
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlementchannel_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlementchannel_createdby")]
		public Insight.Intake.SystemUser lk_entitlementchannel_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_entitlementchannel_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlementchannel_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlementchannel_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_entitlementchannel_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_entitlementchannel_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_entitlementchannel_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_entitlementchannel_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_entitlementchannel_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlementchannel_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlementchannel_modifiedby")]
		public Insight.Intake.SystemUser lk_entitlementchannel_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_entitlementchannel_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_entitlementchannel_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_entitlementchannel_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_entitlementchannel_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_entitlementchannel_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_entitlementchannel_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_entitlementchannel_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_entitlementchannel_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 team_entitlementchannel
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_entitlementchannel")]
		public Insight.Intake.Team team_entitlementchannel
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Team>("team_entitlementchannel", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_entitlementchannel
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementchannel")]
		public Insight.Intake.TransactionCurrency TransactionCurrency_entitlementchannel
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_entitlementchannel", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementchannel");
				this.SetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_entitlementchannel", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementchannel");
			}
		}
		
		/// <summary>
		/// N:1 user_entitlementchannel
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_entitlementchannel")]
		public Insight.Intake.SystemUser user_entitlementchannel
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("user_entitlementchannel", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public EntitlementChannel(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["entitlementchannelid"] = base.Id;
                        break;
                    case "entitlementchannelid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}