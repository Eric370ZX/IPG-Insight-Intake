//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum TaskState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
	}
	
	/// <summary>
	/// Generic activity representing work needed to be done.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("task")]
	public partial class Task : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityAdditionalParams = "activityadditionalparams";
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CrmTaskAssignedUniqueId = "crmtaskassigneduniqueid";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_addeddocument = "ipg_addeddocument";
			public const string ipg_AdjustmentType = "ipg_adjustmenttype";
			public const string ipg_assignedtoteamid = "ipg_assignedtoteamid";
			public const string ipg_blockedgateid = "ipg_blockedgateid";
			public const string ipg_carrierid = "ipg_carrierid";
			public const string ipg_caseid = "ipg_caseid";
			public const string ipg_CaseInfo = "ipg_caseinfo";
			public const string ipg_closurenote = "ipg_closurenote";
			public const string ipg_DocumentType = "ipg_documenttype";
			public const string ipg_DuplicatePatientId = "ipg_duplicatepatientid";
			public const string ipg_estimatedvalue = "ipg_estimatedvalue";
			public const string ipg_estimatedvalue_Base = "ipg_estimatedvalue_base";
			public const string ipg_facilityid = "ipg_facilityid";
			public const string ipg_fieldName = "ipg_fieldname";
			public const string ipg_fromportal = "ipg_fromportal";
			public const string ipg_gateconfigdetailid = "ipg_gateconfigdetailid";
			public const string ipg_gatingoutcomeid = "ipg_gatingoutcomeid";
			public const string ipg_generatedbycode = "ipg_generatedbycode";
			public const string ipg_id = "ipg_id";
			public const string ipg_is_exception_approved = "ipg_is_exception_approved";
			public const string ipg_isvisibleonportal = "ipg_isvisibleonportal";
			public const string ipg_level = "ipg_level";
			public const string ipg_metatag = "ipg_metatag";
			public const string ipg_Owner = "ipg_owner";
			public const string ipg_closedbyid = "ipg_closedbyid";
			public const string ipg_portalowningteamrid = "ipg_portalowningteamrid";
			public const string ipg_portalstatus = "ipg_portalstatus";
			public const string ipg_portaluser = "ipg_portaluser";
			public const string ipg_priority = "ipg_priority";
			public const string ipg_reviewstatuscode = "ipg_reviewstatuscode";
			public const string ipg_RevisedTaskTypeId = "ipg_revisedtasktypeid";
			public const string ipg_slatypecode = "ipg_slatypecode";
			public const string ipg_systemtasktypecode = "ipg_systemtasktypecode";
			public const string ipg_taskblocksgating = "ipg_taskblocksgating";
			public const string ipg_taskcategorycode = "ipg_taskcategorycode";
			public const string ipg_taskcategoryid = "ipg_taskcategoryid";
			public const string ipg_taskreason = "ipg_taskreason";
			public const string ipg_tasksubcategoryid = "ipg_tasksubcategoryid";
			public const string ipg_tasksubject = "ipg_tasksubject";
			public const string ipg_tasktategoryidupdateId = "ipg_tasktategoryidupdateid";
			public const string ipg_tasktypecode = "ipg_tasktypecode";
			public const string ipg_tasktypeid = "ipg_tasktypeid";
			public const string ipg_wftaskgroupid = "ipg_wftaskgroupid";
			public const string ipg_WorkflowTaskId = "ipg_workflowtaskid";
			public const string IsBilled = "isbilled";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OnHoldTime = "onholdtime";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PercentComplete = "percentcomplete";
			public const string PriorityCode = "prioritycode";
			public const string ProcessId = "processid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Task() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "task";
		
		public const string EntitySchemaName = "Task";
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public const string EntityLogicalCollectionName = "tasks";
		
		public const string EntitySetName = "tasks";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string ActivityAdditionalParams
		{
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			set
			{
				this.OnPropertyChanging("ActivityAdditionalParams");
				this.SetAttributeValue("activityadditionalparams", value);
				this.OnPropertyChanged("ActivityAdditionalParams");
			}
		}
		
		/// <summary>
		/// Unique identifier of the task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Type the number of minutes spent on the task. The duration is used in reporting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			set
			{
				this.OnPropertyChanging("ActualDurationMinutes");
				this.SetAttributeValue("actualdurationminutes", value);
				this.OnPropertyChanged("ActualDurationMinutes");
			}
		}
		
		/// <summary>
		/// Enter the actual end date and time of the task. By default, it displays when the activity was completed or canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			set
			{
				this.OnPropertyChanging("ActualEnd");
				this.SetAttributeValue("actualend", value);
				this.OnPropertyChanged("ActualEnd");
			}
		}
		
		/// <summary>
		/// Enter the actual start date and time for the task. By default, it displays when the task was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			set
			{
				this.OnPropertyChanging("ActualStart");
				this.SetAttributeValue("actualstart", value);
				this.OnPropertyChanged("ActualStart");
			}
		}
		
		/// <summary>
		/// Type a category to identify the task type, such as lead gathering or customer follow up, to tie the task to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			set
			{
				this.OnPropertyChanging("Category");
				this.SetAttributeValue("category", value);
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Assigned Task Unique Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("crmtaskassigneduniqueid")]
		public System.Nullable<System.Guid> CrmTaskAssignedUniqueId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("crmtaskassigneduniqueid");
			}
			set
			{
				this.OnPropertyChanging("CrmTaskAssignedUniqueId");
				this.SetAttributeValue("crmtaskassigneduniqueid", value);
				this.OnPropertyChanged("CrmTaskAssignedUniqueId");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Displays if the document was assigned for this Task
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_addeddocument")]
		public System.Nullable<bool> ipg_addeddocument
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_addeddocument");
			}
			set
			{
				this.OnPropertyChanging("ipg_addeddocument");
				this.SetAttributeValue("ipg_addeddocument", value);
				this.OnPropertyChanged("ipg_addeddocument");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_adjustmenttype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_AdjustmentType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_adjustmenttype");
			}
			set
			{
				this.OnPropertyChanging("ipg_AdjustmentType");
				this.SetAttributeValue("ipg_adjustmenttype", value);
				this.OnPropertyChanged("ipg_AdjustmentType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_adjustmenttype")]
		public virtual ipg_AdjustmentTypes? ipg_AdjustmentTypeEnum
		{
			get
			{
				return ((ipg_AdjustmentTypes?)(EntityOptionSetEnum.GetEnum(this, "ipg_adjustmenttype")));
			}
			set
			{
				this.OnPropertyChanging("ipg_AdjustmentType");
				this.SetAttributeValue("ipg_adjustmenttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_AdjustmentType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_assignedtoteamid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_assignedtoteamid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_assignedtoteamid");
			}
			set
			{
				this.OnPropertyChanging("ipg_assignedtoteamid");
				this.SetAttributeValue("ipg_assignedtoteamid", value);
				this.OnPropertyChanged("ipg_assignedtoteamid");
			}
		}
		
		/// <summary>
		/// Reference to a gate, that is being blocked, until the task is closed
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_blockedgateid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_blockedgateid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_blockedgateid");
			}
			set
			{
				this.OnPropertyChanging("ipg_blockedgateid");
				this.SetAttributeValue("ipg_blockedgateid", value);
				this.OnPropertyChanged("ipg_blockedgateid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrierid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_carrierid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_carrierid");
			}
			set
			{
				this.OnPropertyChanging("ipg_carrierid");
				this.SetAttributeValue("ipg_carrierid", value);
				this.OnPropertyChanged("ipg_carrierid");
			}
		}
		
		/// <summary>
		/// a special field for filtering in the nested grid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_caseid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_caseid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_caseid");
			}
			set
			{
				this.OnPropertyChanging("ipg_caseid");
				this.SetAttributeValue("ipg_caseid", value);
				this.OnPropertyChanged("ipg_caseid");
			}
		}
		
		/// <summary>
		/// Display case information related to this task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_caseinfo")]
		public string ipg_CaseInfo
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_caseinfo");
			}
			set
			{
				this.OnPropertyChanging("ipg_CaseInfo");
				this.SetAttributeValue("ipg_caseinfo", value);
				this.OnPropertyChanged("ipg_CaseInfo");
			}
		}
		
		/// <summary>
		/// Task Closure Note
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_closurenote")]
		public string ipg_closurenote
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_closurenote");
			}
			set
			{
				this.OnPropertyChanging("ipg_closurenote");
				this.SetAttributeValue("ipg_closurenote", value);
				this.OnPropertyChanged("ipg_closurenote");
			}
		}
		
		/// <summary>
		/// Denotes the document type the user wishes to attach to the document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_documenttype")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_DocumentType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_documenttype");
			}
			set
			{
				this.OnPropertyChanging("ipg_DocumentType");
				this.SetAttributeValue("ipg_documenttype", value);
				this.OnPropertyChanged("ipg_DocumentType");
			}
		}
		
		/// <summary>
		/// Represents duplicate patient for the potential duplicate patient.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_duplicatepatientid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_DuplicatePatientId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_duplicatepatientid");
			}
			set
			{
				this.OnPropertyChanging("ipg_DuplicatePatientId");
				this.SetAttributeValue("ipg_duplicatepatientid", value);
				this.OnPropertyChanged("ipg_DuplicatePatientId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_estimatedvalue")]
		public Microsoft.Xrm.Sdk.Money ipg_estimatedvalue
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_estimatedvalue");
			}
			set
			{
				this.OnPropertyChanging("ipg_estimatedvalue");
				this.SetAttributeValue("ipg_estimatedvalue", value);
				this.OnPropertyChanged("ipg_estimatedvalue");
			}
		}
		
		/// <summary>
		/// Value of the estimatedvalue in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_estimatedvalue_base")]
		public Microsoft.Xrm.Sdk.Money ipg_estimatedvalue_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_estimatedvalue_base");
			}
		}
		
		/// <summary>
		/// Facility from Case
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_facilityid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_facilityid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_facilityid");
			}
			set
			{
				this.OnPropertyChanging("ipg_facilityid");
				this.SetAttributeValue("ipg_facilityid", value);
				this.OnPropertyChanged("ipg_facilityid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_fieldname")]
		public string ipg_fieldName
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_fieldname");
			}
			set
			{
				this.OnPropertyChanging("ipg_fieldName");
				this.SetAttributeValue("ipg_fieldname", value);
				this.OnPropertyChanged("ipg_fieldName");
			}
		}
		
		/// <summary>
		/// Identify if the Task was created from Portal
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_fromportal")]
		public System.Nullable<bool> ipg_fromportal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_fromportal");
			}
			set
			{
				this.OnPropertyChanging("ipg_fromportal");
				this.SetAttributeValue("ipg_fromportal", value);
				this.OnPropertyChanged("ipg_fromportal");
			}
		}
		
		/// <summary>
		/// Unique identifier for Gate Configuration Detail associated with Task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gateconfigdetailid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_gateconfigdetailid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_gateconfigdetailid");
			}
			set
			{
				this.OnPropertyChanging("ipg_gateconfigdetailid");
				this.SetAttributeValue("ipg_gateconfigdetailid", value);
				this.OnPropertyChanged("ipg_gateconfigdetailid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_gatingoutcomeid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_gatingoutcomeid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_gatingoutcomeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_gatingoutcomeid");
				this.SetAttributeValue("ipg_gatingoutcomeid", value);
				this.OnPropertyChanged("ipg_gatingoutcomeid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_generatedbycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_generatedbycode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_generatedbycode");
			}
			set
			{
				this.OnPropertyChanging("ipg_generatedbycode");
				this.SetAttributeValue("ipg_generatedbycode", value);
				this.OnPropertyChanged("ipg_generatedbycode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_generatedbycode")]
		public virtual ipg_GeneratedByCode? ipg_generatedbycodeEnum
		{
			get
			{
				return ((ipg_GeneratedByCode?)(EntityOptionSetEnum.GetEnum(this, "ipg_generatedbycode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_generatedbycode");
				this.SetAttributeValue("ipg_generatedbycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_generatedbycode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_id")]
		public string ipg_id
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_id");
			}
			set
			{
				this.OnPropertyChanging("ipg_id");
				this.SetAttributeValue("ipg_id", value);
				this.OnPropertyChanged("ipg_id");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_is_exception_approved")]
		public System.Nullable<bool> ipg_is_exception_approved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_is_exception_approved");
			}
			set
			{
				this.OnPropertyChanging("ipg_is_exception_approved");
				this.SetAttributeValue("ipg_is_exception_approved", value);
				this.OnPropertyChanged("ipg_is_exception_approved");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isvisibleonportal")]
		public System.Nullable<bool> ipg_isvisibleonportal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isvisibleonportal");
			}
			set
			{
				this.OnPropertyChanging("ipg_isvisibleonportal");
				this.SetAttributeValue("ipg_isvisibleonportal", value);
				this.OnPropertyChanged("ipg_isvisibleonportal");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_level")]
		public System.Nullable<int> ipg_level
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ipg_level");
			}
			set
			{
				this.OnPropertyChanging("ipg_level");
				this.SetAttributeValue("ipg_level", value);
				this.OnPropertyChanged("ipg_level");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_metatag")]
		public string ipg_metatag
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_metatag");
			}
			set
			{
				this.OnPropertyChanging("ipg_metatag");
				this.SetAttributeValue("ipg_metatag", value);
				this.OnPropertyChanged("ipg_metatag");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_owner")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_Owner
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_owner");
			}
			set
			{
				this.OnPropertyChanging("ipg_Owner");
				this.SetAttributeValue("ipg_owner", value);
				this.OnPropertyChanged("ipg_Owner");
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_closedbyid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_closedbyid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_closedbyid");
			}
			set
			{
				this.OnPropertyChanging("ipg_closedbyid");
				this.SetAttributeValue("ipg_closedbyid", value);
				this.OnPropertyChanged("ipg_closedbyid");
			}
		}

		/// <summary>
		/// Field that will be populated with IPG Portal support Team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_portalowningteamrid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_portalowningteamrid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_portalowningteamrid");
			}
			set
			{
				this.OnPropertyChanging("ipg_portalowningteamrid");
				this.SetAttributeValue("ipg_portalowningteamrid", value);
				this.OnPropertyChanged("ipg_portalowningteamrid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_portalstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_portalstatus
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_portalstatus");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_portalstatus")]
		public virtual Task_ipg_portalstatus? ipg_portalstatusEnum
		{
			get
			{
				return ((Task_ipg_portalstatus?)(EntityOptionSetEnum.GetEnum(this, "ipg_portalstatus")));
			}
		}
		
		/// <summary>
		/// Responsible Portal User
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_portaluser")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_portaluser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_portaluser");
			}
			set
			{
				this.OnPropertyChanging("ipg_portaluser");
				this.SetAttributeValue("ipg_portaluser", value);
				this.OnPropertyChanged("ipg_portaluser");
			}
		}
		
		/// <summary>
		/// Custom Task priority value so that preferred customers or critical issues are handled quickly.
		///OOB priority field can't be used because there is no way to configure it from task type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_priority")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_priority
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_priority");
			}
			set
			{
				this.OnPropertyChanging("ipg_priority");
				this.SetAttributeValue("ipg_priority", value);
				this.OnPropertyChanged("ipg_priority");
			}
		}
		
		/// <summary>
		/// Custom Task priority value so that preferred customers or critical issues are handled quickly.
		///OOB priority field can't be used because there is no way to configure it from task type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_priority")]
		public virtual ipg_Priority? ipg_priorityEnum
		{
			get
			{
				return ((ipg_Priority?)(EntityOptionSetEnum.GetEnum(this, "ipg_priority")));
			}
			set
			{
				this.OnPropertyChanging("ipg_priority");
				this.SetAttributeValue("ipg_priority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_priority");
			}
		}
		
		/// <summary>
		/// Document Missing Task review status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_reviewstatuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_reviewstatuscode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_reviewstatuscode");
			}
			set
			{
				this.OnPropertyChanging("ipg_reviewstatuscode");
				this.SetAttributeValue("ipg_reviewstatuscode", value);
				this.OnPropertyChanged("ipg_reviewstatuscode");
			}
		}
		
		/// <summary>
		/// Document Missing Task review status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_reviewstatuscode")]
		public virtual Task_ipg_reviewstatuscode? ipg_reviewstatuscodeEnum
		{
			get
			{
				return ((Task_ipg_reviewstatuscode?)(EntityOptionSetEnum.GetEnum(this, "ipg_reviewstatuscode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_reviewstatuscode");
				this.SetAttributeValue("ipg_reviewstatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_reviewstatuscode");
			}
		}
		
		/// <summary>
		/// Unique identifier for Task Type associated with Task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_revisedtasktypeid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_RevisedTaskTypeId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_revisedtasktypeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_RevisedTaskTypeId");
				this.SetAttributeValue("ipg_revisedtasktypeid", value);
				this.OnPropertyChanged("ipg_RevisedTaskTypeId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_slatypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_slatypecode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_slatypecode");
			}
			set
			{
				this.OnPropertyChanging("ipg_slatypecode");
				this.SetAttributeValue("ipg_slatypecode", value);
				this.OnPropertyChanged("ipg_slatypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_slatypecode")]
		public virtual ipg_SLATaskType? ipg_slatypecodeEnum
		{
			get
			{
				return ((ipg_SLATaskType?)(EntityOptionSetEnum.GetEnum(this, "ipg_slatypecode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_slatypecode");
				this.SetAttributeValue("ipg_slatypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_slatypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_systemtasktypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_systemtasktypecode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_systemtasktypecode");
			}
			set
			{
				this.OnPropertyChanging("ipg_systemtasktypecode");
				this.SetAttributeValue("ipg_systemtasktypecode", value);
				this.OnPropertyChanged("ipg_systemtasktypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_systemtasktypecode")]
		public virtual ipg_SystemTaskType? ipg_systemtasktypecodeEnum
		{
			get
			{
				return ((ipg_SystemTaskType?)(EntityOptionSetEnum.GetEnum(this, "ipg_systemtasktypecode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_systemtasktypecode");
				this.SetAttributeValue("ipg_systemtasktypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_systemtasktypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskblocksgating")]
		public System.Nullable<bool> ipg_taskblocksgating
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_taskblocksgating");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskblocksgating");
				this.SetAttributeValue("ipg_taskblocksgating", value);
				this.OnPropertyChanged("ipg_taskblocksgating");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategorycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_taskcategorycode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_taskcategorycode");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategorycode");
				this.SetAttributeValue("ipg_taskcategorycode", value);
				this.OnPropertyChanged("ipg_taskcategorycode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategorycode")]
		public virtual ipg_Taskcategory1? ipg_taskcategorycodeEnum
		{
			get
			{
				return ((ipg_Taskcategory1?)(EntityOptionSetEnum.GetEnum(this, "ipg_taskcategorycode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategorycode");
				this.SetAttributeValue("ipg_taskcategorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_taskcategorycode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskcategoryid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_taskcategoryid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_taskcategoryid");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskcategoryid");
				this.SetAttributeValue("ipg_taskcategoryid", value);
				this.OnPropertyChanged("ipg_taskcategoryid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_taskreason")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_taskreason
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_taskreason");
			}
			set
			{
				this.OnPropertyChanging("ipg_taskreason");
				this.SetAttributeValue("ipg_taskreason", value);
				this.OnPropertyChanged("ipg_taskreason");
			}
		}
		
		/// <summary>
		/// Use OOB string Sub-Category instead
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasksubcategoryid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_tasksubcategoryid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_tasksubcategoryid");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasksubcategoryid");
				this.SetAttributeValue("ipg_tasksubcategoryid", value);
				this.OnPropertyChanged("ipg_tasksubcategoryid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasksubject")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_tasksubject
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_tasksubject");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasksubject");
				this.SetAttributeValue("ipg_tasksubject", value);
				this.OnPropertyChanged("ipg_tasksubject");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasksubject")]
		public virtual ipg_TaskSubject? ipg_tasksubjectEnum
		{
			get
			{
				return ((ipg_TaskSubject?)(EntityOptionSetEnum.GetEnum(this, "ipg_tasksubject")));
			}
			set
			{
				this.OnPropertyChanging("ipg_tasksubject");
				this.SetAttributeValue("ipg_tasksubject", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_tasksubject");
			}
		}
		
		/// <summary>
		/// Unique identifier for Task Category associated with Task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktategoryidupdateid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_tasktategoryidupdateId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_tasktategoryidupdateid");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktategoryidupdateId");
				this.SetAttributeValue("ipg_tasktategoryidupdateid", value);
				this.OnPropertyChanged("ipg_tasktategoryidupdateId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_tasktypecode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_tasktypecode");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypecode");
				this.SetAttributeValue("ipg_tasktypecode", value);
				this.OnPropertyChanged("ipg_tasktypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypecode")]
		public virtual ipg_TaskType1? ipg_tasktypecodeEnum
		{
			get
			{
				return ((ipg_TaskType1?)(EntityOptionSetEnum.GetEnum(this, "ipg_tasktypecode")));
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypecode");
				this.SetAttributeValue("ipg_tasktypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_tasktypecode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_tasktypeid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_tasktypeid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_tasktypeid");
			}
			set
			{
				this.OnPropertyChanging("ipg_tasktypeid");
				this.SetAttributeValue("ipg_tasktypeid", value);
				this.OnPropertyChanged("ipg_tasktypeid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_wftaskgroupid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_wftaskgroupid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_wftaskgroupid");
			}
			set
			{
				this.OnPropertyChanging("ipg_wftaskgroupid");
				this.SetAttributeValue("ipg_wftaskgroupid", value);
				this.OnPropertyChanged("ipg_wftaskgroupid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_workflowtaskid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_WorkflowTaskId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_workflowtaskid");
			}
			set
			{
				this.OnPropertyChanging("ipg_WorkflowTaskId");
				this.SetAttributeValue("ipg_workflowtaskid", value);
				this.OnPropertyChanged("ipg_WorkflowTaskId");
			}
		}
		
		/// <summary>
		/// Information which specifies whether the task was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			set
			{
				this.OnPropertyChanging("IsBilled");
				this.SetAttributeValue("isbilled", value);
				this.OnPropertyChanged("IsBilled");
			}
		}
		
		/// <summary>
		/// Information regarding whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// Information which specifies if the task was created from a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			set
			{
				this.OnPropertyChanging("IsWorkflowCreated");
				this.SetAttributeValue("isworkflowcreated", value);
				this.OnPropertyChanged("IsWorkflowCreated");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Shows the record owner's business unit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team that owns the task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user that owns the task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Type the percentage complete value for the task to track tasks to completion.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("percentcomplete")]
		public System.Nullable<int> PercentComplete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("percentcomplete");
			}
			set
			{
				this.OnPropertyChanging("PercentComplete");
				this.SetAttributeValue("percentcomplete", value);
				this.OnPropertyChanged("PercentComplete");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		///Use Custom field instead of this
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		///Use Custom field instead of this
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual Task_PriorityCode? PriorityCodeEnum
		{
			get
			{
				return ((Task_PriorityCode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Choose the record that the task relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Scheduled duration of the task, specified in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			set
			{
				this.OnPropertyChanging("ScheduledEnd");
				this.SetAttributeValue("scheduledend", value);
				this.OnPropertyChanged("ScheduledEnd");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			set
			{
				this.OnPropertyChanging("ScheduledStart");
				this.SetAttributeValue("scheduledstart", value);
				this.OnPropertyChanged("ScheduledStart");
			}
		}
		
		/// <summary>
		/// Choose the service that is associated with this activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Task record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this Task. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			set
			{
				this.OnPropertyChanging("SortDate");
				this.SetAttributeValue("sortdate", value);
				this.OnPropertyChanged("SortDate");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the task is open, completed, or canceled. Completed and canceled tasks are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.TaskState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.TaskState)(System.Enum.ToObject(typeof(Insight.Intake.TaskState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the task's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select the task's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Task_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((Task_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the task type and relate the activity to a specific product, sales region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			set
			{
				this.OnPropertyChanging("Subcategory");
				this.SetAttributeValue("subcategory", value);
				this.OnPropertyChanged("Subcategory");
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("subject", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			set
			{
				this.OnPropertyChanging("SubscriptionId");
				this.SetAttributeValue("subscriptionid", value);
				this.OnPropertyChanged("SubscriptionId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Task(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}