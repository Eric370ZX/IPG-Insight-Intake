//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Insight.Intake
{

	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ipg_procedurenameState
	{

		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,

		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}

	/// <summary>
	/// Collection of procedure names.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ipg_procedurename")]
	public partial class ipg_procedurename : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{

		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_Description = "ipg_description";
			public const string ipg_EffectiveDate = "ipg_effectivedate";
			public const string ipg_ExpirationDate = "ipg_expirationdate";
			public const string ipg_externalid = "ipg_externalid";
			public const string ipg_IndustrySegment = "ipg_industrysegment";
			public const string ipg_IsActive = "ipg_isactive";
			public const string ipg_name = "ipg_name";
			public const string ipg_Notes = "ipg_notes";
			public const string ipg_procedurenameId = "ipg_procedurenameid";
			public const string Id = "ipg_procedurenameid";
			public const string ipg_ropelnasalstent = "ipg_ropelnasalstent";
			public const string ipg_TodaysDate = "ipg_todaysdate";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ipg_procedurename() :
				base(EntityLogicalName)
		{
		}

		public const string EntityLogicalName = "ipg_procedurename";

		public const string EntitySchemaName = "ipg_procedurename";

		public const string PrimaryIdAttribute = "ipg_procedurenameid";

		public const string PrimaryNameAttribute = "ipg_name";

		public const string EntityLogicalCollectionName = "ipg_procedurenames";

		public const string EntitySetName = "ipg_procedurenames";

		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}

		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}

		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}

		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}

		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_description")]
		public string ipg_Description
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_description");
			}
			set
			{
				this.OnPropertyChanging("ipg_Description");
				this.SetAttributeValue("ipg_description", value);
				this.OnPropertyChanged("ipg_Description");
			}
		}

		/// <summary>
		/// Represents effective date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_effectivedate")]
		public System.Nullable<System.DateTime> ipg_EffectiveDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_effectivedate");
			}
			set
			{
				this.OnPropertyChanging("ipg_EffectiveDate");
				this.SetAttributeValue("ipg_effectivedate", value);
				this.OnPropertyChanged("ipg_EffectiveDate");
			}
		}

		/// <summary>
		/// Represents expiration date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_expirationdate")]
		public System.Nullable<System.DateTime> ipg_ExpirationDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_expirationdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_ExpirationDate");
				this.SetAttributeValue("ipg_expirationdate", value);
				this.OnPropertyChanged("ipg_ExpirationDate");
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_externalid")]
		public string ipg_externalid
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_externalid");
			}
			set
			{
				this.OnPropertyChanging("ipg_externalid");
				this.SetAttributeValue("ipg_externalid", value);
				this.OnPropertyChanged("ipg_externalid");
			}
		}

		/// <summary>
		/// Represents industry segment the procedure belongs to. This is a multi-select field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_industrysegment")]
		public Microsoft.Xrm.Sdk.OptionSetValueCollection ipg_IndustrySegment
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("ipg_industrysegment");
			}
			set
			{
				this.OnPropertyChanging("ipg_IndustrySegment");
				this.SetAttributeValue("ipg_industrysegment", value);
				this.OnPropertyChanged("ipg_IndustrySegment");
			}
		}

		/// <summary>
		/// Represents industry segment the procedure belongs to. This is a multi-select field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_industrysegment")]
		public virtual System.Collections.Generic.IEnumerable<ipg_IndustrySegment> ipg_IndustrySegmentEnum
		{
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ipg_IndustrySegment>(this, "ipg_industrysegment");
			}
			set
			{
				this.OnPropertyChanging("ipg_IndustrySegment");
				this.SetAttributeValue("ipg_industrysegment", EntityOptionSetEnum.GetMultiEnum(this, "ipg_industrysegment", value));
				this.OnPropertyChanged("ipg_IndustrySegment");
			}
		}

		/// <summary>
		/// Represents if procedure name is active or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isactive")]
		public System.Nullable<bool> ipg_IsActive
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isactive");
			}
			set
			{
				this.OnPropertyChanging("ipg_IsActive");
				this.SetAttributeValue("ipg_isactive", value);
				this.OnPropertyChanged("ipg_IsActive");
			}
		}

		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_name")]
		public string ipg_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_name");
				this.SetAttributeValue("ipg_name", value);
				this.OnPropertyChanged("ipg_name");
			}
		}

		/// <summary>
		/// The user can write  notes for procedure names
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_notes")]
		public string ipg_Notes
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_notes");
			}
			set
			{
				this.OnPropertyChanging("ipg_Notes");
				this.SetAttributeValue("ipg_notes", value);
				this.OnPropertyChanged("ipg_Notes");
			}
		}

		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_procedurenameid")]
		public System.Nullable<System.Guid> ipg_procedurenameId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ipg_procedurenameid");
			}
			set
			{
				this.OnPropertyChanging("ipg_procedurenameId");
				this.SetAttributeValue("ipg_procedurenameid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ipg_procedurenameId");
			}
		}

		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_procedurenameid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ipg_procedurenameId = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_ropelnasalstent")]
		public System.Nullable<bool> ipg_ropelnasalstent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_ropelnasalstent");
			}
			set
			{
				this.OnPropertyChanging("ipg_ropelnasalstent");
				this.SetAttributeValue("ipg_ropelnasalstent", value);
				this.OnPropertyChanged("ipg_ropelnasalstent");
			}
		}

		/// <summary>
		/// Represent todays date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_todaysdate")]
		public System.Nullable<System.DateTime> ipg_TodaysDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_todaysdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_TodaysDate");
				this.SetAttributeValue("ipg_todaysdate", value);
				this.OnPropertyChanged("ipg_TodaysDate");
			}
		}

		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}

		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}

		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}

		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}

		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}

		/// <summary>
		/// Status of the Procedure Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.ipg_procedurenameState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.ipg_procedurenameState)(System.Enum.ToObject(typeof(Insight.Intake.ipg_procedurenameState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}

		/// <summary>
		/// Reason for the status of the Procedure Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}

		/// <summary>
		/// Reason for the status of the Procedure Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ipg_procedurename_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((ipg_procedurename_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}

		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}

		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}

		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}

		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ipg_procedurename(object anonymousType) :
				this()
		{
			foreach (var p in anonymousType.GetType().GetProperties())
			{
				var value = p.GetValue(anonymousType, null);
				var name = p.Name.ToLower();

				if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
				{
					value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
					name = name.Remove(name.Length - "enum".Length);
				}

				switch (name)
				{
					case "id":
						base.Id = (System.Guid)value;
						Attributes["ipg_procedurenameid"] = base.Id;
						break;
					case "ipg_procedurenameid":
						var id = (System.Nullable<System.Guid>)value;
						if (id == null) { continue; }
						base.Id = id.Value;
						Attributes[name] = base.Id;
						break;
					case "formattedvalues":
						// Add Support for FormattedValues
						FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
						break;
					default:
						Attributes[name] = value;
						break;
				}
			}
		}
	}
}