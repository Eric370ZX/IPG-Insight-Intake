//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public enum TransactionCurrencyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Currency in which a financial transaction is carried out.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("transactioncurrency")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public partial class TransactionCurrency : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CurrencyName = "currencyname";
			public const string CurrencyPrecision = "currencyprecision";
			public const string CurrencySymbol = "currencysymbol";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ISOCurrencyCode = "isocurrencycode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string Id = "transactioncurrencyid";
			public const string VersionNumber = "versionnumber";
			public const string lk_transactioncurrency_createdonbehalfby = "lk_transactioncurrency_createdonbehalfby";
			public const string lk_transactioncurrency_modifiedonbehalfby = "lk_transactioncurrency_modifiedonbehalfby";
			public const string lk_transactioncurrencybase_createdby = "lk_transactioncurrencybase_createdby";
			public const string lk_transactioncurrencybase_modifiedby = "lk_transactioncurrencybase_modifiedby";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public TransactionCurrency() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "transactioncurrency";
		
		public const string EntitySchemaName = "TransactionCurrency";
		
		public const string PrimaryIdAttribute = "transactioncurrencyid";
		
		public const string PrimaryNameAttribute = "currencyname";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the transaction currency was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the transactioncurrency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Name of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyname")]
		public string CurrencyName
		{
			get
			{
				return this.GetAttributeValue<string>("currencyname");
			}
			set
			{
				this.OnPropertyChanging("CurrencyName");
				this.SetAttributeValue("currencyname", value);
				this.OnPropertyChanged("CurrencyName");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyprecision")]
		public System.Nullable<int> CurrencyPrecision
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currencyprecision");
			}
			set
			{
				this.OnPropertyChanging("CurrencyPrecision");
				this.SetAttributeValue("currencyprecision", value);
				this.OnPropertyChanged("CurrencyPrecision");
			}
		}
		
		/// <summary>
		/// Symbol for the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
		public string CurrencySymbol
		{
			get
			{
				return this.GetAttributeValue<string>("currencysymbol");
			}
			set
			{
				this.OnPropertyChanging("CurrencySymbol");
				this.SetAttributeValue("currencysymbol", value);
				this.OnPropertyChanged("CurrencySymbol");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.OnPropertyChanging("EntityImage");
				this.SetAttributeValue("entityimage", value);
				this.OnPropertyChanged("EntityImage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Exchange rate between the transaction currency and the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
			set
			{
				this.OnPropertyChanging("ExchangeRate");
				this.SetAttributeValue("exchangerate", value);
				this.OnPropertyChanged("ExchangeRate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// ISO currency code for the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isocurrencycode")]
		public string ISOCurrencyCode
		{
			get
			{
				return this.GetAttributeValue<string>("isocurrencycode");
			}
			set
			{
				this.OnPropertyChanging("ISOCurrencyCode");
				this.SetAttributeValue("isocurrencycode", value);
				this.OnPropertyChanged("ISOCurrencyCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the transaction currency was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the transactioncurrency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.TransactionCurrencyState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.TransactionCurrencyState)(System.Enum.ToObject(typeof(Insight.Intake.TransactionCurrencyState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual TransactionCurrency_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((TransactionCurrency_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public System.Nullable<System.Guid> TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.TransactionCurrencyId = value;
			}
		}
		
		/// <summary>
		/// Version number of the transaction currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N adx_portalcomment_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_portalcomment_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.adx_portalcomment> adx_portalcomment_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.adx_portalcomment>("adx_portalcomment_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("adx_portalcomment_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.adx_portalcomment>("adx_portalcomment_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("adx_portalcomment_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N incidentresolution_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incidentresolution_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.IncidentResolution> incidentresolution_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.IncidentResolution>("incidentresolution_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("incidentresolution_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.IncidentResolution>("incidentresolution_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("incidentresolution_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_carrier_audit_history> ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_carrier_audit_history>("ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.ipg_carrier_audit_history>("ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("ipg_carrier_audit_history_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_gateactivity_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_gateactivity_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_gateactivity> ipg_gateactivity_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_gateactivity>("ipg_gateactivity_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_gateactivity_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.ipg_gateactivity>("ipg_gateactivity_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("ipg_gateactivity_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_historicaudit_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_historicaudit_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_historicaudit> ipg_historicaudit_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_historicaudit>("ipg_historicaudit_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_historicaudit_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.ipg_historicaudit>("ipg_historicaudit_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("ipg_historicaudit_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N ipg_transactioncurrency_ipg_casepartdetail_currencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_transactioncurrency_ipg_casepartdetail_currencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_casepartdetail> ipg_transactioncurrency_ipg_casepartdetail_currencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_casepartdetail>("ipg_transactioncurrency_ipg_casepartdetail_currencyid", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_transactioncurrency_ipg_casepartdetail_currencyid");
				this.SetRelatedEntities<Insight.Intake.ipg_casepartdetail>("ipg_transactioncurrency_ipg_casepartdetail_currencyid", null, value);
				this.OnPropertyChanged("ipg_transactioncurrency_ipg_casepartdetail_currencyid");
			}
		}
		
		/// <summary>
		/// 1:N orderclose_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("orderclose_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.OrderClose> orderclose_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.OrderClose>("orderclose_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("orderclose_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.OrderClose>("orderclose_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("orderclose_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N quoteclose_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("quoteclose_transactioncurrency_transactioncurrencyid")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QuoteClose> quoteclose_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QuoteClose>("quoteclose_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("quoteclose_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntities<Insight.Intake.QuoteClose>("quoteclose_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("quoteclose_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_account")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Account> transactioncurrency_account
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Account>("transactioncurrency_account", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_account");
				this.SetRelatedEntities<Insight.Intake.Account>("transactioncurrency_account", null, value);
				this.OnPropertyChanged("transactioncurrency_account");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ActivityPointer
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ActivityPointer")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityPointer> TransactionCurrency_ActivityPointer
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ActivityPointer>("TransactionCurrency_ActivityPointer", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ActivityPointer");
				this.SetRelatedEntities<Insight.Intake.ActivityPointer>("TransactionCurrency_ActivityPointer", null, value);
				this.OnPropertyChanged("TransactionCurrency_ActivityPointer");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Appointment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Appointment> TransactionCurrency_Appointment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Appointment>("TransactionCurrency_Appointment", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Appointment");
				this.SetRelatedEntities<Insight.Intake.Appointment>("TransactionCurrency_Appointment", null, value);
				this.OnPropertyChanged("TransactionCurrency_Appointment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> TransactionCurrency_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("TransactionCurrency_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("TransactionCurrency_AsyncOperations", null, value);
				this.OnPropertyChanged("TransactionCurrency_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_BusinessUnit
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_BusinessUnit")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.BusinessUnit> TransactionCurrency_BusinessUnit
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.BusinessUnit>("TransactionCurrency_BusinessUnit", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_BusinessUnit");
				this.SetRelatedEntities<Insight.Intake.BusinessUnit>("TransactionCurrency_BusinessUnit", null, value);
				this.OnPropertyChanged("TransactionCurrency_BusinessUnit");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contact")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Contact> transactioncurrency_contact
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Contact>("transactioncurrency_contact", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_contact");
				this.SetRelatedEntities<Insight.Intake.Contact>("transactioncurrency_contact", null, value);
				this.OnPropertyChanged("transactioncurrency_contact");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ConvertRule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ConvertRule")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ConvertRule> TransactionCurrency_ConvertRule
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ConvertRule>("TransactionCurrency_ConvertRule", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ConvertRule");
				this.SetRelatedEntities<Insight.Intake.ConvertRule>("TransactionCurrency_ConvertRule", null, value);
				this.OnPropertyChanged("TransactionCurrency_ConvertRule");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_convertruleitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_convertruleitem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ConvertRuleItem> transactioncurrency_convertruleitem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ConvertRuleItem>("transactioncurrency_convertruleitem", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_convertruleitem");
				this.SetRelatedEntities<Insight.Intake.ConvertRuleItem>("transactioncurrency_convertruleitem", null, value);
				this.OnPropertyChanged("transactioncurrency_convertruleitem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_CustomerAddress
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_CustomerAddress")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.CustomerAddress> TransactionCurrency_CustomerAddress
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.CustomerAddress>("TransactionCurrency_CustomerAddress", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_CustomerAddress");
				this.SetRelatedEntities<Insight.Intake.CustomerAddress>("TransactionCurrency_CustomerAddress", null, value);
				this.OnPropertyChanged("TransactionCurrency_CustomerAddress");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_discount
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_discount")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Discount> transactioncurrency_discount
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Discount>("transactioncurrency_discount", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_discount");
				this.SetRelatedEntities<Insight.Intake.Discount>("transactioncurrency_discount", null, value);
				this.OnPropertyChanged("transactioncurrency_discount");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_discounttype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_discounttype")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DiscountType> transactioncurrency_discounttype
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DiscountType>("transactioncurrency_discounttype", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_discounttype");
				this.SetRelatedEntities<Insight.Intake.DiscountType>("transactioncurrency_discounttype", null, value);
				this.OnPropertyChanged("transactioncurrency_discounttype");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> TransactionCurrency_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("TransactionCurrency_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_DuplicateBaseRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("TransactionCurrency_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("TransactionCurrency_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> TransactionCurrency_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("TransactionCurrency_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_DuplicateMatchingRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("TransactionCurrency_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("TransactionCurrency_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Email
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Email")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Email> TransactionCurrency_Email
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Email>("TransactionCurrency_Email", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Email");
				this.SetRelatedEntities<Insight.Intake.Email>("TransactionCurrency_Email", null, value);
				this.OnPropertyChanged("TransactionCurrency_Email");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Entitlement")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Entitlement> TransactionCurrency_Entitlement
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Entitlement>("TransactionCurrency_Entitlement", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Entitlement");
				this.SetRelatedEntities<Insight.Intake.Entitlement>("TransactionCurrency_Entitlement", null, value);
				this.OnPropertyChanged("TransactionCurrency_Entitlement");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_entitlementchannel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementchannel")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.EntitlementChannel> TransactionCurrency_entitlementchannel
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.EntitlementChannel>("TransactionCurrency_entitlementchannel", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementchannel");
				this.SetRelatedEntities<Insight.Intake.EntitlementChannel>("TransactionCurrency_entitlementchannel", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementchannel");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_entitlementtemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementtemplate")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.EntitlementTemplate> TransactionCurrency_entitlementtemplate
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.EntitlementTemplate>("TransactionCurrency_entitlementtemplate", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementtemplate");
				this.SetRelatedEntities<Insight.Intake.EntitlementTemplate>("TransactionCurrency_entitlementtemplate", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementtemplate");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_entitlementtemplatechannel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementtemplatechannel")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.EntitlementTemplateChannel> TransactionCurrency_entitlementtemplatechannel
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.EntitlementTemplateChannel>("TransactionCurrency_entitlementtemplatechannel", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_entitlementtemplatechannel");
				this.SetRelatedEntities<Insight.Intake.EntitlementTemplateChannel>("TransactionCurrency_entitlementtemplatechannel", null, value);
				this.OnPropertyChanged("TransactionCurrency_entitlementtemplatechannel");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_expiredprocess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_expiredprocess")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ExpiredProcess> transactioncurrency_expiredprocess
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ExpiredProcess>("transactioncurrency_expiredprocess", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_expiredprocess");
				this.SetRelatedEntities<Insight.Intake.ExpiredProcess>("transactioncurrency_expiredprocess", null, value);
				this.OnPropertyChanged("transactioncurrency_expiredprocess");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ExternalParty
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ExternalParty")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ExternalParty> TransactionCurrency_ExternalParty
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ExternalParty>("TransactionCurrency_ExternalParty", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ExternalParty");
				this.SetRelatedEntities<Insight.Intake.ExternalParty>("TransactionCurrency_ExternalParty", null, value);
				this.OnPropertyChanged("TransactionCurrency_ExternalParty");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_externalpartyitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_externalpartyitem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ExternalPartyItem> TransactionCurrency_externalpartyitem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ExternalPartyItem>("TransactionCurrency_externalpartyitem", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_externalpartyitem");
				this.SetRelatedEntities<Insight.Intake.ExternalPartyItem>("TransactionCurrency_externalpartyitem", null, value);
				this.OnPropertyChanged("TransactionCurrency_externalpartyitem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Fax
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Fax")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Fax> TransactionCurrency_Fax
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Fax>("TransactionCurrency_Fax", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Fax");
				this.SetRelatedEntities<Insight.Intake.Fax>("TransactionCurrency_Fax", null, value);
				this.OnPropertyChanged("TransactionCurrency_Fax");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_feedback
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_feedback")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Feedback> transactioncurrency_feedback
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Feedback>("transactioncurrency_feedback", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_feedback");
				this.SetRelatedEntities<Insight.Intake.Feedback>("transactioncurrency_feedback", null, value);
				this.OnPropertyChanged("transactioncurrency_feedback");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_fixedmonthlyfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_fixedmonthlyfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.FixedMonthlyFiscalCalendar> transactioncurrency_fixedmonthlyfiscalcalendar
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.FixedMonthlyFiscalCalendar>("transactioncurrency_fixedmonthlyfiscalcalendar", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_fixedmonthlyfiscalcalendar");
				this.SetRelatedEntities<Insight.Intake.FixedMonthlyFiscalCalendar>("transactioncurrency_fixedmonthlyfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_fixedmonthlyfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Incident")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Incident> TransactionCurrency_Incident
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Incident>("TransactionCurrency_Incident", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Incident");
				this.SetRelatedEntities<Insight.Intake.Incident>("TransactionCurrency_Incident", null, value);
				this.OnPropertyChanged("TransactionCurrency_Incident");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_InteractionForEmail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_InteractionForEmail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.InteractionForEmail> TransactionCurrency_InteractionForEmail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.InteractionForEmail>("TransactionCurrency_InteractionForEmail", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_InteractionForEmail");
				this.SetRelatedEntities<Insight.Intake.InteractionForEmail>("TransactionCurrency_InteractionForEmail", null, value);
				this.OnPropertyChanged("TransactionCurrency_InteractionForEmail");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_invoice
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_invoice")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Invoice> transactioncurrency_invoice
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Invoice>("transactioncurrency_invoice", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_invoice");
				this.SetRelatedEntities<Insight.Intake.Invoice>("transactioncurrency_invoice", null, value);
				this.OnPropertyChanged("transactioncurrency_invoice");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_invoicedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_invoicedetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.InvoiceDetail> transactioncurrency_invoicedetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.InvoiceDetail>("transactioncurrency_invoicedetail", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_invoicedetail");
				this.SetRelatedEntities<Insight.Intake.InvoiceDetail>("transactioncurrency_invoicedetail", null, value);
				this.OnPropertyChanged("transactioncurrency_invoicedetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_accountspayable
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_accountspayable")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_accountspayable> TransactionCurrency_ipg_accountspayable
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_accountspayable>("TransactionCurrency_ipg_accountspayable", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_accountspayable");
				this.SetRelatedEntities<Insight.Intake.ipg_accountspayable>("TransactionCurrency_ipg_accountspayable", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_accountspayable");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_adjustment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_adjustment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_adjustment> TransactionCurrency_ipg_adjustment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_adjustment>("TransactionCurrency_ipg_adjustment", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_adjustment");
				this.SetRelatedEntities<Insight.Intake.ipg_adjustment>("TransactionCurrency_ipg_adjustment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_adjustment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_benefit")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_benefit> TransactionCurrency_ipg_benefit
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_benefit>("TransactionCurrency_ipg_benefit", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_benefit");
				this.SetRelatedEntities<Insight.Intake.ipg_benefit>("TransactionCurrency_ipg_benefit", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_benefit");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_benefitsverificationform
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_benefitsverificationform")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_benefitsverificationform> TransactionCurrency_ipg_benefitsverificationform
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_benefitsverificationform>("TransactionCurrency_ipg_benefitsverificationform", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_benefitsverificationform");
				this.SetRelatedEntities<Insight.Intake.ipg_benefitsverificationform>("TransactionCurrency_ipg_benefitsverificationform", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_benefitsverificationform");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_casepartdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_casepartdetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_casepartdetail> TransactionCurrency_ipg_casepartdetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_casepartdetail>("TransactionCurrency_ipg_casepartdetail", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_casepartdetail");
				this.SetRelatedEntities<Insight.Intake.ipg_casepartdetail>("TransactionCurrency_ipg_casepartdetail", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_casepartdetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_chargecenter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_chargecenter")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_chargecenter> TransactionCurrency_ipg_chargecenter
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_chargecenter>("TransactionCurrency_ipg_chargecenter", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_chargecenter");
				this.SetRelatedEntities<Insight.Intake.ipg_chargecenter>("TransactionCurrency_ipg_chargecenter", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_chargecenter");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimlineitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimlineitem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimlineitem> TransactionCurrency_ipg_claimlineitem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimlineitem>("TransactionCurrency_ipg_claimlineitem", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimlineitem");
				this.SetRelatedEntities<Insight.Intake.ipg_claimlineitem>("TransactionCurrency_ipg_claimlineitem", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimlineitem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimresponsebatch
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimresponsebatch")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponsebatch> TransactionCurrency_ipg_claimresponsebatch
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponsebatch>("TransactionCurrency_ipg_claimresponsebatch", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimresponsebatch");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponsebatch>("TransactionCurrency_ipg_claimresponsebatch", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimresponsebatch");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimresponseheader
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimresponseheader")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseheader> TransactionCurrency_ipg_claimresponseheader
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseheader>("TransactionCurrency_ipg_claimresponseheader", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimresponseheader");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseheader>("TransactionCurrency_ipg_claimresponseheader", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimresponseheader");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimresponseline
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimresponseline")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseline> TransactionCurrency_ipg_claimresponseline
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseline>("TransactionCurrency_ipg_claimresponseline", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimresponseline");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseline>("TransactionCurrency_ipg_claimresponseline", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimresponseline");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimresponselineadjustment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimresponselineadjustment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponselineadjustment> TransactionCurrency_ipg_claimresponselineadjustment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponselineadjustment>("TransactionCurrency_ipg_claimresponselineadjustment", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimresponselineadjustment");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponselineadjustment>("TransactionCurrency_ipg_claimresponselineadjustment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimresponselineadjustment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimresponseprovideradjustment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimresponseprovideradjustment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimresponseprovideradjustment> TransactionCurrency_ipg_claimresponseprovideradjustment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimresponseprovideradjustment>("TransactionCurrency_ipg_claimresponseprovideradjustment", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimresponseprovideradjustment");
				this.SetRelatedEntities<Insight.Intake.ipg_claimresponseprovideradjustment>("TransactionCurrency_ipg_claimresponseprovideradjustment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimresponseprovideradjustment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_claimshistory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_claimshistory")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_claimshistory> TransactionCurrency_ipg_claimshistory
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_claimshistory>("TransactionCurrency_ipg_claimshistory", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_claimshistory");
				this.SetRelatedEntities<Insight.Intake.ipg_claimshistory>("TransactionCurrency_ipg_claimshistory", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_claimshistory");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_GLTransaction
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_GLTransaction")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_GLTransaction> TransactionCurrency_ipg_GLTransaction
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_GLTransaction>("TransactionCurrency_ipg_GLTransaction", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_GLTransaction");
				this.SetRelatedEntities<Insight.Intake.ipg_GLTransaction>("TransactionCurrency_ipg_GLTransaction", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_GLTransaction");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_payment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_payment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_payment> TransactionCurrency_ipg_payment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_payment>("TransactionCurrency_ipg_payment", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_payment");
				this.SetRelatedEntities<Insight.Intake.ipg_payment>("TransactionCurrency_ipg_payment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_payment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_statementgenerationtask
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_statementgenerationtask")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_statementgenerationtask> TransactionCurrency_ipg_statementgenerationtask
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_statementgenerationtask>("TransactionCurrency_ipg_statementgenerationtask", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_statementgenerationtask");
				this.SetRelatedEntities<Insight.Intake.ipg_statementgenerationtask>("TransactionCurrency_ipg_statementgenerationtask", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_statementgenerationtask");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ipg_UpdateAPChecksTransaction
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ipg_UpdateAPChecksTransaction")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ipg_UpdateAPChecksTransaction> TransactionCurrency_ipg_UpdateAPChecksTransaction
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ipg_UpdateAPChecksTransaction>("TransactionCurrency_ipg_UpdateAPChecksTransaction", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ipg_UpdateAPChecksTransaction");
				this.SetRelatedEntities<Insight.Intake.ipg_UpdateAPChecksTransaction>("TransactionCurrency_ipg_UpdateAPChecksTransaction", null, value);
				this.OnPropertyChanged("TransactionCurrency_ipg_UpdateAPChecksTransaction");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_KbArticle
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_KbArticle")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KbArticle> TransactionCurrency_KbArticle
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KbArticle>("TransactionCurrency_KbArticle", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_KbArticle");
				this.SetRelatedEntities<Insight.Intake.KbArticle>("TransactionCurrency_KbArticle", null, value);
				this.OnPropertyChanged("TransactionCurrency_KbArticle");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_knowledgearticle
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_knowledgearticle")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KnowledgeArticle> TransactionCurrency_knowledgearticle
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KnowledgeArticle>("TransactionCurrency_knowledgearticle", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_knowledgearticle");
				this.SetRelatedEntities<Insight.Intake.KnowledgeArticle>("TransactionCurrency_knowledgearticle", null, value);
				this.OnPropertyChanged("TransactionCurrency_knowledgearticle");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_knowledgearticleincident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_knowledgearticleincident")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KnowledgeArticleIncident> transactioncurrency_knowledgearticleincident
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KnowledgeArticleIncident>("transactioncurrency_knowledgearticleincident", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_knowledgearticleincident");
				this.SetRelatedEntities<Insight.Intake.KnowledgeArticleIncident>("transactioncurrency_knowledgearticleincident", null, value);
				this.OnPropertyChanged("transactioncurrency_knowledgearticleincident");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_knowledgearticleviews
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_knowledgearticleviews")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KnowledgeArticleViews> transactioncurrency_knowledgearticleviews
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KnowledgeArticleViews>("transactioncurrency_knowledgearticleviews", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_knowledgearticleviews");
				this.SetRelatedEntities<Insight.Intake.KnowledgeArticleViews>("transactioncurrency_knowledgearticleviews", null, value);
				this.OnPropertyChanged("transactioncurrency_knowledgearticleviews");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_KnowledgeBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_KnowledgeBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.KnowledgeBaseRecord> TransactionCurrency_KnowledgeBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.KnowledgeBaseRecord>("TransactionCurrency_KnowledgeBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_KnowledgeBaseRecord");
				this.SetRelatedEntities<Insight.Intake.KnowledgeBaseRecord>("TransactionCurrency_KnowledgeBaseRecord", null, value);
				this.OnPropertyChanged("TransactionCurrency_KnowledgeBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_lead
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_lead")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Lead> transactioncurrency_lead
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Lead>("transactioncurrency_lead", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_lead");
				this.SetRelatedEntities<Insight.Intake.Lead>("transactioncurrency_lead", null, value);
				this.OnPropertyChanged("transactioncurrency_lead");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_LeadAddress
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_LeadAddress")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.LeadAddress> TransactionCurrency_LeadAddress
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.LeadAddress>("TransactionCurrency_LeadAddress", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_LeadAddress");
				this.SetRelatedEntities<Insight.Intake.LeadAddress>("TransactionCurrency_LeadAddress", null, value);
				this.OnPropertyChanged("TransactionCurrency_LeadAddress");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_leadtoopportunitysalesprocess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_leadtoopportunitysalesprocess")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.LeadToOpportunitySalesProcess> transactioncurrency_leadtoopportunitysalesprocess
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.LeadToOpportunitySalesProcess>("transactioncurrency_leadtoopportunitysalesprocess", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_leadtoopportunitysalesprocess");
				this.SetRelatedEntities<Insight.Intake.LeadToOpportunitySalesProcess>("transactioncurrency_leadtoopportunitysalesprocess", null, value);
				this.OnPropertyChanged("transactioncurrency_leadtoopportunitysalesprocess");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Letter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Letter")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Letter> TransactionCurrency_Letter
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Letter>("TransactionCurrency_Letter", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Letter");
				this.SetRelatedEntities<Insight.Intake.Letter>("TransactionCurrency_Letter", null, value);
				this.OnPropertyChanged("TransactionCurrency_Letter");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_PhoneCall
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_PhoneCall")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PhoneCall> TransactionCurrency_PhoneCall
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PhoneCall>("TransactionCurrency_PhoneCall", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_PhoneCall");
				this.SetRelatedEntities<Insight.Intake.PhoneCall>("TransactionCurrency_PhoneCall", null, value);
				this.OnPropertyChanged("TransactionCurrency_PhoneCall");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_position
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_position")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Position> transactioncurrency_position
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Position>("transactioncurrency_position", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_position");
				this.SetRelatedEntities<Insight.Intake.Position>("transactioncurrency_position", null, value);
				this.OnPropertyChanged("transactioncurrency_position");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_pricelevel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_pricelevel")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PriceLevel> transactioncurrency_pricelevel
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PriceLevel>("transactioncurrency_pricelevel", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_pricelevel");
				this.SetRelatedEntities<Insight.Intake.PriceLevel>("transactioncurrency_pricelevel", null, value);
				this.OnPropertyChanged("transactioncurrency_pricelevel");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_product
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_product")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Product> transactioncurrency_product
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Product>("transactioncurrency_product", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_product");
				this.SetRelatedEntities<Insight.Intake.Product>("transactioncurrency_product", null, value);
				this.OnPropertyChanged("transactioncurrency_product");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_ProductAssociation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_ProductAssociation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ProductAssociation> transactioncurrency_ProductAssociation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ProductAssociation>("transactioncurrency_ProductAssociation", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_ProductAssociation");
				this.SetRelatedEntities<Insight.Intake.ProductAssociation>("transactioncurrency_ProductAssociation", null, value);
				this.OnPropertyChanged("transactioncurrency_ProductAssociation");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_productpricelevel
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_productpricelevel")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ProductPriceLevel> transactioncurrency_productpricelevel
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ProductPriceLevel>("transactioncurrency_productpricelevel", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_productpricelevel");
				this.SetRelatedEntities<Insight.Intake.ProductPriceLevel>("transactioncurrency_productpricelevel", null, value);
				this.OnPropertyChanged("transactioncurrency_productpricelevel");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_ProductSubstitute
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_ProductSubstitute")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ProductSubstitute> transactioncurrency_ProductSubstitute
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ProductSubstitute>("transactioncurrency_ProductSubstitute", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_ProductSubstitute");
				this.SetRelatedEntities<Insight.Intake.ProductSubstitute>("transactioncurrency_ProductSubstitute", null, value);
				this.OnPropertyChanged("transactioncurrency_ProductSubstitute");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_quarterlyfiscalcalendar
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quarterlyfiscalcalendar")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QuarterlyFiscalCalendar> transactioncurrency_quarterlyfiscalcalendar
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QuarterlyFiscalCalendar>("transactioncurrency_quarterlyfiscalcalendar", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_quarterlyfiscalcalendar");
				this.SetRelatedEntities<Insight.Intake.QuarterlyFiscalCalendar>("transactioncurrency_quarterlyfiscalcalendar", null, value);
				this.OnPropertyChanged("transactioncurrency_quarterlyfiscalcalendar");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Queue
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Queue")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Queue> TransactionCurrency_Queue
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Queue>("TransactionCurrency_Queue", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Queue");
				this.SetRelatedEntities<Insight.Intake.Queue>("TransactionCurrency_Queue", null, value);
				this.OnPropertyChanged("TransactionCurrency_Queue");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_QueueItem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QueueItem> TransactionCurrency_QueueItem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QueueItem>("TransactionCurrency_QueueItem", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_QueueItem");
				this.SetRelatedEntities<Insight.Intake.QueueItem>("TransactionCurrency_QueueItem", null, value);
				this.OnPropertyChanged("TransactionCurrency_QueueItem");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_quote
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quote")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Quote> transactioncurrency_quote
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Quote>("transactioncurrency_quote", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_quote");
				this.SetRelatedEntities<Insight.Intake.Quote>("transactioncurrency_quote", null, value);
				this.OnPropertyChanged("transactioncurrency_quote");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_quotedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quotedetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QuoteDetail> transactioncurrency_quotedetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QuoteDetail>("transactioncurrency_quotedetail", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_quotedetail");
				this.SetRelatedEntities<Insight.Intake.QuoteDetail>("transactioncurrency_quotedetail", null, value);
				this.OnPropertyChanged("transactioncurrency_quotedetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_RecurringAppointmentMaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_RecurringAppointmentMaster")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.RecurringAppointmentMaster> TransactionCurrency_RecurringAppointmentMaster
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_RecurringAppointmentMaster");
				this.SetRelatedEntities<Insight.Intake.RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null, value);
				this.OnPropertyChanged("TransactionCurrency_RecurringAppointmentMaster");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_salesorder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_salesorder")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SalesOrder> transactioncurrency_salesorder
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SalesOrder>("transactioncurrency_salesorder", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_salesorder");
				this.SetRelatedEntities<Insight.Intake.SalesOrder>("transactioncurrency_salesorder", null, value);
				this.OnPropertyChanged("transactioncurrency_salesorder");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_salesorderdetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_salesorderdetail")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SalesOrderDetail> transactioncurrency_salesorderdetail
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SalesOrderDetail>("transactioncurrency_salesorderdetail", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_salesorderdetail");
				this.SetRelatedEntities<Insight.Intake.SalesOrderDetail>("transactioncurrency_salesorderdetail", null, value);
				this.OnPropertyChanged("transactioncurrency_salesorderdetail");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_ServiceAppointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ServiceAppointment")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ServiceAppointment> TransactionCurrency_ServiceAppointment
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ServiceAppointment>("TransactionCurrency_ServiceAppointment", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ServiceAppointment");
				this.SetRelatedEntities<Insight.Intake.ServiceAppointment>("TransactionCurrency_ServiceAppointment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ServiceAppointment");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SLA
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SLA")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SLA> TransactionCurrency_SLA
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SLA>("TransactionCurrency_SLA", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SLA");
				this.SetRelatedEntities<Insight.Intake.SLA>("TransactionCurrency_SLA", null, value);
				this.OnPropertyChanged("TransactionCurrency_SLA");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SLAItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SLAItem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SLAItem> TransactionCurrency_SLAItem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SLAItem>("TransactionCurrency_SLAItem", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SLAItem");
				this.SetRelatedEntities<Insight.Intake.SLAItem>("TransactionCurrency_SLAItem", null, value);
				this.OnPropertyChanged("TransactionCurrency_SLAItem");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_slakpiinstance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_slakpiinstance")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SLAKPIInstance> TransactionCurrency_slakpiinstance
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SLAKPIInstance>("TransactionCurrency_slakpiinstance", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_slakpiinstance");
				this.SetRelatedEntities<Insight.Intake.SLAKPIInstance>("TransactionCurrency_slakpiinstance", null, value);
				this.OnPropertyChanged("TransactionCurrency_slakpiinstance");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_SystemUser
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SystemUser")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SystemUser> TransactionCurrency_SystemUser
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SystemUser>("TransactionCurrency_SystemUser", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_SystemUser");
				this.SetRelatedEntities<Insight.Intake.SystemUser>("TransactionCurrency_SystemUser", null, value);
				this.OnPropertyChanged("TransactionCurrency_SystemUser");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Task
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Task")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Task> TransactionCurrency_Task
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Task>("TransactionCurrency_Task", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Task");
				this.SetRelatedEntities<Insight.Intake.Task>("TransactionCurrency_Task", null, value);
				this.OnPropertyChanged("TransactionCurrency_Task");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_Team
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Team")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Team> TransactionCurrency_Team
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Team>("TransactionCurrency_Team", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Team");
				this.SetRelatedEntities<Insight.Intake.Team>("TransactionCurrency_Team", null, value);
				this.OnPropertyChanged("TransactionCurrency_Team");
			}
		}
		
		/// <summary>
		/// 1:N TransactionCurrency_UserMapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_UserMapping")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.UserMapping> TransactionCurrency_UserMapping
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.UserMapping>("TransactionCurrency_UserMapping", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_UserMapping");
				this.SetRelatedEntities<Insight.Intake.UserMapping>("TransactionCurrency_UserMapping", null, value);
				this.OnPropertyChanged("TransactionCurrency_UserMapping");
			}
		}
		
		/// <summary>
		/// 1:N transactioncurrency_usersettings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_usersettings")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.UserSettings> transactioncurrency_usersettings
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.UserSettings>("transactioncurrency_usersettings", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_usersettings");
				this.SetRelatedEntities<Insight.Intake.UserSettings>("transactioncurrency_usersettings", null, value);
				this.OnPropertyChanged("transactioncurrency_usersettings");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrency_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_transactioncurrency_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_transactioncurrency_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_transactioncurrency_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_transactioncurrency_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_transactioncurrency_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrency_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_transactioncurrency_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_transactioncurrency_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_transactioncurrency_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrencybase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_createdby")]
		public Insight.Intake.SystemUser lk_transactioncurrencybase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_transactioncurrencybase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_transactioncurrencybase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_modifiedby")]
		public Insight.Intake.SystemUser lk_transactioncurrencybase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_transactioncurrencybase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public TransactionCurrency(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["transactioncurrencyid"] = base.Id;
                        break;
                    case "transactioncurrencyid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}