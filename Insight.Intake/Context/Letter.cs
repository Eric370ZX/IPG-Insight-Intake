//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public enum LetterState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
	}
	
	/// <summary>
	/// Activity that tracks the delivery of a letter. The activity can contain the electronic copy of the letter.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("letter")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.45")]
	public partial class Letter : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Address = "address";
			public const string Bcc = "bcc";
			public const string Category = "category";
			public const string Cc = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string DirectionCode = "directioncode";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OnHoldTime = "onholdtime";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PriorityCode = "prioritycode";
			public const string ProcessId = "processid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string To = "to";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Account_Letters = "Account_Letters";
			public const string activity_pointer_letter = "activity_pointer_letter";
			public const string business_unit_letter_activities = "business_unit_letter_activities";
			public const string Contact_Letters = "Contact_Letters";
			public const string entitlement_Letters = "entitlement_Letters";
			public const string entitlementtemplate_Letters = "entitlementtemplate_Letters";
			public const string Incident_Letters = "Incident_Letters";
			public const string Invoice_Letters = "Invoice_Letters";
			public const string ipg_claimresponseheader_Letters = "ipg_claimresponseheader_Letters";
			public const string ipg_cptcode_Letters = "ipg_cptcode_Letters";
			public const string ipg_document_Letters = "ipg_document_Letters";
			public const string ipg_ehrstaging_Letters = "ipg_ehrstaging_Letters";
			public const string ipg_patientpaymentnotification_Letters = "ipg_patientpaymentnotification_Letters";
			public const string ipg_procedurename_Letters = "ipg_procedurename_Letters";
			public const string ipg_referral_Letters = "ipg_referral_Letters";
			public const string KnowledgeArticle_Letters = "KnowledgeArticle_Letters";
			public const string KnowledgeBaseRecord_Letters = "KnowledgeBaseRecord_Letters";
			public const string Lead_Letters = "Lead_Letters";
			public const string lk_letter_createdby = "lk_letter_createdby";
			public const string lk_letter_createdonbehalfby = "lk_letter_createdonbehalfby";
			public const string lk_letter_modifiedby = "lk_letter_modifiedby";
			public const string lk_letter_modifiedonbehalfby = "lk_letter_modifiedonbehalfby";
			public const string manualsla_letter = "manualsla_letter";
			public const string Quote_Letters = "Quote_Letters";
			public const string SalesOrder_Letters = "SalesOrder_Letters";
			public const string service_letters = "service_letters";
			public const string sla_letter = "sla_letter";
			public const string team_letter = "team_letter";
			public const string TransactionCurrency_Letter = "TransactionCurrency_Letter";
			public const string user_letter = "user_letter";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Letter() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "letter";
		
		public const string EntitySchemaName = "Letter";
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the letter activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Shows the type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Type the number of minutes spent creating and sending the letter. The duration is used in reporting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			set
			{
				this.OnPropertyChanging("ActualDurationMinutes");
				this.SetAttributeValue("actualdurationminutes", value);
				this.OnPropertyChanged("ActualDurationMinutes");
			}
		}
		
		/// <summary>
		/// Enter the actual end date and time of the letter. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			set
			{
				this.OnPropertyChanging("ActualEnd");
				this.SetAttributeValue("actualend", value);
				this.OnPropertyChanged("ActualEnd");
			}
		}
		
		/// <summary>
		/// Enter the actual start date and time for the letter. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			set
			{
				this.OnPropertyChanging("ActualStart");
				this.SetAttributeValue("actualstart", value);
				this.OnPropertyChanged("ActualStart");
			}
		}
		
		/// <summary>
		/// Type the complete recipient address for the letter to ensure timely delivery.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address")]
		public string Address
		{
			get
			{
				return this.GetAttributeValue<string>("address");
			}
			set
			{
				this.OnPropertyChanging("Address");
				this.SetAttributeValue("address", value);
				this.OnPropertyChanged("Address");
			}
		}
		
		/// <summary>
		/// Enter the recipients that are included in the letter distribution, but are not displayed to other recipients.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> Bcc
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Bcc");
				if ((value == null))
				{
					this.SetAttributeValue("bcc", value);
				}
				else
				{
					this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Bcc");
			}
		}
		
		/// <summary>
		/// Type a category to identify the letter type, such as sales offer or past due notice, to tie the letter to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			set
			{
				this.OnPropertyChanging("Category");
				this.SetAttributeValue("category", value);
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Enter the recipients that should be copied on the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> Cc
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Cc");
				if ((value == null))
				{
					this.SetAttributeValue("cc", value);
				}
				else
				{
					this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Cc");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Type the letter body or additional information to describe the letter, such as the primary message or the products and services described.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Select the direction of the letter as incoming or outbound.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("directioncode")]
		public System.Nullable<bool> DirectionCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("directioncode");
			}
			set
			{
				this.OnPropertyChanging("DirectionCode");
				this.SetAttributeValue("directioncode", value);
				this.OnPropertyChanged("DirectionCode");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, or user who sent the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> From
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("From");
				if ((value == null))
				{
					this.SetAttributeValue("from", value);
				}
				else
				{
					this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("From");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows whether the letter activity was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			set
			{
				this.OnPropertyChanging("IsBilled");
				this.SetAttributeValue("isbilled", value);
				this.OnPropertyChanged("IsBilled");
			}
		}
		
		/// <summary>
		/// Shows whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// Shows whether the letter activity was created by a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			set
			{
				this.OnPropertyChanging("IsWorkflowCreated");
				this.SetAttributeValue("isworkflowcreated", value);
				this.OnPropertyChanged("IsWorkflowCreated");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the letter activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team that owns the letter activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user that owns the letter activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual Letter_PriorityCode? PriorityCodeEnum
		{
			get
			{
				return ((Letter_PriorityCode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Choose the record that the letter relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Scheduled duration of the letter activity, specified in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			set
			{
				this.OnPropertyChanging("ScheduledEnd");
				this.SetAttributeValue("scheduledend", value);
				this.OnPropertyChanged("ScheduledEnd");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			set
			{
				this.OnPropertyChanging("ScheduledStart");
				this.SetAttributeValue("scheduledstart", value);
				this.OnPropertyChanged("ScheduledStart");
			}
		}
		
		/// <summary>
		/// Unique identifier for an associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Letter record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this Letter. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			set
			{
				this.OnPropertyChanging("SortDate");
				this.SetAttributeValue("sortdate", value);
				this.OnPropertyChanged("SortDate");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the letter is open, completed, or canceled. Completed and canceled letters are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.LetterState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.LetterState)(System.Enum.ToObject(typeof(Insight.Intake.LetterState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the letter's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select the letter's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Letter_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((Letter_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the letter type and relate the activity to a specific product, sales region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			set
			{
				this.OnPropertyChanging("Subcategory");
				this.SetAttributeValue("subcategory", value);
				this.OnPropertyChanged("Subcategory");
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("subject", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			set
			{
				this.OnPropertyChanging("SubscriptionId");
				this.SetAttributeValue("subscriptionid", value);
				this.OnPropertyChanged("SubscriptionId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, or user recipients for the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> To
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, Insight.Intake.ActivityParty>(collection.Entities, e => e.ToEntity<Insight.Intake.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("To");
				if ((value == null))
				{
					this.SetAttributeValue("to", value);
				}
				else
				{
					this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("To");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the letter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N letter_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("letter_activity_parties")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.ActivityParty> letter_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.ActivityParty>("letter_activity_parties", null);
			}
			set
			{
				this.OnPropertyChanging("letter_activity_parties");
				this.SetRelatedEntities<Insight.Intake.ActivityParty>("letter_activity_parties", null, value);
				this.OnPropertyChanged("letter_activity_parties");
			}
		}
		
		/// <summary>
		/// 1:N Letter_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Letter_Annotation")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.Annotation> Letter_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.Annotation>("Letter_Annotation", null);
			}
			set
			{
				this.OnPropertyChanging("Letter_Annotation");
				this.SetRelatedEntities<Insight.Intake.Annotation>("Letter_Annotation", null, value);
				this.OnPropertyChanged("Letter_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N Letter_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Letter_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.AsyncOperation> Letter_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.AsyncOperation>("Letter_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("Letter_AsyncOperations");
				this.SetRelatedEntities<Insight.Intake.AsyncOperation>("Letter_AsyncOperations", null, value);
				this.OnPropertyChanged("Letter_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N Letter_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Letter_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> Letter_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("Letter_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("Letter_DuplicateBaseRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("Letter_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("Letter_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N Letter_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Letter_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.DuplicateRecord> Letter_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.DuplicateRecord>("Letter_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("Letter_DuplicateMatchingRecord");
				this.SetRelatedEntities<Insight.Intake.DuplicateRecord>("Letter_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("Letter_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N letter_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("letter_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.PrincipalObjectAttributeAccess> letter_principalobjectattributeaccess
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("letter_principalobjectattributeaccess", null);
			}
			set
			{
				this.OnPropertyChanging("letter_principalobjectattributeaccess");
				this.SetRelatedEntities<Insight.Intake.PrincipalObjectAttributeAccess>("letter_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("letter_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N Letter_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Letter_QueueItem")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.QueueItem> Letter_QueueItem
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.QueueItem>("Letter_QueueItem", null);
			}
			set
			{
				this.OnPropertyChanging("Letter_QueueItem");
				this.SetRelatedEntities<Insight.Intake.QueueItem>("Letter_QueueItem", null, value);
				this.OnPropertyChanged("Letter_QueueItem");
			}
		}
		
		/// <summary>
		/// 1:N slakpiinstance_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_letter")]
		public System.Collections.Generic.IEnumerable<Insight.Intake.SLAKPIInstance> slakpiinstance_letter
		{
			get
			{
				return this.GetRelatedEntities<Insight.Intake.SLAKPIInstance>("slakpiinstance_letter", null);
			}
			set
			{
				this.OnPropertyChanging("slakpiinstance_letter");
				this.SetRelatedEntities<Insight.Intake.SLAKPIInstance>("slakpiinstance_letter", null, value);
				this.OnPropertyChanged("slakpiinstance_letter");
			}
		}
		
		/// <summary>
		/// N:1 Account_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Letters")]
		public Insight.Intake.Account Account_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Account>("Account_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("Account_Letters");
				this.SetRelatedEntity<Insight.Intake.Account>("Account_Letters", null, value);
				this.OnPropertyChanged("Account_Letters");
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_letter")]
		public Insight.Intake.ActivityPointer activity_pointer_letter
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ActivityPointer>("activity_pointer_letter", null);
			}
			set
			{
				this.OnPropertyChanging("activity_pointer_letter");
				this.SetRelatedEntity<Insight.Intake.ActivityPointer>("activity_pointer_letter", null, value);
				this.OnPropertyChanged("activity_pointer_letter");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_letter_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_letter_activities")]
		public Insight.Intake.BusinessUnit business_unit_letter_activities
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.BusinessUnit>("business_unit_letter_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Letters")]
		public Insight.Intake.Contact Contact_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Contact>("Contact_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("Contact_Letters");
				this.SetRelatedEntity<Insight.Intake.Contact>("Contact_Letters", null, value);
				this.OnPropertyChanged("Contact_Letters");
			}
		}
		
		/// <summary>
		/// N:1 entitlement_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_Letters")]
		public Insight.Intake.Entitlement entitlement_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Entitlement>("entitlement_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("entitlement_Letters");
				this.SetRelatedEntity<Insight.Intake.Entitlement>("entitlement_Letters", null, value);
				this.OnPropertyChanged("entitlement_Letters");
			}
		}
		
		/// <summary>
		/// N:1 entitlementtemplate_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementtemplate_Letters")]
		public Insight.Intake.EntitlementTemplate entitlementtemplate_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.EntitlementTemplate>("entitlementtemplate_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("entitlementtemplate_Letters");
				this.SetRelatedEntity<Insight.Intake.EntitlementTemplate>("entitlementtemplate_Letters", null, value);
				this.OnPropertyChanged("entitlementtemplate_Letters");
			}
		}
		
		/// <summary>
		/// N:1 Incident_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Letters")]
		public Insight.Intake.Incident Incident_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Incident>("Incident_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("Incident_Letters");
				this.SetRelatedEntity<Insight.Intake.Incident>("Incident_Letters", null, value);
				this.OnPropertyChanged("Incident_Letters");
			}
		}
		
		/// <summary>
		/// N:1 Invoice_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Invoice_Letters")]
		public Insight.Intake.Invoice Invoice_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Invoice>("Invoice_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("Invoice_Letters");
				this.SetRelatedEntity<Insight.Intake.Invoice>("Invoice_Letters", null, value);
				this.OnPropertyChanged("Invoice_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_claimresponseheader_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_claimresponseheader_Letters")]
		public Insight.Intake.ipg_claimresponseheader ipg_claimresponseheader_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_claimresponseheader>("ipg_claimresponseheader_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_claimresponseheader_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_claimresponseheader>("ipg_claimresponseheader_Letters", null, value);
				this.OnPropertyChanged("ipg_claimresponseheader_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_cptcode_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_cptcode_Letters")]
		public Insight.Intake.ipg_cptcode ipg_cptcode_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_cptcode>("ipg_cptcode_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_cptcode_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_cptcode>("ipg_cptcode_Letters", null, value);
				this.OnPropertyChanged("ipg_cptcode_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_document_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_document_Letters")]
		public Insight.Intake.ipg_document ipg_document_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_document>("ipg_document_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_document_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_document>("ipg_document_Letters", null, value);
				this.OnPropertyChanged("ipg_document_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_ehrstaging_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_ehrstaging_Letters")]
		public Insight.Intake.ipg_EHRstaging ipg_ehrstaging_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_EHRstaging>("ipg_ehrstaging_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_ehrstaging_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_EHRstaging>("ipg_ehrstaging_Letters", null, value);
				this.OnPropertyChanged("ipg_ehrstaging_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_patientpaymentnotification_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_patientpaymentnotification_Letters")]
		public Insight.Intake.ipg_patientpaymentnotification ipg_patientpaymentnotification_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_patientpaymentnotification>("ipg_patientpaymentnotification_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_patientpaymentnotification_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_patientpaymentnotification>("ipg_patientpaymentnotification_Letters", null, value);
				this.OnPropertyChanged("ipg_patientpaymentnotification_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_procedurename_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_procedurename_Letters")]
		public Insight.Intake.ipg_procedurename ipg_procedurename_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_procedurename>("ipg_procedurename_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_procedurename_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_procedurename>("ipg_procedurename_Letters", null, value);
				this.OnPropertyChanged("ipg_procedurename_Letters");
			}
		}
		
		/// <summary>
		/// N:1 ipg_referral_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ipg_referral_Letters")]
		public Insight.Intake.ipg_referral ipg_referral_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.ipg_referral>("ipg_referral_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("ipg_referral_Letters");
				this.SetRelatedEntity<Insight.Intake.ipg_referral>("ipg_referral_Letters", null, value);
				this.OnPropertyChanged("ipg_referral_Letters");
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeArticle_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeArticle_Letters")]
		public Insight.Intake.KnowledgeArticle KnowledgeArticle_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.KnowledgeArticle>("KnowledgeArticle_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("KnowledgeArticle_Letters");
				this.SetRelatedEntity<Insight.Intake.KnowledgeArticle>("KnowledgeArticle_Letters", null, value);
				this.OnPropertyChanged("KnowledgeArticle_Letters");
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeBaseRecord_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Letters")]
		public Insight.Intake.KnowledgeBaseRecord KnowledgeBaseRecord_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.KnowledgeBaseRecord>("KnowledgeBaseRecord_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("KnowledgeBaseRecord_Letters");
				this.SetRelatedEntity<Insight.Intake.KnowledgeBaseRecord>("KnowledgeBaseRecord_Letters", null, value);
				this.OnPropertyChanged("KnowledgeBaseRecord_Letters");
			}
		}
		
		/// <summary>
		/// N:1 Lead_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_Letters")]
		public Insight.Intake.Lead Lead_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Lead>("Lead_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("Lead_Letters");
				this.SetRelatedEntity<Insight.Intake.Lead>("Lead_Letters", null, value);
				this.OnPropertyChanged("Lead_Letters");
			}
		}
		
		/// <summary>
		/// N:1 lk_letter_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_letter_createdby")]
		public Insight.Intake.SystemUser lk_letter_createdby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_letter_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_letter_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_letter_createdonbehalfby")]
		public Insight.Intake.SystemUser lk_letter_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_letter_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_letter_createdonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_letter_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_letter_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_letter_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_letter_modifiedby")]
		public Insight.Intake.SystemUser lk_letter_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_letter_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_letter_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_letter_modifiedonbehalfby")]
		public Insight.Intake.SystemUser lk_letter_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("lk_letter_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_letter_modifiedonbehalfby");
				this.SetRelatedEntity<Insight.Intake.SystemUser>("lk_letter_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_letter_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 manualsla_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("manualsla_letter")]
		public Insight.Intake.SLA manualsla_letter
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SLA>("manualsla_letter", null);
			}
			set
			{
				this.OnPropertyChanging("manualsla_letter");
				this.SetRelatedEntity<Insight.Intake.SLA>("manualsla_letter", null, value);
				this.OnPropertyChanged("manualsla_letter");
			}
		}
		
		/// <summary>
		/// N:1 Quote_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_Letters")]
		public Insight.Intake.Quote Quote_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Quote>("Quote_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("Quote_Letters");
				this.SetRelatedEntity<Insight.Intake.Quote>("Quote_Letters", null, value);
				this.OnPropertyChanged("Quote_Letters");
			}
		}
		
		/// <summary>
		/// N:1 SalesOrder_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SalesOrder_Letters")]
		public Insight.Intake.SalesOrder SalesOrder_Letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SalesOrder>("SalesOrder_Letters", null);
			}
			set
			{
				this.OnPropertyChanging("SalesOrder_Letters");
				this.SetRelatedEntity<Insight.Intake.SalesOrder>("SalesOrder_Letters", null, value);
				this.OnPropertyChanged("SalesOrder_Letters");
			}
		}
		
		/// <summary>
		/// N:1 service_letters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_letters")]
		public Insight.Intake.Service service_letters
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Service>("service_letters", null);
			}
			set
			{
				this.OnPropertyChanging("service_letters");
				this.SetRelatedEntity<Insight.Intake.Service>("service_letters", null, value);
				this.OnPropertyChanged("service_letters");
			}
		}
		
		/// <summary>
		/// N:1 sla_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("sla_letter")]
		public Insight.Intake.SLA sla_letter
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SLA>("sla_letter", null);
			}
		}
		
		/// <summary>
		/// N:1 team_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_letter")]
		public Insight.Intake.Team team_letter
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.Team>("team_letter", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Letter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Letter")]
		public Insight.Intake.TransactionCurrency TransactionCurrency_Letter
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_Letter", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Letter");
				this.SetRelatedEntity<Insight.Intake.TransactionCurrency>("TransactionCurrency_Letter", null, value);
				this.OnPropertyChanged("TransactionCurrency_Letter");
			}
		}
		
		/// <summary>
		/// N:1 user_letter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_letter")]
		public Insight.Intake.SystemUser user_letter
		{
			get
			{
				return this.GetRelatedEntity<Insight.Intake.SystemUser>("user_letter", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Letter(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}