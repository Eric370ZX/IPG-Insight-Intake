//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------


namespace Insight.Intake
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ipg_benefitState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ipg_benefit")]
	public partial class ipg_benefit : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ipg_benefitId = "ipg_benefitid";
			public const string Id = "ipg_benefitid";
			public const string ipg_BenefitSource = "ipg_benefitsource";
			public const string ipg_BenefitType = "ipg_benefittype";
			public const string ipg_CarrierCoinsurance = "ipg_carriercoinsurance";
			public const string ipg_CarrierId = "ipg_carrierid";
			public const string ipg_CaseId = "ipg_caseid";
			public const string ipg_CoinsuranceBenefitSource = "ipg_coinsurancebenefitsource";
			public const string ipg_CoverageLevel = "ipg_coveragelevel";
			public const string ipg_Deductible = "ipg_deductible";
			public const string ipg_deductible_Base = "ipg_deductible_base";
			public const string ipg_DeductibleMet = "ipg_deductiblemet";
			public const string ipg_deductiblemet_Base = "ipg_deductiblemet_base";
			public const string ipg_DeductibleRemainingCalculated = "ipg_deductibleremainingcalculated";
			public const string ipg_deductibleremainingcalculated_Base = "ipg_deductibleremainingcalculated_base";
			public const string ipg_EligibilityEndDate = "ipg_eligibilityenddate";
			public const string ipg_EligibilityStartDate = "ipg_eligibilitystartdate";
			public const string ipg_externalid = "ipg_externalid";
			public const string ipg_FamilyCarrierCoinsurance = "ipg_familycarriercoinsurance";
			public const string ipg_FamilyDeductible = "ipg_familydeductible";
			public const string ipg_familydeductible_Base = "ipg_familydeductible_base";
			public const string ipg_FamilyDeductibleMet = "ipg_familydeductiblemet";
			public const string ipg_familydeductiblemet_Base = "ipg_familydeductiblemet_base";
			public const string ipg_FamilyDeductibleRemainingCalculated = "ipg_familydeductibleremainingcalculated";
			public const string ipg_familydeductibleremainingcalculated_Base = "ipg_familydeductibleremainingcalculated_base";
			public const string ipg_FamilyMemberCoinsurance = "ipg_familymembercoinsurance";
			public const string ipg_FamilyOOPMax = "ipg_familyoopmax";
			public const string ipg_familyoopmax_Base = "ipg_familyoopmax_base";
			public const string ipg_FamilyOOPMet = "ipg_familyoopmet";
			public const string ipg_familyoopmet_Base = "ipg_familyoopmet_base";
			public const string ipg_FamilyOOPRemainingCalculated = "ipg_familyoopremainingcalculated";
			public const string ipg_familyoopremainingcalculated_Base = "ipg_familyoopremainingcalculated_base";
			public const string ipg_GroupID = "ipg_groupid";
			public const string ipg_IndividualOrFamily = "ipg_individualorfamily";
			public const string ipg_InOutNetwork = "ipg_inoutnetwork";
			public const string ipg_insurancetype = "ipg_insurancetype";
			public const string ipg_IsDME = "ipg_isdme";
			public const string ipg_MemberCoinsurance = "ipg_membercoinsurance";
			public const string ipg_MemberID = "ipg_memberid";
			public const string ipg_MemberOOPMax = "ipg_memberoopmax";
			public const string ipg_memberoopmax_Base = "ipg_memberoopmax_base";
			public const string ipg_MemberOOPMet = "ipg_memberoopmet";
			public const string ipg_memberoopmet_Base = "ipg_memberoopmet_base";
			public const string ipg_MemberOOPRemainingCalculated = "ipg_memberoopremainingcalculated";
			public const string ipg_memberoopremainingcalculated_Base = "ipg_memberoopremainingcalculated_base";
			public const string ipg_name = "ipg_name";
			public const string ipg_ObtainedBy = "ipg_obtainedby";
			public const string ipg_patientid = "ipg_patientid";
			public const string ipg_PlanSponsor = "ipg_plansponsor";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ipg_benefit() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "ipg_benefit";
		
		public const string EntitySchemaName = "ipg_benefit";
		
		public const string PrimaryIdAttribute = "ipg_benefitid";
		
		public const string PrimaryNameAttribute = "ipg_name";
		
		public const string EntityLogicalCollectionName = "ipg_benefits";
		
		public const string EntitySetName = "ipg_benefits";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_benefitid")]
		public System.Nullable<System.Guid> ipg_benefitId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ipg_benefitid");
			}
			set
			{
				this.OnPropertyChanging("ipg_benefitId");
				this.SetAttributeValue("ipg_benefitid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ipg_benefitId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_benefitid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ipg_benefitId = value;
			}
		}
		
		/// <summary>
		/// Benefit source: EBV or BVF
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_benefitsource")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_BenefitSource
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_benefitsource");
			}
			set
			{
				this.OnPropertyChanging("ipg_BenefitSource");
				this.SetAttributeValue("ipg_benefitsource", value);
				this.OnPropertyChanged("ipg_BenefitSource");
			}
		}
		
		/// <summary>
		/// Benefit source: EBV or BVF
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_benefitsource")]
		public virtual ipg_BenefitSources? ipg_BenefitSourceEnum
		{
			get
			{
				return ((ipg_BenefitSources?)(EntityOptionSetEnum.GetEnum(this, "ipg_benefitsource")));
			}
			set
			{
				this.OnPropertyChanging("ipg_BenefitSource");
				this.SetAttributeValue("ipg_benefitsource", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_BenefitSource");
			}
		}
		
		/// <summary>
		/// Represents whether benefit General Health, DME, etc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_benefittype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_BenefitType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_benefittype");
			}
			set
			{
				this.OnPropertyChanging("ipg_BenefitType");
				this.SetAttributeValue("ipg_benefittype", value);
				this.OnPropertyChanged("ipg_BenefitType");
			}
		}
		
		/// <summary>
		/// Represents whether benefit General Health, DME, etc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_benefittype")]
		public virtual ipg_BenefitType? ipg_BenefitTypeEnum
		{
			get
			{
				return ((ipg_BenefitType?)(EntityOptionSetEnum.GetEnum(this, "ipg_benefittype")));
			}
			set
			{
				this.OnPropertyChanging("ipg_BenefitType");
				this.SetAttributeValue("ipg_benefittype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_BenefitType");
			}
		}
		
		/// <summary>
		/// Represents the percentage of carrier responsibility before OOP.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carriercoinsurance")]
		public System.Nullable<double> ipg_CarrierCoinsurance
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("ipg_carriercoinsurance");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarrierCoinsurance");
				this.SetAttributeValue("ipg_carriercoinsurance", value);
				this.OnPropertyChanged("ipg_CarrierCoinsurance");
			}
		}
		
		/// <summary>
		/// Carrier lookup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_carrierid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_CarrierId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_carrierid");
			}
			set
			{
				this.OnPropertyChanging("ipg_CarrierId");
				this.SetAttributeValue("ipg_carrierid", value);
				this.OnPropertyChanged("ipg_CarrierId");
			}
		}
		
		/// <summary>
		/// The case this benefit belongs to
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_caseid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_CaseId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_caseid");
			}
			set
			{
				this.OnPropertyChanging("ipg_CaseId");
				this.SetAttributeValue("ipg_caseid", value);
				this.OnPropertyChanged("ipg_CaseId");
			}
		}
		
		/// <summary>
		/// Source of Benefit Coinsurance: BVF or EBV
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_coinsurancebenefitsource")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_CoinsuranceBenefitSource
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_coinsurancebenefitsource");
			}
			set
			{
				this.OnPropertyChanging("ipg_CoinsuranceBenefitSource");
				this.SetAttributeValue("ipg_coinsurancebenefitsource", value);
				this.OnPropertyChanged("ipg_CoinsuranceBenefitSource");
			}
		}
		
		/// <summary>
		/// Source of Benefit Coinsurance: BVF or EBV
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_coinsurancebenefitsource")]
		public virtual ipg_BenefitSources? ipg_CoinsuranceBenefitSourceEnum
		{
			get
			{
				return ((ipg_BenefitSources?)(EntityOptionSetEnum.GetEnum(this, "ipg_coinsurancebenefitsource")));
			}
			set
			{
				this.OnPropertyChanging("ipg_CoinsuranceBenefitSource");
				this.SetAttributeValue("ipg_coinsurancebenefitsource", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_CoinsuranceBenefitSource");
			}
		}
		
		/// <summary>
		/// Coverage Level: individual or family.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_coveragelevel")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_CoverageLevel
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_coveragelevel");
			}
			set
			{
				this.OnPropertyChanging("ipg_CoverageLevel");
				this.SetAttributeValue("ipg_coveragelevel", value);
				this.OnPropertyChanged("ipg_CoverageLevel");
			}
		}
		
		/// <summary>
		/// Coverage Level: individual or family.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_coveragelevel")]
		public virtual ipg_BenefitCoverageLevels? ipg_CoverageLevelEnum
		{
			get
			{
				return ((ipg_BenefitCoverageLevels?)(EntityOptionSetEnum.GetEnum(this, "ipg_coveragelevel")));
			}
			set
			{
				this.OnPropertyChanging("ipg_CoverageLevel");
				this.SetAttributeValue("ipg_coveragelevel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_CoverageLevel");
			}
		}
		
		/// <summary>
		/// Represents benefit deductible for current contract
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deductible")]
		public Microsoft.Xrm.Sdk.Money ipg_Deductible
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_deductible");
			}
			set
			{
				this.OnPropertyChanging("ipg_Deductible");
				this.SetAttributeValue("ipg_deductible", value);
				this.OnPropertyChanged("ipg_Deductible");
			}
		}
		
		/// <summary>
		/// Value of the Deductible in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deductible_base")]
		public Microsoft.Xrm.Sdk.Money ipg_deductible_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_deductible_base");
			}
		}
		
		/// <summary>
		/// Represents deductible met during the contract
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deductiblemet")]
		public Microsoft.Xrm.Sdk.Money ipg_DeductibleMet
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_deductiblemet");
			}
			set
			{
				this.OnPropertyChanging("ipg_DeductibleMet");
				this.SetAttributeValue("ipg_deductiblemet", value);
				this.OnPropertyChanged("ipg_DeductibleMet");
			}
		}
		
		/// <summary>
		/// Value of the Deductible Met in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deductiblemet_base")]
		public Microsoft.Xrm.Sdk.Money ipg_deductiblemet_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_deductiblemet_base");
			}
		}
		
		/// <summary>
		/// Deductible Remaining
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deductibleremainingcalculated")]
		public Microsoft.Xrm.Sdk.Money ipg_DeductibleRemainingCalculated
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_deductibleremainingcalculated");
			}
			set
			{
				this.OnPropertyChanging("ipg_DeductibleRemainingCalculated");
				this.SetAttributeValue("ipg_deductibleremainingcalculated", value);
				this.OnPropertyChanged("ipg_DeductibleRemainingCalculated");
			}
		}
		
		/// <summary>
		/// Value of the Deductible Remaining in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_deductibleremainingcalculated_base")]
		public Microsoft.Xrm.Sdk.Money ipg_deductibleremainingcalculated_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_deductibleremainingcalculated_base");
			}
		}
		
		/// <summary>
		/// Represents when patient's benefit eligibility will expire
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_eligibilityenddate")]
		public System.Nullable<System.DateTime> ipg_EligibilityEndDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_eligibilityenddate");
			}
			set
			{
				this.OnPropertyChanging("ipg_EligibilityEndDate");
				this.SetAttributeValue("ipg_eligibilityenddate", value);
				this.OnPropertyChanged("ipg_EligibilityEndDate");
			}
		}
		
		/// <summary>
		/// Represents patient started being eligible for benefits
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_eligibilitystartdate")]
		public System.Nullable<System.DateTime> ipg_EligibilityStartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ipg_eligibilitystartdate");
			}
			set
			{
				this.OnPropertyChanging("ipg_EligibilityStartDate");
				this.SetAttributeValue("ipg_eligibilitystartdate", value);
				this.OnPropertyChanged("ipg_EligibilityStartDate");
			}
		}
		
		/// <summary>
		/// Represents combination of benefit type and patient procedure id in the legacy system.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_externalid")]
		public string ipg_externalid
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_externalid");
			}
			set
			{
				this.OnPropertyChanging("ipg_externalid");
				this.SetAttributeValue("ipg_externalid", value);
				this.OnPropertyChanged("ipg_externalid");
			}
		}
		
		/// <summary>
		/// Family Carrier Coinsurance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familycarriercoinsurance")]
		public System.Nullable<decimal> ipg_FamilyCarrierCoinsurance
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ipg_familycarriercoinsurance");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyCarrierCoinsurance");
				this.SetAttributeValue("ipg_familycarriercoinsurance", value);
				this.OnPropertyChanged("ipg_FamilyCarrierCoinsurance");
			}
		}
		
		/// <summary>
		/// Family Deductible amount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familydeductible")]
		public Microsoft.Xrm.Sdk.Money ipg_FamilyDeductible
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familydeductible");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyDeductible");
				this.SetAttributeValue("ipg_familydeductible", value);
				this.OnPropertyChanged("ipg_FamilyDeductible");
			}
		}
		
		/// <summary>
		/// Value of the Family Deductible in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familydeductible_base")]
		public Microsoft.Xrm.Sdk.Money ipg_familydeductible_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familydeductible_base");
			}
			set
			{
				this.OnPropertyChanging("ipg_familydeductible_Base");
				this.SetAttributeValue("ipg_familydeductible_base", value);
				this.OnPropertyChanged("ipg_familydeductible_Base");
			}
		}
		
		/// <summary>
		/// Family Deductible Met amount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familydeductiblemet")]
		public Microsoft.Xrm.Sdk.Money ipg_FamilyDeductibleMet
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familydeductiblemet");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyDeductibleMet");
				this.SetAttributeValue("ipg_familydeductiblemet", value);
				this.OnPropertyChanged("ipg_FamilyDeductibleMet");
			}
		}
		
		/// <summary>
		/// Value of the Family Deductible Met in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familydeductiblemet_base")]
		public Microsoft.Xrm.Sdk.Money ipg_familydeductiblemet_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familydeductiblemet_base");
			}
			set
			{
				this.OnPropertyChanging("ipg_familydeductiblemet_Base");
				this.SetAttributeValue("ipg_familydeductiblemet_base", value);
				this.OnPropertyChanged("ipg_familydeductiblemet_Base");
			}
		}
		
		/// <summary>
		/// Family Deductible Remaining amount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familydeductibleremainingcalculated")]
		public Microsoft.Xrm.Sdk.Money ipg_FamilyDeductibleRemainingCalculated
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familydeductibleremainingcalculated");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyDeductibleRemainingCalculated");
				this.SetAttributeValue("ipg_familydeductibleremainingcalculated", value);
				this.OnPropertyChanged("ipg_FamilyDeductibleRemainingCalculated");
			}
		}
		
		/// <summary>
		/// Value of the Family Deductible Remaining in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familydeductibleremainingcalculated_base")]
		public Microsoft.Xrm.Sdk.Money ipg_familydeductibleremainingcalculated_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familydeductibleremainingcalculated_base");
			}
			set
			{
				this.OnPropertyChanging("ipg_familydeductibleremainingcalculated_Base");
				this.SetAttributeValue("ipg_familydeductibleremainingcalculated_base", value);
				this.OnPropertyChanged("ipg_familydeductibleremainingcalculated_Base");
			}
		}
		
		/// <summary>
		/// Family Member Coinsurance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familymembercoinsurance")]
		public System.Nullable<decimal> ipg_FamilyMemberCoinsurance
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ipg_familymembercoinsurance");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyMemberCoinsurance");
				this.SetAttributeValue("ipg_familymembercoinsurance", value);
				this.OnPropertyChanged("ipg_FamilyMemberCoinsurance");
			}
		}
		
		/// <summary>
		/// Family OOP Max amount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familyoopmax")]
		public Microsoft.Xrm.Sdk.Money ipg_FamilyOOPMax
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familyoopmax");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyOOPMax");
				this.SetAttributeValue("ipg_familyoopmax", value);
				this.OnPropertyChanged("ipg_FamilyOOPMax");
			}
		}
		
		/// <summary>
		/// Value of the Family OOP Max in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familyoopmax_base")]
		public Microsoft.Xrm.Sdk.Money ipg_familyoopmax_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familyoopmax_base");
			}
			set
			{
				this.OnPropertyChanging("ipg_familyoopmax_Base");
				this.SetAttributeValue("ipg_familyoopmax_base", value);
				this.OnPropertyChanged("ipg_familyoopmax_Base");
			}
		}
		
		/// <summary>
		/// Family OOP Met amount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familyoopmet")]
		public Microsoft.Xrm.Sdk.Money ipg_FamilyOOPMet
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familyoopmet");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyOOPMet");
				this.SetAttributeValue("ipg_familyoopmet", value);
				this.OnPropertyChanged("ipg_FamilyOOPMet");
			}
		}
		
		/// <summary>
		/// Value of the Family OOP Met in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familyoopmet_base")]
		public Microsoft.Xrm.Sdk.Money ipg_familyoopmet_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familyoopmet_base");
			}
			set
			{
				this.OnPropertyChanging("ipg_familyoopmet_Base");
				this.SetAttributeValue("ipg_familyoopmet_base", value);
				this.OnPropertyChanged("ipg_familyoopmet_Base");
			}
		}
		
		/// <summary>
		/// Family OOP Remaining amount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familyoopremainingcalculated")]
		public Microsoft.Xrm.Sdk.Money ipg_FamilyOOPRemainingCalculated
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familyoopremainingcalculated");
			}
			set
			{
				this.OnPropertyChanging("ipg_FamilyOOPRemainingCalculated");
				this.SetAttributeValue("ipg_familyoopremainingcalculated", value);
				this.OnPropertyChanged("ipg_FamilyOOPRemainingCalculated");
			}
		}
		
		/// <summary>
		/// Value of the Family OOP Remaining in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_familyoopremainingcalculated_base")]
		public Microsoft.Xrm.Sdk.Money ipg_familyoopremainingcalculated_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_familyoopremainingcalculated_base");
			}
			set
			{
				this.OnPropertyChanging("ipg_familyoopremainingcalculated_Base");
				this.SetAttributeValue("ipg_familyoopremainingcalculated_base", value);
				this.OnPropertyChanged("ipg_familyoopremainingcalculated_Base");
			}
		}
		
		/// <summary>
		/// Represents benefit group id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_groupid")]
		public string ipg_GroupID
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_groupid");
			}
			set
			{
				this.OnPropertyChanging("ipg_GroupID");
				this.SetAttributeValue("ipg_groupid", value);
				this.OnPropertyChanged("ipg_GroupID");
			}
		}
		
		/// <summary>
		/// [Deprecated. User Coverage Level instead] Individual or Family benefit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_individualorfamily")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_IndividualOrFamily
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_individualorfamily");
			}
			set
			{
				this.OnPropertyChanging("ipg_IndividualOrFamily");
				this.SetAttributeValue("ipg_individualorfamily", value);
				this.OnPropertyChanged("ipg_IndividualOrFamily");
			}
		}
		
		/// <summary>
		/// [Deprecated. User Coverage Level instead] Individual or Family benefit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_individualorfamily")]
		public virtual ipg_individualorfamilybenefits? ipg_IndividualOrFamilyEnum
		{
			get
			{
				return ((ipg_individualorfamilybenefits?)(EntityOptionSetEnum.GetEnum(this, "ipg_individualorfamily")));
			}
			set
			{
				this.OnPropertyChanging("ipg_IndividualOrFamily");
				this.SetAttributeValue("ipg_individualorfamily", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_IndividualOrFamily");
			}
		}
		
		/// <summary>
		/// In or Out-of-Network benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_inoutnetwork")]
		public System.Nullable<bool> ipg_InOutNetwork
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_inoutnetwork");
			}
			set
			{
				this.OnPropertyChanging("ipg_InOutNetwork");
				this.SetAttributeValue("ipg_inoutnetwork", value);
				this.OnPropertyChanged("ipg_InOutNetwork");
			}
		}
		
		/// <summary>
		/// Drop down contains the insurance type, selected from the below list:
		///Other Government
		///EPO
		///EPO
		///HMO
		///HMO
		///PPO
		///POS
		///Indemnity
		///Other
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_insurancetype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ipg_insurancetype
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ipg_insurancetype");
			}
			set
			{
				this.OnPropertyChanging("ipg_insurancetype");
				this.SetAttributeValue("ipg_insurancetype", value);
				this.OnPropertyChanged("ipg_insurancetype");
			}
		}
		
		/// <summary>
		/// Drop down contains the insurance type, selected from the below list:
		///Other Government
		///EPO
		///EPO
		///HMO
		///HMO
		///PPO
		///POS
		///Indemnity
		///Other
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_insurancetype")]
		public virtual ipg_CarrierPlanTypes1? ipg_insurancetypeEnum
		{
			get
			{
				return ((ipg_CarrierPlanTypes1?)(EntityOptionSetEnum.GetEnum(this, "ipg_insurancetype")));
			}
			set
			{
				this.OnPropertyChanging("ipg_insurancetype");
				this.SetAttributeValue("ipg_insurancetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ipg_insurancetype");
			}
		}
		
		/// <summary>
		/// Is Durable Medical Equipment benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_isdme")]
		public System.Nullable<bool> ipg_IsDME
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ipg_isdme");
			}
			set
			{
				this.OnPropertyChanging("ipg_IsDME");
				this.SetAttributeValue("ipg_isdme", value);
				this.OnPropertyChanged("ipg_IsDME");
			}
		}
		
		/// <summary>
		/// Represents the percentage of member responsibility before OOP
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_membercoinsurance")]
		public System.Nullable<double> ipg_MemberCoinsurance
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("ipg_membercoinsurance");
			}
			set
			{
				this.OnPropertyChanging("ipg_MemberCoinsurance");
				this.SetAttributeValue("ipg_membercoinsurance", value);
				this.OnPropertyChanged("ipg_MemberCoinsurance");
			}
		}
		
		/// <summary>
		/// Represents benefit member id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberid")]
		public string ipg_MemberID
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_memberid");
			}
			set
			{
				this.OnPropertyChanging("ipg_MemberID");
				this.SetAttributeValue("ipg_memberid", value);
				this.OnPropertyChanged("ipg_MemberID");
			}
		}
		
		/// <summary>
		/// Represents the maximum out of pocket for the member
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberoopmax")]
		public Microsoft.Xrm.Sdk.Money ipg_MemberOOPMax
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_memberoopmax");
			}
			set
			{
				this.OnPropertyChanging("ipg_MemberOOPMax");
				this.SetAttributeValue("ipg_memberoopmax", value);
				this.OnPropertyChanged("ipg_MemberOOPMax");
			}
		}
		
		/// <summary>
		/// Value of the Member OOP Max in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberoopmax_base")]
		public Microsoft.Xrm.Sdk.Money ipg_memberoopmax_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_memberoopmax_base");
			}
		}
		
		/// <summary>
		/// Represents out of pocket met during the contract year.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberoopmet")]
		public Microsoft.Xrm.Sdk.Money ipg_MemberOOPMet
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_memberoopmet");
			}
			set
			{
				this.OnPropertyChanging("ipg_MemberOOPMet");
				this.SetAttributeValue("ipg_memberoopmet", value);
				this.OnPropertyChanged("ipg_MemberOOPMet");
			}
		}
		
		/// <summary>
		/// Value of the Member OOP Met in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberoopmet_base")]
		public Microsoft.Xrm.Sdk.Money ipg_memberoopmet_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_memberoopmet_base");
			}
		}
		
		/// <summary>
		/// Member OOP Remaining
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberoopremainingcalculated")]
		public Microsoft.Xrm.Sdk.Money ipg_MemberOOPRemainingCalculated
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_memberoopremainingcalculated");
			}
			set
			{
				this.OnPropertyChanging("ipg_MemberOOPRemainingCalculated");
				this.SetAttributeValue("ipg_memberoopremainingcalculated", value);
				this.OnPropertyChanged("ipg_MemberOOPRemainingCalculated");
			}
		}
		
		/// <summary>
		/// Value of the Member OOP Remaining in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_memberoopremainingcalculated_base")]
		public Microsoft.Xrm.Sdk.Money ipg_memberoopremainingcalculated_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ipg_memberoopremainingcalculated_base");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_name")]
		public string ipg_name
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_name");
			}
			set
			{
				this.OnPropertyChanging("ipg_name");
				this.SetAttributeValue("ipg_name", value);
				this.OnPropertyChanged("ipg_name");
			}
		}
		
		/// <summary>
		/// Who obtained the benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_obtainedby")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_ObtainedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_obtainedby");
			}
			set
			{
				this.OnPropertyChanging("ipg_ObtainedBy");
				this.SetAttributeValue("ipg_obtainedby", value);
				this.OnPropertyChanged("ipg_ObtainedBy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_patientid")]
		public Microsoft.Xrm.Sdk.EntityReference ipg_patientid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ipg_patientid");
			}
			set
			{
				this.OnPropertyChanging("ipg_patientid");
				this.SetAttributeValue("ipg_patientid", value);
				this.OnPropertyChanged("ipg_patientid");
			}
		}
		
		/// <summary>
		/// Represents employer of the patient/primary insurance holder.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ipg_plansponsor")]
		public string ipg_PlanSponsor
		{
			get
			{
				return this.GetAttributeValue<string>("ipg_plansponsor");
			}
			set
			{
				this.OnPropertyChanging("ipg_PlanSponsor");
				this.SetAttributeValue("ipg_plansponsor", value);
				this.OnPropertyChanged("ipg_PlanSponsor");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Insight.Intake.ipg_benefitState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Insight.Intake.ipg_benefitState)(System.Enum.ToObject(typeof(Insight.Intake.ipg_benefitState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ipg_benefit_StatusCode? StatusCodeEnum
		{
			get
			{
				return ((ipg_benefit_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ipg_benefit(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ipg_benefitid"] = base.Id;
                        break;
                    case "ipg_benefitid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}